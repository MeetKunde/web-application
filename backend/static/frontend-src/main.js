(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["main"],{

/***/ 8255:
/*!*******************************************************!*\
  !*** ./$_lazy_route_resources/ lazy namespace object ***!
  \*******************************************************/
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 8255;
module.exports = webpackEmptyAsyncContext;

/***/ }),

/***/ 6854:
/*!**********************************!*\
  !*** ./src/app/canvasManager.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Module": () => (/* binding */ Module),
/* harmony export */   "moduleOverrides": () => (/* binding */ moduleOverrides)
/* harmony export */ });
/* module decorator */ module = __webpack_require__.hmd(module);
// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module != 'undefined' ? Module : {}; // See https://caniuse.com/mdn-javascript_builtins_object_assign
// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// {{PRE_JSES}}
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.

var moduleOverrides = Object.assign({}, Module);
var arguments_ = [];
var thisProgram = './this.program';

var quit_ = (status, toThrow) => {
  throw toThrow;
}; // Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).
// Attempt to auto-detect the environment


var ENVIRONMENT_IS_WEB = typeof window == 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function'; // N.b. Electron.js environment is simultaneously a NODE-environment, but
// also a web environment.

var ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module['ENVIRONMENT']) {
  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');
} // `/` should be present at the end if `scriptDirectory` is not empty


var scriptDirectory = '';

function locateFile(path) {
  if (Module['locateFile']) {
    return Module['locateFile'](path, scriptDirectory);
  }

  return scriptDirectory + path;
} // Hooks that are implemented differently in different runtime environments.


var read_, readAsync, readBinary, setWindowTitle; // Normally we don't log exceptions but instead let them bubble out the top
// level where the embedding environment (e.g. the browser) can handle
// them.
// However under v8 and node we sometimes exit the process direcly in which case
// its up to use us to log the exception before exiting.
// If we fix https://github.com/emscripten-core/emscripten/issues/15080
// this may no longer be needed under node.

function logExceptionOnExit(e) {
  if (e instanceof ExitStatus) return;
  let toLog = e;

  if (e && typeof e == 'object' && e.stack) {
    toLog = [e, e.stack];
  }

  err('exiting due to exception: ' + toLog);
}

var fs;
var nodePath;
var requireNodeFS;

if (ENVIRONMENT_IS_NODE) {
  if (!(typeof process == 'object' && "function" == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');

  if (ENVIRONMENT_IS_WORKER) {
    scriptDirectory = __webpack_require__(/*! path */ 1142).dirname(scriptDirectory) + '/';
  } else {
    scriptDirectory = __dirname + '/';
  } // include: node_shell_read.js


  requireNodeFS = () => {
    // Use nodePath as the indicator for these not being initialized,
    // since in some environments a global fs may have already been
    // created.
    if (!nodePath) {
      fs = __webpack_require__(/*! fs */ 8737);
      nodePath = __webpack_require__(/*! path */ 1142);
    }
  };

  read_ = function shell_read(filename, binary) {
    requireNodeFS();
    filename = nodePath['normalize'](filename);
    return fs.readFileSync(filename, binary ? undefined : 'utf8');
  };

  readBinary = filename => {
    var ret = read_(filename, true);

    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }

    assert(ret.buffer);
    return ret;
  };

  readAsync = (filename, onload, onerror) => {
    requireNodeFS();
    filename = nodePath['normalize'](filename);
    fs.readFile(filename, function (err, data) {
      if (err) onerror(err);else onload(data.buffer);
    });
  }; // end include: node_shell_read.js


  if (process['argv'].length > 1) {
    thisProgram = process['argv'][1].replace(/\\/g, '/');
  }

  arguments_ = process['argv'].slice(2);

  if (true) {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function (ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  }); // Without this older versions of node (< v15) will log unhandled rejections
  // but return 0, which is not normally the desired behaviour.  This is
  // not be needed with node v15 and about because it is now the default
  // behaviour:
  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode

  process['on']('unhandledRejection', function (reason) {
    throw reason;
  });

  quit_ = (status, toThrow) => {
    if (keepRuntimeAlive()) {
      process['exitCode'] = status;
      throw toThrow;
    }

    logExceptionOnExit(toThrow);
    process['exit'](status);
  };

  Module['inspect'] = function () {
    return '[Emscripten Module object]';
  };
} else if (ENVIRONMENT_IS_SHELL) {
  if (typeof process == 'object' && "function" === 'function' || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');

  if (typeof read != 'undefined') {
    read_ = function shell_read(f) {
      return read(f);
    };
  }

  readBinary = function readBinary(f) {
    let data;

    if (typeof readbuffer == 'function') {
      return new Uint8Array(readbuffer(f));
    }

    data = read(f, 'binary');
    assert(typeof data == 'object');
    return data;
  };

  readAsync = function readAsync(f, onload, onerror) {
    setTimeout(() => onload(readBinary(f)), 0);
  };

  if (typeof scriptArgs != 'undefined') {
    arguments_ = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    arguments_ = arguments;
  }

  if (typeof quit == 'function') {
    quit_ = (status, toThrow) => {
      logExceptionOnExit(toThrow);
      quit(status);
    };
  }

  if (typeof print != 'undefined') {
    // Prefer to use print/printErr where they exist, as they usually work better.
    if (typeof console == 'undefined') console =
    /** @type{!Console} */
    {};
    console.log =
    /** @type{!function(this:Console, ...*): undefined} */
    print;
    console.warn = console.error =
    /** @type{!function(this:Console, ...*): undefined} */
    typeof printErr != 'undefined' ? printErr : print;
  }
} else // Note that this includes Node.js workers when relevant (pthreads is enabled).
  // Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and
  // ENVIRONMENT_IS_NODE.
  if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
    if (ENVIRONMENT_IS_WORKER) {
      // Check worker, not web, since window could be polyfilled
      scriptDirectory = self.location.href;
    } else if (typeof document != 'undefined' && document.currentScript) {
      // web
      scriptDirectory = document.currentScript.src;
    } // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
    // otherwise, slice off the final part of the url to find the script directory.
    // if scriptDirectory does not contain a slash, lastIndexOf will return -1,
    // and scriptDirectory will correctly be replaced with an empty string.
    // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),
    // they are removed because they could contain a slash.


    if (scriptDirectory.indexOf('blob:') !== 0) {
      scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf('/') + 1);
    } else {
      scriptDirectory = '';
    }

    if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)'); // Differentiate the Web Worker from the Node Worker case, as reading must
    // be done differently.

    {
      // include: web_or_worker_shell_read.js
      read_ = url => {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.send(null);
        return xhr.responseText;
      };

      if (ENVIRONMENT_IS_WORKER) {
        readBinary = url => {
          var xhr = new XMLHttpRequest();
          xhr.open('GET', url, false);
          xhr.responseType = 'arraybuffer';
          xhr.send(null);
          return new Uint8Array(
          /** @type{!ArrayBuffer} */
          xhr.response);
        };
      }

      readAsync = (url, onload, onerror) => {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';

        xhr.onload = () => {
          if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
            // file URLs can return 0
            onload(xhr.response);
            return;
          }

          onerror();
        };

        xhr.onerror = onerror;
        xhr.send(null);
      }; // end include: web_or_worker_shell_read.js

    }

    setWindowTitle = title => document.title = title;
  } else {
    throw new Error('environment detection error');
  }

var out = Module['print'] || console.log.bind(console);
var err = Module['printErr'] || console.warn.bind(console); // Merge back in the overrides

Object.assign(Module, moduleOverrides); // Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.

moduleOverrides = null;
checkIncomingModuleAPI(); // Emit code to handle expected values on the Module object. This applies Module.x
// to the proper local x. This has two benefits: first, we only emit it if it is
// expected to arrive, and second, by using a local everywhere else that can be
// minified.

if (Module['arguments']) arguments_ = Module['arguments'];
legacyModuleProp('arguments', 'arguments_');
if (Module['thisProgram']) thisProgram = Module['thisProgram'];
legacyModuleProp('thisProgram', 'thisProgram');
if (Module['quit']) quit_ = Module['quit'];
legacyModuleProp('quit', 'quit_'); // perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message
// Assertions on removed incoming Module JS APIs.

assert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');
assert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');
assert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');
assert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');
assert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');
legacyModuleProp('read', 'read_');
legacyModuleProp('readAsync', 'readAsync');
legacyModuleProp('readBinary', 'readBinary');
legacyModuleProp('setWindowTitle', 'setWindowTitle');
var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';
var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';
var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';
var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';
assert(!ENVIRONMENT_IS_SHELL, "shell environment detected but not enabled at build time.  Add 'shell' to `-s ENVIRONMENT` to enable.");
var STACK_ALIGN = 16;
var POINTER_SIZE = 4;

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1':
    case 'i8':
      return 1;

    case 'i16':
      return 2;

    case 'i32':
      return 4;

    case 'i64':
      return 8;

    case 'float':
      return 4;

    case 'double':
      return 8;

    default:
      {
        if (type[type.length - 1] === '*') {
          return POINTER_SIZE;
        } else if (type[0] === 'i') {
          const bits = Number(type.substr(1));
          assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);
          return bits / 8;
        } else {
          return 0;
        }
      }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};

  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    err(text);
  }
} // include: runtime_functions.js
// Wraps a JS function as a wasm function with a given signature.


function convertJsFunctionToWasm(func, sig) {
  // If the type reflection proposal is available, use the new
  // "WebAssembly.Function" constructor.
  // Otherwise, construct a minimal wasm module importing the JS function and
  // re-exporting it.
  if (typeof WebAssembly.Function == "function") {
    var typeNames = {
      'i': 'i32',
      'j': 'i64',
      'f': 'f32',
      'd': 'f64'
    };
    var type = {
      parameters: [],
      results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]
    };

    for (var i = 1; i < sig.length; ++i) {
      type.parameters.push(typeNames[sig[i]]);
    }

    return new WebAssembly.Function(type, func);
  } // The module is static, with the exception of the type section, which is
  // generated based on the signature passed in.


  var typeSection = [0x01, 0x00, 0x01, 0x60 // form: func
  ];
  var sigRet = sig.slice(0, 1);
  var sigParam = sig.slice(1);
  var typeCodes = {
    'i': 0x7f,
    'j': 0x7e,
    'f': 0x7d,
    'd': 0x7c // f64

  }; // Parameters, length + signatures

  typeSection.push(sigParam.length);

  for (var i = 0; i < sigParam.length; ++i) {
    typeSection.push(typeCodes[sigParam[i]]);
  } // Return values, length + signatures
  // With no multi-return in MVP, either 0 (void) or 1 (anything else)


  if (sigRet == 'v') {
    typeSection.push(0x00);
  } else {
    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);
  } // Write the overall length of the type section back into the section header
  // (excepting the 2 bytes for the section id and length)


  typeSection[1] = typeSection.length - 2; // Rest of the module is static

  var bytes = new Uint8Array([0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00 // version: 1
  ].concat(typeSection, [0x02, 0x07, // (import "e" "f" (func 0 (type 0)))
  0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00, 0x07, 0x05, // (export "f" (func 0 (type 0)))
  0x01, 0x01, 0x66, 0x00, 0x00])); // We can compile this wasm module synchronously because it is very small.
  // This accepts an import (at "e.f"), that it reroutes to an export (at "f")

  var module = new WebAssembly.Module(bytes);
  var instance = new WebAssembly.Instance(module, {
    'e': {
      'f': func
    }
  });
  var wrappedFunc = instance.exports['f'];
  return wrappedFunc;
}

var freeTableIndexes = []; // Weak map of functions in the table to their indexes, created on first use.

var functionsInTableMap;

function getEmptyTableSlot() {
  // Reuse a free index if there is one, otherwise grow.
  if (freeTableIndexes.length) {
    return freeTableIndexes.pop();
  } // Grow the table


  try {
    wasmTable.grow(1);
  } catch (err) {
    if (!(err instanceof RangeError)) {
      throw err;
    }

    throw 'Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.';
  }

  return wasmTable.length - 1;
}

function updateTableMap(offset, count) {
  for (var i = offset; i < offset + count; i++) {
    var item = getWasmTableEntry(i); // Ignore null values.

    if (item) {
      functionsInTableMap.set(item, i);
    }
  }
}
/**
 * Add a function to the table.
 * 'sig' parameter is required if the function being added is a JS function.
 * @param {string=} sig
 */


function addFunction(func, sig) {
  assert(typeof func != 'undefined'); // Check if the function is already in the table, to ensure each function
  // gets a unique index. First, create the map if this is the first use.

  if (!functionsInTableMap) {
    functionsInTableMap = new WeakMap();
    updateTableMap(0, wasmTable.length);
  }

  if (functionsInTableMap.has(func)) {
    return functionsInTableMap.get(func);
  } // It's not in the table, add it now.


  var ret = getEmptyTableSlot(); // Set the new value.

  try {
    // Attempting to call this with JS function will cause of table.set() to fail
    setWasmTableEntry(ret, func);
  } catch (err) {
    if (!(err instanceof TypeError)) {
      throw err;
    }

    assert(typeof sig != 'undefined', 'Missing signature argument to addFunction: ' + func);
    var wrapped = convertJsFunctionToWasm(func, sig);
    setWasmTableEntry(ret, wrapped);
  }

  functionsInTableMap.set(func, ret);
  return ret;
}

function removeFunction(index) {
  functionsInTableMap.delete(getWasmTableEntry(index));
  freeTableIndexes.push(index);
} // end include: runtime_functions.js
// include: runtime_debug.js


function legacyModuleProp(prop, newName) {
  if (!Object.getOwnPropertyDescriptor(Module, prop)) {
    Object.defineProperty(Module, prop, {
      configurable: true,
      get: function () {
        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');
      }
    });
  }
}

function ignoredModuleProp(prop) {
  if (Object.getOwnPropertyDescriptor(Module, prop)) {
    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');
  }
}

function unexportedMessage(sym, isFSSybol) {
  var msg = "'" + sym + "' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)";

  if (isFSSybol) {
    msg += '. Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you';
  }

  return msg;
}

function unexportedRuntimeSymbol(sym, isFSSybol) {
  if (!Object.getOwnPropertyDescriptor(Module, sym)) {
    Object.defineProperty(Module, sym, {
      configurable: true,
      get: function () {
        abort(unexportedMessage(sym, isFSSybol));
      }
    });
  }
}

function unexportedRuntimeFunction(sym, isFSSybol) {
  if (!Object.getOwnPropertyDescriptor(Module, sym)) {
    Module[sym] = () => abort(unexportedMessage(sym, isFSSybol));
  }
} // end include: runtime_debug.js


var tempRet0 = 0;

var setTempRet0 = value => {
  tempRet0 = value;
};

var getTempRet0 = () => tempRet0; // === Preamble library stuff ===
// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html


var wasmBinary;
if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];
legacyModuleProp('wasmBinary', 'wasmBinary');
var noExitRuntime = Module['noExitRuntime'] || true;
legacyModuleProp('noExitRuntime', 'noExitRuntime');

if (typeof WebAssembly != 'object') {
  abort('no native wasm support detected');
} // include: runtime_safe_heap.js
// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.
// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)

/** @param {number} ptr
    @param {number} value
    @param {string} type
    @param {number|boolean=} noSafe */


function setValue(ptr, value, type = 'i8', noSafe) {
  if (type.charAt(type.length - 1) === '*') type = 'i32';

  switch (type) {
    case 'i1':
      HEAP8[ptr >> 0] = value;
      break;

    case 'i8':
      HEAP8[ptr >> 0] = value;
      break;

    case 'i16':
      HEAP16[ptr >> 1] = value;
      break;

    case 'i32':
      HEAP32[ptr >> 2] = value;
      break;

    case 'i64':
      tempI64 = [value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
      break;

    case 'float':
      HEAPF32[ptr >> 2] = value;
      break;

    case 'double':
      HEAPF64[ptr >> 3] = value;
      break;

    default:
      abort('invalid type for setValue: ' + type);
  }
}
/** @param {number} ptr
    @param {string} type
    @param {number|boolean=} noSafe */


function getValue(ptr, type = 'i8', noSafe) {
  if (type.charAt(type.length - 1) === '*') type = 'i32';

  switch (type) {
    case 'i1':
      return HEAP8[ptr >> 0];

    case 'i8':
      return HEAP8[ptr >> 0];

    case 'i16':
      return HEAP16[ptr >> 1];

    case 'i32':
      return HEAP32[ptr >> 2];

    case 'i64':
      return HEAP32[ptr >> 2];

    case 'float':
      return HEAPF32[ptr >> 2];

    case 'double':
      return Number(HEAPF64[ptr >> 3]);

    default:
      abort('invalid type for getValue: ' + type);
  }

  return null;
} // end include: runtime_safe_heap.js
// Wasm globals


var wasmMemory; //========================================
// Runtime essentials
//========================================
// whether we are quitting the application. no code should run after this.
// set in exit() and abort()

var ABORT = false; // set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.

var EXITSTATUS;
/** @type {function(*, string=)} */

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed' + (text ? ': ' + text : ''));
  }
} // Returns the C function with a specified identifier (for C++, you need to do manual name mangling)


function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function

  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
} // C calling interface.

/** @param {string|null=} returnType
    @param {Array=} argTypes
    @param {Arguments|Array=} args
    @param {Object=} opts */


function ccall(ident, returnType, argTypes, args, opts) {
  // For fast lookup of conversion functions
  var toC = {
    'string': function (str) {
      var ret = 0;

      if (str !== null && str !== undefined && str !== 0) {
        // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = stackAlloc(len);
        stringToUTF8(str, ret, len);
      }

      return ret;
    },
    'array': function (arr) {
      var ret = stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    }
  };

  function convertReturnValue(ret) {
    if (returnType === 'string') return UTF8ToString(ret);
    if (returnType === 'boolean') return Boolean(ret);
    return ret;
  }

  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== 'array', 'Return type should not be "array".');

  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];

      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }

  var ret = func.apply(null, cArgs);

  function onDone(ret) {
    if (stack !== 0) stackRestore(stack);
    return convertReturnValue(ret);
  }

  ret = onDone(ret);
  return ret;
}
/** @param {string=} returnType
    @param {Array=} argTypes
    @param {Object=} opts */


function cwrap(ident, returnType, argTypes, opts) {
  return function () {
    return ccall(ident, returnType, argTypes, arguments, opts);
  };
} // We used to include malloc/free by default in the past. Show a helpful error in
// builds with assertions.
// include: runtime_legacy.js


var ALLOC_NORMAL = 0; // Tries to use _malloc()

var ALLOC_STACK = 1; // Lives for the duration of the current function call

/**
 * allocate(): This function is no longer used by emscripten but is kept around to avoid
 *             breaking external users.
 *             You should normally not use allocate(), and instead allocate
 *             memory using _malloc()/stackAlloc(), initialize it with
 *             setValue(), and so forth.
 * @param {(Uint8Array|Array<number>)} slab: An array of data.
 * @param {number=} allocator : How to allocate memory, see ALLOC_*
 */

function allocate(slab, allocator) {
  var ret;
  assert(typeof allocator == 'number', 'allocate no longer takes a type argument');
  assert(typeof slab != 'number', 'allocate no longer takes a number as arg0');

  if (allocator == ALLOC_STACK) {
    ret = stackAlloc(slab.length);
  } else {
    ret = _malloc(slab.length);
  }

  if (!slab.subarray && !slab.slice) {
    slab = new Uint8Array(slab);
  }

  HEAPU8.set(slab, ret);
  return ret;
} // end include: runtime_legacy.js
// include: runtime_strings.js
// runtime_strings.js: Strings related runtime functions that are part of both MINIMAL_RUNTIME and regular runtime.


var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined; // Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

/**
 * heapOrArray is either a regular array, or a JavaScript typed array view.
 * @param {number} idx
 * @param {number=} maxBytesToRead
 * @return {string}
 */

function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {
  var endIdx = idx + maxBytesToRead;
  var endPtr = idx; // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)

  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;

  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
    return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
  } else {
    var str = ''; // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that

    while (idx < endPtr) {
      // For UTF8 byte structure, see:
      // http://en.wikipedia.org/wiki/UTF-8#Description
      // https://www.ietf.org/rfc/rfc2279.txt
      // https://tools.ietf.org/html/rfc3629
      var u0 = heapOrArray[idx++];

      if (!(u0 & 0x80)) {
        str += String.fromCharCode(u0);
        continue;
      }

      var u1 = heapOrArray[idx++] & 63;

      if ((u0 & 0xE0) == 0xC0) {
        str += String.fromCharCode((u0 & 31) << 6 | u1);
        continue;
      }

      var u2 = heapOrArray[idx++] & 63;

      if ((u0 & 0xF0) == 0xE0) {
        u0 = (u0 & 15) << 12 | u1 << 6 | u2;
      } else {
        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');
        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;
      }

      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);
      }
    }
  }

  return str;
} // Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a
// copy of that string as a Javascript String object.
// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit
//                 this parameter to scan the string until the first \0 byte. If maxBytesToRead is
//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the
//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will
//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)
//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may
//                 throw JS JIT optimizations off, so it is worth to consider consistently using one
//                 style or the other.

/**
 * @param {number} ptr
 * @param {number=} maxBytesToRead
 * @return {string}
 */


function UTF8ToString(ptr, maxBytesToRead) {
  ;
  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';
} // Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   heap: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array.
//                    This count should include the null terminator,
//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.


function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;
  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.

  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate

    if (u >= 0xD800 && u <= 0xDFFF) {
      var u1 = str.charCodeAt(++i);
      u = 0x10000 + ((u & 0x3FF) << 10) | u1 & 0x3FF;
    }

    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      heap[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      heap[outIdx++] = 0xC0 | u >> 6;
      heap[outIdx++] = 0x80 | u & 63;
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      heap[outIdx++] = 0xE0 | u >> 12;
      heap[outIdx++] = 0x80 | u >> 6 & 63;
      heap[outIdx++] = 0x80 | u & 63;
    } else {
      if (outIdx + 3 >= endIdx) break;
      if (u > 0x10FFFF) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');
      heap[outIdx++] = 0xF0 | u >> 18;
      heap[outIdx++] = 0x80 | u >> 12 & 63;
      heap[outIdx++] = 0x80 | u >> 6 & 63;
      heap[outIdx++] = 0x80 | u & 63;
    }
  } // Null-terminate the pointer to the buffer.


  heap[outIdx] = 0;
  return outIdx - startIdx;
} // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.


function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
} // Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.


function lengthBytesUTF8(str) {
  var len = 0;

  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate

    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | str.charCodeAt(++i) & 0x3FF;
    if (u <= 0x7F) ++len;else if (u <= 0x7FF) len += 2;else if (u <= 0xFFFF) len += 3;else len += 4;
  }

  return len;
} // end include: runtime_strings.js
// include: runtime_strings_extra.js
// runtime_strings_extra.js: Strings related runtime functions that are available only in regular runtime.
// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.


function AsciiToString(ptr) {
  var str = '';

  while (1) {
    var ch = HEAPU8[ptr++ >> 0];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
} // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.


function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
} // Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.


var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;

function UTF16ToString(ptr, maxBytesToRead) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr; // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.

  var idx = endPtr >> 1;
  var maxIdx = idx + maxBytesToRead / 2; // If maxBytesToRead is not passed explicitly, it will be undefined, and this
  // will always evaluate to true. This saves on code size.

  while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;

  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var str = ''; // If maxBytesToRead is not passed explicitly, it will be undefined, and the for-loop's condition
    // will always evaluate to true. The loop is then terminated on the first null char.

    for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {
      var codeUnit = HEAP16[ptr + i * 2 >> 1];
      if (codeUnit == 0) break; // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.

      str += String.fromCharCode(codeUnit);
    }

    return str;
  }
} // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.


function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!'); // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.

  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }

  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.

  var startPtr = outPtr;
  var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;

  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate

    HEAP16[outPtr >> 1] = codeUnit;
    outPtr += 2;
  } // Null-terminate the pointer to the HEAP.


  HEAP16[outPtr >> 1] = 0;
  return outPtr - startPtr;
} // Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.


function lengthBytesUTF16(str) {
  return str.length * 2;
}

function UTF32ToString(ptr, maxBytesToRead) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;
  var str = ''; // If maxBytesToRead is not passed explicitly, it will be undefined, and this
  // will always evaluate to true. This saves on code size.

  while (!(i >= maxBytesToRead / 4)) {
    var utf32 = HEAP32[ptr + i * 4 >> 2];
    if (utf32 == 0) break;
    ++i; // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3

    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);
    } else {
      str += String.fromCharCode(utf32);
    }
  }

  return str;
} // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.


function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!'); // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.

  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }

  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;

  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate

    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | trailSurrogate & 0x3FF;
    }

    HEAP32[outPtr >> 2] = codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  } // Null-terminate the pointer to the HEAP.


  HEAP32[outPtr >> 2] = 0;
  return outPtr - startPtr;
} // Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.


function lengthBytesUTF32(str) {
  var len = 0;

  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.

    len += 4;
  }

  return len;
} // Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.


function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;

  var ret = _malloc(size);

  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
} // Allocate stack space for a JS string, and write it there.


function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
} // Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.

/** @deprecated
    @param {boolean=} dontAddNull */


function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');
  var
  /** @type {number} */
  lastChar,
  /** @type {number} */
  end;

  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }

  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)');
  HEAP8.set(array, buffer);
}
/** @param {boolean=} dontAddNull */


function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === (str.charCodeAt(i) & 0xff));
    HEAP8[buffer++ >> 0] = str.charCodeAt(i);
  } // Null-terminate the pointer to the HEAP.


  if (!dontAddNull) HEAP8[buffer >> 0] = 0;
} // end include: runtime_strings_extra.js
// Memory management


var HEAP,
/** @type {!ArrayBuffer} */
buffer,
/** @type {!Int8Array} */
HEAP8,
/** @type {!Uint8Array} */
HEAPU8,
/** @type {!Int16Array} */
HEAP16,
/** @type {!Uint16Array} */
HEAPU16,
/** @type {!Int32Array} */
HEAP32,
/** @type {!Uint32Array} */
HEAPU32,
/** @type {!Float32Array} */
HEAPF32,
/** @type {!Float64Array} */
HEAPF64;

function updateGlobalBufferAndViews(buf) {
  buffer = buf;
  Module['HEAP8'] = HEAP8 = new Int8Array(buf);
  Module['HEAP16'] = HEAP16 = new Int16Array(buf);
  Module['HEAP32'] = HEAP32 = new Int32Array(buf);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);
}

var TOTAL_STACK = 5242880;
if (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime');
var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;
legacyModuleProp('INITIAL_MEMORY', 'INITIAL_MEMORY');
assert(INITIAL_MEMORY >= TOTAL_STACK, 'INITIAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')'); // check for full engine support (use string 'subarray' to avoid closure compiler confusion)

assert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, 'JS engine does not provide full typed array support'); // If memory is defined in wasm, the user can't provide it.

assert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -s IMPORTED_MEMORY to define wasmMemory externally');
assert(INITIAL_MEMORY == 16777216, 'Detected runtime INITIAL_MEMORY setting.  Use -s IMPORTED_MEMORY to define wasmMemory dynamically'); // include: runtime_init_table.js
// In regular non-RELOCATABLE mode the table is exported
// from the wasm module and this will be assigned once
// the exports are available.

var wasmTable; // end include: runtime_init_table.js
// include: runtime_stack_check.js
// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.

function writeStackCookie() {
  var max = _emscripten_stack_get_end();

  assert((max & 3) == 0); // The stack grow downwards towards _emscripten_stack_get_end.
  // We write cookies to the final two words in the stack and detect if they are
  // ever overwritten.

  HEAP32[max >> 2] = 0x2135467;
  HEAP32[max + 4 >> 2] = 0x89BACDFE; // Also test the global address 0 for integrity.

  HEAP32[0] = 0x63736d65;
  /* 'emsc' */
}

function checkStackCookie() {
  if (ABORT) return;

  var max = _emscripten_stack_get_end();

  var cookie1 = HEAPU32[max >> 2];
  var cookie2 = HEAPU32[max + 4 >> 2];

  if (cookie1 != 0x2135467 || cookie2 != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x' + cookie2.toString(16) + ' 0x' + cookie1.toString(16));
  } // Also test the global address 0 for integrity.


  if (HEAP32[0] !== 0x63736d65
  /* 'emsc' */
  ) abort('Runtime error: The application has corrupted its heap memory area (address zero)!');
} // end include: runtime_stack_check.js
// include: runtime_assertions.js
// Endianness check


(function () {
  var h16 = new Int16Array(1);
  var h8 = new Int8Array(h16.buffer);
  h16[0] = 0x6373;
  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -s SUPPORT_BIG_ENDIAN=1 to bypass)';
})(); // end include: runtime_assertions.js


var __ATPRERUN__ = []; // functions called before the runtime is initialized

var __ATINIT__ = []; // functions called during startup

var __ATEXIT__ = []; // functions called during shutdown

var __ATPOSTRUN__ = []; // functions called after the main() is called

var runtimeInitialized = false;

function keepRuntimeAlive() {
  return noExitRuntime;
}

function preRun() {
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];

    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
  checkStackCookie();
  assert(!runtimeInitialized);
  runtimeInitialized = true;
  if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
  FS.ignorePermissions = false;
  TTY.init();
  callRuntimeCallbacks(__ATINIT__);
}

function postRun() {
  checkStackCookie();

  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];

    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnExit(cb) {}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
} // include: runtime_math.js
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc


assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill'); // end include: runtime_math.js
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.

var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;

  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
}

function addRunDependency(id) {
  runDependencies++;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;

    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function () {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }

        var shown = false;

        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            err('still waiting on run dependencies:');
          }

          err('dependency: ' + dep);
        }

        if (shown) {
          err('(end of list)');
        }
      }, 10000);
    }
  } else {
    err('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    err('warning: run dependency removed without ID');
  }

  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }

    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data

Module["preloadedAudios"] = {}; // maps url to audio data

/** @param {string|number=} what */

function abort(what) {
  {
    if (Module['onAbort']) {
      Module['onAbort'](what);
    }
  }
  what = 'Aborted(' + what + ')'; // TODO(sbc): Should we remove printing and leave it up to whoever
  // catches the exception?

  err(what);
  ABORT = true;
  EXITSTATUS = 1; // Use a wasm runtime error, because a JS error might be seen as a foreign
  // exception, which means we'd run destructors on it. We need the error to
  // simply make the program stop.
  // Suppress closure compiler warning here. Closure compiler's builtin extern
  // defintion for WebAssembly.RuntimeError claims it takes no arguments even
  // though it can.
  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.

  /** @suppress {checkTypes} */

  var e = new WebAssembly.RuntimeError(what); // Throw the error whether or not MODULARIZE is set because abort is used
  // in code paths apart from instantiation where an exception is expected
  // to be thrown when abort is called.

  throw e;
} // {{MEM_INITIALIZER}}
// include: memoryprofiler.js
// end include: memoryprofiler.js
// include: URIUtils.js
// Prefix of data URIs emitted by SINGLE_FILE and related options.


var dataURIPrefix = 'data:application/octet-stream;base64,'; // Indicates whether filename is a base64 data URI.

function isDataURI(filename) {
  // Prefix of data URIs emitted by SINGLE_FILE and related options.
  return filename.startsWith(dataURIPrefix);
} // Indicates whether filename is delivered via file protocol (as opposed to http/https)


function isFileURI(filename) {
  return filename.startsWith('file://');
} // end include: URIUtils.js

/** @param {boolean=} fixedasm */


function createExportWrapper(name, fixedasm) {
  return function () {
    var displayName = name;
    var asm = fixedasm;

    if (!fixedasm) {
      asm = Module['asm'];
    }

    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');

    if (!asm[name]) {
      assert(asm[name], 'exported native function `' + displayName + '` not found');
    }

    return asm[name].apply(null, arguments);
  };
}

var wasmBinaryFile;
wasmBinaryFile = 'canvasManager.wasm';

if (!isDataURI(wasmBinaryFile)) {
  wasmBinaryFile = locateFile(wasmBinaryFile);
}

function getBinary(file) {
  try {
    if (file == wasmBinaryFile && wasmBinary) {
      return new Uint8Array(wasmBinary);
    }

    if (readBinary) {
      return readBinary(file);
    } else {
      throw "both async and sync fetching of the wasm failed";
    }
  } catch (err) {
    abort(err);
  }
}

function getBinaryPromise() {
  // If we don't have the binary yet, try to to load it asynchronously.
  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.
  // See https://github.com/github/fetch/pull/92#issuecomment-140665932
  // Cordova or Electron apps are typically loaded from a file:// url.
  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.
  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
    if (typeof fetch == 'function' && !isFileURI(wasmBinaryFile)) {
      return fetch(wasmBinaryFile, {
        credentials: 'same-origin'
      }).then(function (response) {
        if (!response['ok']) {
          throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
        }

        return response['arrayBuffer']();
      }).catch(function () {
        return getBinary(wasmBinaryFile);
      });
    } else {
      if (readAsync) {
        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)
        return new Promise(function (resolve, reject) {
          readAsync(wasmBinaryFile, function (response) {
            resolve(new Uint8Array(
            /** @type{!ArrayBuffer} */
            response));
          }, reject);
        });
      }
    }
  } // Otherwise, getBinary should be able to get it synchronously


  return Promise.resolve().then(function () {
    return getBinary(wasmBinaryFile);
  });
}

var wasmOffsetConverter; // include: wasm_offset_converter.js

/** @constructor */

function WasmOffsetConverter(wasmBytes, wasmModule) {
  // This class parses a WASM binary file, and constructs a mapping from
  // function indices to the start of their code in the binary file, as well
  // as parsing the name section to allow conversion of offsets to function names.
  //
  // The main purpose of this module is to enable the conversion of function
  // index and offset from start of function to an offset into the WASM binary.
  // This is needed to look up the WASM source map as well as generate
  // consistent program counter representations given v8's non-standard
  // WASM stack trace format.
  //
  // v8 bug: https://crbug.com/v8/9172
  //
  // This code is also used to check if the candidate source map offset is
  // actually part of the same function as the offset we are looking for,
  // as well as providing the function names for a given offset.
  // current byte offset into the WASM binary, as we parse it
  // the first section starts at offset 8.
  var offset = 8; // the index of the next function we see in the binary

  var funcidx = 0; // map from function index to byte offset in WASM binary

  this.offset_map = {};
  this.func_starts = []; // map from function index to names in WASM binary

  this.name_map = {}; // number of imported functions this module has

  this.import_functions = 0; // the buffer unsignedLEB128 will read from.

  var buffer = wasmBytes;

  function unsignedLEB128() {
    // consumes an unsigned LEB128 integer starting at `offset`.
    // changes `offset` to immediately after the integer
    var result = 0;
    var shift = 0;

    do {
      var byte = buffer[offset++];
      result += (byte & 0x7F) << shift;
      shift += 7;
    } while (byte & 0x80);

    return result;
  }

  function skipLimits() {
    var flags = unsignedLEB128();
    unsignedLEB128(); // initial size

    var hasMax = (flags & 1) != 0;

    if (hasMax) {
      unsignedLEB128();
    }
  }

  binary_parse: while (offset < buffer.length) {
    var start = offset;
    var type = buffer[offset++];
    var end = unsignedLEB128() + offset;

    switch (type) {
      case 2:
        // import section
        // we need to find all function imports and increment funcidx for each one
        // since functions defined in the module are numbered after all imports
        var count = unsignedLEB128();

        while (count-- > 0) {
          // skip module
          offset = unsignedLEB128() + offset; // skip name

          offset = unsignedLEB128() + offset;

          switch (buffer[offset++]) {
            case 0:
              // function import
              ++funcidx;
              unsignedLEB128(); // skip function type

              break;

            case 1:
              // table import
              ++offset; // FIXME: should be SLEB128

              skipLimits();
              break;

            case 2:
              // memory import
              skipLimits();
              break;

            case 3:
              // global import
              offset += 2; // skip type id byte and mutability byte

              break;

            default:
              throw 'bad import kind';
          }
        }

        this.import_functions = funcidx;
        break;

      case 10:
        // code section
        var count = unsignedLEB128();

        while (count-- > 0) {
          var size = unsignedLEB128();
          this.offset_map[funcidx++] = offset;
          this.func_starts.push(offset);
          offset += size;
        }

        break binary_parse;
    }

    offset = end;
  }

  var sections = WebAssembly.Module.customSections(wasmModule, "name");

  for (var i = 0; i < sections.length; ++i) {
    buffer = new Uint8Array(sections[i]);
    if (buffer[0] != 1) // not a function name section
      continue;
    offset = 1;
    unsignedLEB128(); // skip byte count

    var count = unsignedLEB128();

    while (count-- > 0) {
      var index = unsignedLEB128();
      var length = unsignedLEB128();
      this.name_map[index] = UTF8ArrayToString(buffer, offset, length);
      offset += length;
    }
  }
}

WasmOffsetConverter.prototype.convert = function (funcidx, offset) {
  return this.offset_map[funcidx] + offset;
};

WasmOffsetConverter.prototype.getIndex = function (offset) {
  var lo = 0;
  var hi = this.func_starts.length;
  var mid;

  while (lo < hi) {
    mid = Math.floor((lo + hi) / 2);

    if (this.func_starts[mid] > offset) {
      hi = mid;
    } else {
      lo = mid + 1;
    }
  }

  return lo + this.import_functions - 1;
};

WasmOffsetConverter.prototype.isSameFunc = function (offset1, offset2) {
  return this.getIndex(offset1) == this.getIndex(offset2);
};

WasmOffsetConverter.prototype.getName = function (offset) {
  var index = this.getIndex(offset);
  return this.name_map[index] || 'wasm-function[' + index + ']';
}; // end include: wasm_offset_converter.js
// When using postMessage to send an object, it is processed by the structured clone algorithm.
// The prototype, and hence methods, on that object is then lost. This function adds back the lost prototype.
// This does not work with nested objects that has prototypes, but it suffices for WasmSourceMap and WasmOffsetConverter.


function resetPrototype(constructor, attrs) {
  var object = Object.create(constructor.prototype);
  return Object.assign(object, attrs);
} // Create the wasm instance.
// Receives the wasm imports, returns the exports.


function createWasm() {
  // prepare imports
  var info = {
    'env': asmLibraryArg,
    'wasi_snapshot_preview1': asmLibraryArg
  }; // Load the wasm module and create an instance of using native support in the JS engine.
  // handle a generated wasm instance, receiving its exports and
  // performing other necessary setup

  /** @param {WebAssembly.Module=} module*/

  function receiveInstance(instance, module) {
    var exports = instance.exports;
    Module['asm'] = exports;
    wasmMemory = Module['asm']['memory'];
    assert(wasmMemory, "memory not found in wasm exports"); // This assertion doesn't hold when emscripten is run in --post-link
    // mode.
    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.
    //assert(wasmMemory.buffer.byteLength === 16777216);

    updateGlobalBufferAndViews(wasmMemory.buffer);
    wasmTable = Module['asm']['__indirect_function_table'];
    assert(wasmTable, "table not found in wasm exports");
    addOnInit(Module['asm']['__wasm_call_ctors']);
    removeRunDependency('wasm-instantiate');
  } // we can't run yet (except in a pthread, where we have a custom sync instantiator)


  addRunDependency('wasm-instantiate'); // Prefer streaming instantiation if available.
  // Async compilation can be confusing when an error on the page overwrites Module
  // (for example, if the order of elements is wrong, and the one defining Module is
  // later), so we save Module and check it later.

  var trueModule = Module;

  function receiveInstantiationResult(result) {
    // 'result' is a ResultObject object which has both the module and instance.
    // receiveInstance() will swap in the exports (to Module.asm) so they can be called
    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');
    trueModule = null; // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.
    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.

    receiveInstance(result['instance']);
  }

  function instantiateArrayBuffer(receiver) {
    var savedBinary;
    return getBinaryPromise().then(function (binary) {
      savedBinary = binary;
      return WebAssembly.instantiate(binary, info);
    }).then(function (instance) {
      // wasmOffsetConverter needs to be assigned before calling the receiver
      // (receiveInstantiationResult).  See comments below in instantiateAsync.
      wasmOffsetConverter = new WasmOffsetConverter(savedBinary, instance.module);
      return instance;
    }).then(receiver, function (reason) {
      err('failed to asynchronously prepare wasm: ' + reason); // Warn on some common problems.

      if (isFileURI(wasmBinaryFile)) {
        err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');
      }

      abort(reason);
    });
  }

  function instantiateAsync() {
    if (!wasmBinary && typeof WebAssembly.instantiateStreaming == 'function' && !isDataURI(wasmBinaryFile) && // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.
    !isFileURI(wasmBinaryFile) && typeof fetch == 'function') {
      return fetch('http://127.0.0.1:8000/static/canvasManager.wasm', {
        credentials: 'same-origin'
      }).then(function (response) {
        // Suppress closure warning here since the upstream definition for
        // instantiateStreaming only allows Promise<Repsponse> rather than
        // an actual Response.
        // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.

        /** @suppress {checkTypes} */
        var result = WebAssembly.instantiateStreaming(response, info); // We need the wasm binary for the offset converter. Clone the response
        // in order to get its arrayBuffer (cloning should be more efficient
        // than doing another entire request).
        // (We must clone the response now in order to use it later, as if we
        // try to clone it asynchronously lower down then we will get a
        // "response was already consumed" error.)

        var clonedResponsePromise = response.clone().arrayBuffer();
        return result.then(function (instantiationResult) {
          // When using the offset converter, we must interpose here. First,
          // the instantiation result must arrive (if it fails, the error
          // handling later down will handle it). Once it arrives, we can
          // initialize the offset converter. And only then is it valid to
          // call receiveInstantiationResult, as that function will use the
          // offset converter (in the case of pthreads, it will create the
          // pthreads and send them the offsets along with the wasm instance).
          clonedResponsePromise.then(function (arrayBufferResult) {
            wasmOffsetConverter = new WasmOffsetConverter(new Uint8Array(arrayBufferResult), instantiationResult.module);
            receiveInstantiationResult(instantiationResult);
          }, function (reason) {
            err('failed to initialize offset-converter: ' + reason);
          });
        }, function (reason) {
          // We expect the most common failure cause to be a bad MIME type for the binary,
          // in which case falling back to ArrayBuffer instantiation should work.
          err('wasm streaming compile failed: ' + reason);
          err('falling back to ArrayBuffer instantiation');
          return instantiateArrayBuffer(receiveInstantiationResult);
        });
      });
    } else {
      return instantiateArrayBuffer(receiveInstantiationResult);
    }
  } // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback
  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel
  // to any other async startup actions they are performing.
  // Also pthreads and wasm workers initialize the wasm instance through this path.


  if (Module['instantiateWasm']) {
    wasmOffsetConverter = resetPrototype(WasmOffsetConverter, Module['wasmOffsetData']);

    try {
      var exports = Module['instantiateWasm'](info, receiveInstance);
      return exports;
    } catch (e) {
      err('Module.instantiateWasm callback failed with error: ' + e);
      return false;
    }
  }

  instantiateAsync();
  return {}; // no exports yet; we'll fill them in later
} // Globals used by JS i64 conversions (see makeSetValue)


var tempDouble;
var tempI64; // === Body ===

var ASM_CONSTS = {
  1064780: function () {
    return withBuiltinMalloc(function () {
      return allocateUTF8(Module['UBSAN_OPTIONS'] || 0);
    });
  },
  1064878: function () {
    var setting = Module['printWithColors'];

    if (setting != null) {
      return setting;
    } else {
      return ENVIRONMENT_IS_NODE && process.stderr.isTTY;
    }
  }
};

function callRuntimeCallbacks(callbacks) {
  while (callbacks.length > 0) {
    var callback = callbacks.shift();

    if (typeof callback == 'function') {
      callback(Module); // Pass the module as the first argument.

      continue;
    }

    var func = callback.func;

    if (typeof func == 'number') {
      if (callback.arg === undefined) {
        // Run the wasm function ptr with signature 'v'. If no function
        // with such signature was exported, this call does not need
        // to be emitted (and would confuse Closure)
        getWasmTableEntry(func)();
      } else {
        // If any function with signature 'vi' was exported, run
        // the callback with that signature.
        getWasmTableEntry(func)(callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

function withStackSave(f) {
  var stack = stackSave();
  var ret = f();
  stackRestore(stack);
  return ret;
}

function demangle(func) {
  warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex = /\b_Z[\w\d_]+/g;
  return text.replace(regex, function (x) {
    var y = demangle(x);
    return x === y ? x : y + ' [' + x + ']';
  });
}

var wasmTableMirror = [];

function getWasmTableEntry(funcPtr) {
  var func = wasmTableMirror[funcPtr];

  if (!func) {
    if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;
    wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);
  }

  assert(wasmTable.get(funcPtr) == func, "JavaScript-side Wasm function table mirror is out of date!");
  return func;
}

function handleException(e) {
  // Certain exception types we do not treat as errors since they are used for
  // internal control flow.
  // 1. ExitStatus, which is thrown by exit()
  // 2. "unwind", which is thrown by emscripten_unwind_to_js_event_loop() and others
  //    that wish to return to JS event loop.
  if (e instanceof ExitStatus || e == 'unwind') {
    return EXITSTATUS;
  }

  quit_(1, e);
}

function jsStackTrace() {
  var error = new Error();

  if (!error.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error();
    } catch (e) {
      error = e;
    }

    if (!error.stack) {
      return '(no stack trace available)';
    }
  }

  return error.stack.toString();
}

function setWasmTableEntry(idx, func) {
  wasmTable.set(idx, func);
  wasmTableMirror[idx] = func;
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}

function ___assert_fail(condition, filename, line, func) {
  abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);
}

function ___cxa_allocate_exception(size) {
  // Thrown object is prepended by exception metadata block
  return _malloc(size + 16) + 16;
}
/** @constructor */


function ExceptionInfo(excPtr) {
  this.excPtr = excPtr;
  this.ptr = excPtr - 16;

  this.set_type = function (type) {
    HEAP32[this.ptr + 4 >> 2] = type;
  };

  this.get_type = function () {
    return HEAP32[this.ptr + 4 >> 2];
  };

  this.set_destructor = function (destructor) {
    HEAP32[this.ptr + 8 >> 2] = destructor;
  };

  this.get_destructor = function () {
    return HEAP32[this.ptr + 8 >> 2];
  };

  this.set_refcount = function (refcount) {
    HEAP32[this.ptr >> 2] = refcount;
  };

  this.set_caught = function (caught) {
    caught = caught ? 1 : 0;
    HEAP8[this.ptr + 12 >> 0] = caught;
  };

  this.get_caught = function () {
    return HEAP8[this.ptr + 12 >> 0] != 0;
  };

  this.set_rethrown = function (rethrown) {
    rethrown = rethrown ? 1 : 0;
    HEAP8[this.ptr + 13 >> 0] = rethrown;
  };

  this.get_rethrown = function () {
    return HEAP8[this.ptr + 13 >> 0] != 0;
  }; // Initialize native structure fields. Should be called once after allocated.


  this.init = function (type, destructor) {
    this.set_type(type);
    this.set_destructor(destructor);
    this.set_refcount(0);
    this.set_caught(false);
    this.set_rethrown(false);
  };

  this.add_ref = function () {
    var value = HEAP32[this.ptr >> 2];
    HEAP32[this.ptr >> 2] = value + 1;
  }; // Returns true if last reference released.


  this.release_ref = function () {
    var prev = HEAP32[this.ptr >> 2];
    HEAP32[this.ptr >> 2] = prev - 1;
    assert(prev > 0);
    return prev === 1;
  };
}
/**
 * @constructor
 * @param {number=} ptr
 */


function CatchInfo(ptr) {
  this.free = function () {
    _free(this.ptr);

    this.ptr = 0;
  };

  this.set_base_ptr = function (basePtr) {
    HEAP32[this.ptr >> 2] = basePtr;
  };

  this.get_base_ptr = function () {
    return HEAP32[this.ptr >> 2];
  };

  this.set_adjusted_ptr = function (adjustedPtr) {
    HEAP32[this.ptr + 4 >> 2] = adjustedPtr;
  };

  this.get_adjusted_ptr_addr = function () {
    return this.ptr + 4;
  };

  this.get_adjusted_ptr = function () {
    return HEAP32[this.ptr + 4 >> 2];
  }; // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted
  // when the pointer is casted to some of the exception object base classes (e.g. when virtual
  // inheritance is used). When a pointer is thrown this method should return the thrown pointer
  // itself.


  this.get_exception_ptr = function () {
    // Work around a fastcomp bug, this code is still included for some reason in a build without
    // exceptions support.
    var isPointer = ___cxa_is_pointer_type(this.get_exception_info().get_type());

    if (isPointer) {
      return HEAP32[this.get_base_ptr() >> 2];
    }

    var adjusted = this.get_adjusted_ptr();
    if (adjusted !== 0) return adjusted;
    return this.get_base_ptr();
  };

  this.get_exception_info = function () {
    return new ExceptionInfo(this.get_base_ptr());
  };

  if (ptr === undefined) {
    this.ptr = _malloc(8);
    this.set_adjusted_ptr(0);
  } else {
    this.ptr = ptr;
  }
}

var exceptionCaught = [];

function exception_addRef(info) {
  info.add_ref();
}

var uncaughtExceptionCount = 0;

function ___cxa_begin_catch(ptr) {
  var catchInfo = new CatchInfo(ptr);
  var info = catchInfo.get_exception_info();

  if (!info.get_caught()) {
    info.set_caught(true);
    uncaughtExceptionCount--;
  }

  info.set_rethrown(false);
  exceptionCaught.push(catchInfo);
  exception_addRef(info);
  return catchInfo.get_exception_ptr();
}

var exceptionLast = 0;

function ___cxa_free_exception(ptr) {
  try {
    return _free(new ExceptionInfo(ptr).ptr);
  } catch (e) {
    err('exception during cxa_free_exception: ' + e);
  }
}

function exception_decRef(info) {
  // A rethrown exception can reach refcount 0; it must not be discarded
  // Its next handler will clear the rethrown flag and addRef it, prior to
  // final decRef and destruction here
  if (info.release_ref() && !info.get_rethrown()) {
    var destructor = info.get_destructor();

    if (destructor) {
      // In Wasm, destructors return 'this' as in ARM
      getWasmTableEntry(destructor)(info.excPtr);
    }

    ___cxa_free_exception(info.excPtr);
  }
}

function ___cxa_end_catch() {
  // Clear state flag.
  _setThrew(0);

  assert(exceptionCaught.length > 0); // Call destructor if one is registered then clear it.

  var catchInfo = exceptionCaught.pop();
  exception_decRef(catchInfo.get_exception_info());
  catchInfo.free();
  exceptionLast = 0; // XXX in decRef?
}

function ___resumeException(catchInfoPtr) {
  var catchInfo = new CatchInfo(catchInfoPtr);
  var ptr = catchInfo.get_base_ptr();

  if (!exceptionLast) {
    exceptionLast = ptr;
  }

  catchInfo.free();
  throw ptr;
}

function ___cxa_find_matching_catch_2() {
  var thrown = exceptionLast;

  if (!thrown) {
    // just pass through the null ptr
    setTempRet0(0);
    return 0 | 0;
  }

  var info = new ExceptionInfo(thrown);
  var thrownType = info.get_type();
  var catchInfo = new CatchInfo();
  catchInfo.set_base_ptr(thrown);
  catchInfo.set_adjusted_ptr(thrown);

  if (!thrownType) {
    // just pass through the thrown ptr
    setTempRet0(0);
    return catchInfo.ptr | 0;
  }

  var typeArray = Array.prototype.slice.call(arguments); // can_catch receives a **, add indirection
  // The different catch blocks are denoted by different types.
  // Due to inheritance, those types may not precisely match the
  // type of the thrown object. Find one which matches, and
  // return the type of the catch block which should be called.

  for (var i = 0; i < typeArray.length; i++) {
    var caughtType = typeArray[i];

    if (caughtType === 0 || caughtType === thrownType) {
      // Catch all clause matched or exactly the same type is caught
      break;
    }

    if (___cxa_can_catch(caughtType, thrownType, catchInfo.get_adjusted_ptr_addr())) {
      setTempRet0(caughtType);
      return catchInfo.ptr | 0;
    }
  }

  setTempRet0(thrownType);
  return catchInfo.ptr | 0;
}

function ___cxa_find_matching_catch_3() {
  var thrown = exceptionLast;

  if (!thrown) {
    // just pass through the null ptr
    setTempRet0(0);
    return 0 | 0;
  }

  var info = new ExceptionInfo(thrown);
  var thrownType = info.get_type();
  var catchInfo = new CatchInfo();
  catchInfo.set_base_ptr(thrown);
  catchInfo.set_adjusted_ptr(thrown);

  if (!thrownType) {
    // just pass through the thrown ptr
    setTempRet0(0);
    return catchInfo.ptr | 0;
  }

  var typeArray = Array.prototype.slice.call(arguments); // can_catch receives a **, add indirection
  // The different catch blocks are denoted by different types.
  // Due to inheritance, those types may not precisely match the
  // type of the thrown object. Find one which matches, and
  // return the type of the catch block which should be called.

  for (var i = 0; i < typeArray.length; i++) {
    var caughtType = typeArray[i];

    if (caughtType === 0 || caughtType === thrownType) {
      // Catch all clause matched or exactly the same type is caught
      break;
    }

    if (___cxa_can_catch(caughtType, thrownType, catchInfo.get_adjusted_ptr_addr())) {
      setTempRet0(caughtType);
      return catchInfo.ptr | 0;
    }
  }

  setTempRet0(thrownType);
  return catchInfo.ptr | 0;
}

function ___cxa_find_matching_catch_4() {
  var thrown = exceptionLast;

  if (!thrown) {
    // just pass through the null ptr
    setTempRet0(0);
    return 0 | 0;
  }

  var info = new ExceptionInfo(thrown);
  var thrownType = info.get_type();
  var catchInfo = new CatchInfo();
  catchInfo.set_base_ptr(thrown);
  catchInfo.set_adjusted_ptr(thrown);

  if (!thrownType) {
    // just pass through the thrown ptr
    setTempRet0(0);
    return catchInfo.ptr | 0;
  }

  var typeArray = Array.prototype.slice.call(arguments); // can_catch receives a **, add indirection
  // The different catch blocks are denoted by different types.
  // Due to inheritance, those types may not precisely match the
  // type of the thrown object. Find one which matches, and
  // return the type of the catch block which should be called.

  for (var i = 0; i < typeArray.length; i++) {
    var caughtType = typeArray[i];

    if (caughtType === 0 || caughtType === thrownType) {
      // Catch all clause matched or exactly the same type is caught
      break;
    }

    if (___cxa_can_catch(caughtType, thrownType, catchInfo.get_adjusted_ptr_addr())) {
      setTempRet0(caughtType);
      return catchInfo.ptr | 0;
    }
  }

  setTempRet0(thrownType);
  return catchInfo.ptr | 0;
}

function ___cxa_get_exception_ptr(ptr) {
  return new CatchInfo(ptr).get_exception_ptr();
}

function ___cxa_rethrow() {
  var catchInfo = exceptionCaught.pop();

  if (!catchInfo) {
    abort('no exception to throw');
  }

  var info = catchInfo.get_exception_info();
  var ptr = catchInfo.get_base_ptr();

  if (!info.get_rethrown()) {
    // Only pop if the corresponding push was through rethrow_primary_exception
    exceptionCaught.push(catchInfo);
    info.set_rethrown(true);
    info.set_caught(false);
    uncaughtExceptionCount++;
  } else {
    catchInfo.free();
  }

  exceptionLast = ptr;
  throw ptr;
}

function ___cxa_throw(ptr, type, destructor) {
  var info = new ExceptionInfo(ptr); // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.

  info.init(type, destructor);
  exceptionLast = ptr;
  uncaughtExceptionCount++;
  throw ptr;
}

function ___cxa_uncaught_exceptions() {
  return uncaughtExceptionCount;
}

var PATH = {
  splitPath: function (filename) {
    var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
    return splitPathRe.exec(filename).slice(1);
  },
  normalizeArray: function (parts, allowAboveRoot) {
    // if the path tries to go above the root, `up` ends up > 0
    var up = 0;

    for (var i = parts.length - 1; i >= 0; i--) {
      var last = parts[i];

      if (last === '.') {
        parts.splice(i, 1);
      } else if (last === '..') {
        parts.splice(i, 1);
        up++;
      } else if (up) {
        parts.splice(i, 1);
        up--;
      }
    } // if the path is allowed to go above the root, restore leading ..s


    if (allowAboveRoot) {
      for (; up; up--) {
        parts.unshift('..');
      }
    }

    return parts;
  },
  normalize: function (path) {
    var isAbsolute = path.charAt(0) === '/',
        trailingSlash = path.substr(-1) === '/'; // Normalize the path

    path = PATH.normalizeArray(path.split('/').filter(function (p) {
      return !!p;
    }), !isAbsolute).join('/');

    if (!path && !isAbsolute) {
      path = '.';
    }

    if (path && trailingSlash) {
      path += '/';
    }

    return (isAbsolute ? '/' : '') + path;
  },
  dirname: function (path) {
    var result = PATH.splitPath(path),
        root = result[0],
        dir = result[1];

    if (!root && !dir) {
      // No dirname whatsoever
      return '.';
    }

    if (dir) {
      // It has a dirname, strip trailing slash
      dir = dir.substr(0, dir.length - 1);
    }

    return root + dir;
  },
  basename: function (path) {
    // EMSCRIPTEN return '/'' for '/', not an empty string
    if (path === '/') return '/';
    path = PATH.normalize(path);
    path = path.replace(/\/$/, "");
    var lastSlash = path.lastIndexOf('/');
    if (lastSlash === -1) return path;
    return path.substr(lastSlash + 1);
  },
  extname: function (path) {
    return PATH.splitPath(path)[3];
  },
  join: function () {
    var paths = Array.prototype.slice.call(arguments, 0);
    return PATH.normalize(paths.join('/'));
  },
  join2: function (l, r) {
    return PATH.normalize(l + '/' + r);
  }
};

function getRandomDevice() {
  if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {
    // for modern web browsers
    var randomBuffer = new Uint8Array(1);
    return function () {
      crypto.getRandomValues(randomBuffer);
      return randomBuffer[0];
    };
  } else if (ENVIRONMENT_IS_NODE) {
    // for nodejs with or without crypto support included
    try {
      var crypto_module = __webpack_require__(Object(function webpackMissingModule() { var e = new Error("Cannot find module 'crypto'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())); // nodejs has crypto support


      return function () {
        return crypto_module['randomBytes'](1)[0];
      };
    } catch (e) {// nodejs doesn't have crypto support
    }
  } // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096


  return function () {
    abort("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };");
  };
}

var PATH_FS = {
  resolve: function () {
    var resolvedPath = '',
        resolvedAbsolute = false;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path = i >= 0 ? arguments[i] : FS.cwd(); // Skip empty and invalid entries

      if (typeof path != 'string') {
        throw new TypeError('Arguments to path.resolve must be strings');
      } else if (!path) {
        return ''; // an invalid portion invalidates the whole thing
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charAt(0) === '/';
    } // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)


    resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function (p) {
      return !!p;
    }), !resolvedAbsolute).join('/');
    return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';
  },
  relative: function (from, to) {
    from = PATH_FS.resolve(from).substr(1);
    to = PATH_FS.resolve(to).substr(1);

    function trim(arr) {
      var start = 0;

      for (; start < arr.length; start++) {
        if (arr[start] !== '') break;
      }

      var end = arr.length - 1;

      for (; end >= 0; end--) {
        if (arr[end] !== '') break;
      }

      if (start > end) return [];
      return arr.slice(start, end - start + 1);
    }

    var fromParts = trim(from.split('/'));
    var toParts = trim(to.split('/'));
    var length = Math.min(fromParts.length, toParts.length);
    var samePartsLength = length;

    for (var i = 0; i < length; i++) {
      if (fromParts[i] !== toParts[i]) {
        samePartsLength = i;
        break;
      }
    }

    var outputParts = [];

    for (var i = samePartsLength; i < fromParts.length; i++) {
      outputParts.push('..');
    }

    outputParts = outputParts.concat(toParts.slice(samePartsLength));
    return outputParts.join('/');
  }
};
var TTY = {
  ttys: [],
  init: function () {// https://github.com/emscripten-core/emscripten/pull/1555
    // if (ENVIRONMENT_IS_NODE) {
    //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
    //   // device, it always assumes it's a TTY device. because of this, we're forcing
    //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
    //   // with text files until FS.init can be refactored.
    //   process['stdin']['setEncoding']('utf8');
    // }
  },
  shutdown: function () {// https://github.com/emscripten-core/emscripten/pull/1555
    // if (ENVIRONMENT_IS_NODE) {
    //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
    //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
    //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
    //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
    //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
    //   process['stdin']['pause']();
    // }
  },
  register: function (dev, ops) {
    TTY.ttys[dev] = {
      input: [],
      output: [],
      ops: ops
    };
    FS.registerDevice(dev, TTY.stream_ops);
  },
  stream_ops: {
    open: function (stream) {
      var tty = TTY.ttys[stream.node.rdev];

      if (!tty) {
        throw new FS.ErrnoError(43);
      }

      stream.tty = tty;
      stream.seekable = false;
    },
    close: function (stream) {
      // flush any pending line data
      stream.tty.ops.flush(stream.tty);
    },
    flush: function (stream) {
      stream.tty.ops.flush(stream.tty);
    },
    read: function (stream, buffer, offset, length, pos
    /* ignored */
    ) {
      if (!stream.tty || !stream.tty.ops.get_char) {
        throw new FS.ErrnoError(60);
      }

      var bytesRead = 0;

      for (var i = 0; i < length; i++) {
        var result;

        try {
          result = stream.tty.ops.get_char(stream.tty);
        } catch (e) {
          throw new FS.ErrnoError(29);
        }

        if (result === undefined && bytesRead === 0) {
          throw new FS.ErrnoError(6);
        }

        if (result === null || result === undefined) break;
        bytesRead++;
        buffer[offset + i] = result;
      }

      if (bytesRead) {
        stream.node.timestamp = Date.now();
      }

      return bytesRead;
    },
    write: function (stream, buffer, offset, length, pos) {
      if (!stream.tty || !stream.tty.ops.put_char) {
        throw new FS.ErrnoError(60);
      }

      try {
        for (var i = 0; i < length; i++) {
          stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
        }
      } catch (e) {
        throw new FS.ErrnoError(29);
      }

      if (length) {
        stream.node.timestamp = Date.now();
      }

      return i;
    }
  },
  default_tty_ops: {
    get_char: function (tty) {
      if (!tty.input.length) {
        var result = null;

        if (ENVIRONMENT_IS_NODE) {
          // we will read data by chunks of BUFSIZE
          var BUFSIZE = 256;
          var buf = Buffer.alloc(BUFSIZE);
          var bytesRead = 0;

          try {
            bytesRead = fs.readSync(process.stdin.fd, buf, 0, BUFSIZE, -1);
          } catch (e) {
            // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
            // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
            if (e.toString().includes('EOF')) bytesRead = 0;else throw e;
          }

          if (bytesRead > 0) {
            result = buf.slice(0, bytesRead).toString('utf-8');
          } else {
            result = null;
          }
        } else if (typeof window != 'undefined' && typeof window.prompt == 'function') {
          // Browser.
          result = window.prompt('Input: '); // returns null on cancel

          if (result !== null) {
            result += '\n';
          }
        } else if (typeof readline == 'function') {
          // Command line.
          result = readline();

          if (result !== null) {
            result += '\n';
          }
        }

        if (!result) {
          return null;
        }

        tty.input = intArrayFromString(result, true);
      }

      return tty.input.shift();
    },
    put_char: function (tty, val) {
      if (val === null || val === 10) {
        out(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
      }
    },
    flush: function (tty) {
      if (tty.output && tty.output.length > 0) {
        out(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    }
  },
  default_tty1_ops: {
    put_char: function (tty, val) {
      if (val === null || val === 10) {
        err(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val != 0) tty.output.push(val);
      }
    },
    flush: function (tty) {
      if (tty.output && tty.output.length > 0) {
        err(UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    }
  }
};

function zeroMemory(address, size) {
  HEAPU8.fill(0, address, address + size);
}

function alignMemory(size, alignment) {
  assert(alignment, "alignment argument is required");
  return Math.ceil(size / alignment) * alignment;
}

function mmapAlloc(size) {
  size = alignMemory(size, 65536);

  var ptr = _emscripten_builtin_memalign(65536, size);

  if (!ptr) return 0;
  zeroMemory(ptr, size);
  return ptr;
}

var MEMFS = {
  ops_table: null,
  mount: function (mount) {
    return MEMFS.createNode(null, '/', 16384 | 511
    /* 0777 */
    , 0);
  },
  createNode: function (parent, name, mode, dev) {
    if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
      // no supported
      throw new FS.ErrnoError(63);
    }

    if (!MEMFS.ops_table) {
      MEMFS.ops_table = {
        dir: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr,
            lookup: MEMFS.node_ops.lookup,
            mknod: MEMFS.node_ops.mknod,
            rename: MEMFS.node_ops.rename,
            unlink: MEMFS.node_ops.unlink,
            rmdir: MEMFS.node_ops.rmdir,
            readdir: MEMFS.node_ops.readdir,
            symlink: MEMFS.node_ops.symlink
          },
          stream: {
            llseek: MEMFS.stream_ops.llseek
          }
        },
        file: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr
          },
          stream: {
            llseek: MEMFS.stream_ops.llseek,
            read: MEMFS.stream_ops.read,
            write: MEMFS.stream_ops.write,
            allocate: MEMFS.stream_ops.allocate,
            mmap: MEMFS.stream_ops.mmap,
            msync: MEMFS.stream_ops.msync
          }
        },
        link: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr,
            readlink: MEMFS.node_ops.readlink
          },
          stream: {}
        },
        chrdev: {
          node: {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr
          },
          stream: FS.chrdev_stream_ops
        }
      };
    }

    var node = FS.createNode(parent, name, mode, dev);

    if (FS.isDir(node.mode)) {
      node.node_ops = MEMFS.ops_table.dir.node;
      node.stream_ops = MEMFS.ops_table.dir.stream;
      node.contents = {};
    } else if (FS.isFile(node.mode)) {
      node.node_ops = MEMFS.ops_table.file.node;
      node.stream_ops = MEMFS.ops_table.file.stream;
      node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
      // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
      // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
      // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.

      node.contents = null;
    } else if (FS.isLink(node.mode)) {
      node.node_ops = MEMFS.ops_table.link.node;
      node.stream_ops = MEMFS.ops_table.link.stream;
    } else if (FS.isChrdev(node.mode)) {
      node.node_ops = MEMFS.ops_table.chrdev.node;
      node.stream_ops = MEMFS.ops_table.chrdev.stream;
    }

    node.timestamp = Date.now(); // add the new node to the parent

    if (parent) {
      parent.contents[name] = node;
      parent.timestamp = node.timestamp;
    }

    return node;
  },
  getFileDataAsTypedArray: function (node) {
    if (!node.contents) return new Uint8Array(0);
    if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.

    return new Uint8Array(node.contents);
  },
  expandFileStorage: function (node, newCapacity) {
    var prevCapacity = node.contents ? node.contents.length : 0;
    if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
    // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
    // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
    // avoid overshooting the allocation cap by a very large margin.

    var CAPACITY_DOUBLING_MAX = 1024 * 1024;
    newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125) >>> 0);
    if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.

    var oldContents = node.contents;
    node.contents = new Uint8Array(newCapacity); // Allocate new storage.

    if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
  },
  resizeFileStorage: function (node, newSize) {
    if (node.usedBytes == newSize) return;

    if (newSize == 0) {
      node.contents = null; // Fully decommit when requesting a resize to zero.

      node.usedBytes = 0;
    } else {
      var oldContents = node.contents;
      node.contents = new Uint8Array(newSize); // Allocate new storage.

      if (oldContents) {
        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
      }

      node.usedBytes = newSize;
    }
  },
  node_ops: {
    getattr: function (node) {
      var attr = {}; // device numbers reuse inode numbers.

      attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
      attr.ino = node.id;
      attr.mode = node.mode;
      attr.nlink = 1;
      attr.uid = 0;
      attr.gid = 0;
      attr.rdev = node.rdev;

      if (FS.isDir(node.mode)) {
        attr.size = 4096;
      } else if (FS.isFile(node.mode)) {
        attr.size = node.usedBytes;
      } else if (FS.isLink(node.mode)) {
        attr.size = node.link.length;
      } else {
        attr.size = 0;
      }

      attr.atime = new Date(node.timestamp);
      attr.mtime = new Date(node.timestamp);
      attr.ctime = new Date(node.timestamp); // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
      //       but this is not required by the standard.

      attr.blksize = 4096;
      attr.blocks = Math.ceil(attr.size / attr.blksize);
      return attr;
    },
    setattr: function (node, attr) {
      if (attr.mode !== undefined) {
        node.mode = attr.mode;
      }

      if (attr.timestamp !== undefined) {
        node.timestamp = attr.timestamp;
      }

      if (attr.size !== undefined) {
        MEMFS.resizeFileStorage(node, attr.size);
      }
    },
    lookup: function (parent, name) {
      throw FS.genericErrors[44];
    },
    mknod: function (parent, name, mode, dev) {
      return MEMFS.createNode(parent, name, mode, dev);
    },
    rename: function (old_node, new_dir, new_name) {
      // if we're overwriting a directory at new_name, make sure it's empty.
      if (FS.isDir(old_node.mode)) {
        var new_node;

        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {}

        if (new_node) {
          for (var i in new_node.contents) {
            throw new FS.ErrnoError(55);
          }
        }
      } // do the internal rewiring


      delete old_node.parent.contents[old_node.name];
      old_node.parent.timestamp = Date.now();
      old_node.name = new_name;
      new_dir.contents[new_name] = old_node;
      new_dir.timestamp = old_node.parent.timestamp;
      old_node.parent = new_dir;
    },
    unlink: function (parent, name) {
      delete parent.contents[name];
      parent.timestamp = Date.now();
    },
    rmdir: function (parent, name) {
      var node = FS.lookupNode(parent, name);

      for (var i in node.contents) {
        throw new FS.ErrnoError(55);
      }

      delete parent.contents[name];
      parent.timestamp = Date.now();
    },
    readdir: function (node) {
      var entries = ['.', '..'];

      for (var key in node.contents) {
        if (!node.contents.hasOwnProperty(key)) {
          continue;
        }

        entries.push(key);
      }

      return entries;
    },
    symlink: function (parent, newname, oldpath) {
      var node = MEMFS.createNode(parent, newname, 511
      /* 0777 */
      | 40960, 0);
      node.link = oldpath;
      return node;
    },
    readlink: function (node) {
      if (!FS.isLink(node.mode)) {
        throw new FS.ErrnoError(28);
      }

      return node.link;
    }
  },
  stream_ops: {
    read: function (stream, buffer, offset, length, position) {
      var contents = stream.node.contents;
      if (position >= stream.node.usedBytes) return 0;
      var size = Math.min(stream.node.usedBytes - position, length);
      assert(size >= 0);

      if (size > 8 && contents.subarray) {
        // non-trivial, and typed array
        buffer.set(contents.subarray(position, position + size), offset);
      } else {
        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
      }

      return size;
    },
    write: function (stream, buffer, offset, length, position, canOwn) {
      // The data buffer should be a typed array view
      assert(!(buffer instanceof ArrayBuffer));
      if (!length) return 0;
      var node = stream.node;
      node.timestamp = Date.now();

      if (buffer.subarray && (!node.contents || node.contents.subarray)) {
        // This write is from a typed array to a typed array?
        if (canOwn) {
          assert(position === 0, 'canOwn must imply no weird position inside the file');
          node.contents = buffer.subarray(offset, offset + length);
          node.usedBytes = length;
          return length;
        } else if (node.usedBytes === 0 && position === 0) {
          // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
          node.contents = buffer.slice(offset, offset + length);
          node.usedBytes = length;
          return length;
        } else if (position + length <= node.usedBytes) {
          // Writing to an already allocated and used subrange of the file?
          node.contents.set(buffer.subarray(offset, offset + length), position);
          return length;
        }
      } // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.


      MEMFS.expandFileStorage(node, position + length);

      if (node.contents.subarray && buffer.subarray) {
        // Use typed array write which is available.
        node.contents.set(buffer.subarray(offset, offset + length), position);
      } else {
        for (var i = 0; i < length; i++) {
          node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
        }
      }

      node.usedBytes = Math.max(node.usedBytes, position + length);
      return length;
    },
    llseek: function (stream, offset, whence) {
      var position = offset;

      if (whence === 1) {
        position += stream.position;
      } else if (whence === 2) {
        if (FS.isFile(stream.node.mode)) {
          position += stream.node.usedBytes;
        }
      }

      if (position < 0) {
        throw new FS.ErrnoError(28);
      }

      return position;
    },
    allocate: function (stream, offset, length) {
      MEMFS.expandFileStorage(stream.node, offset + length);
      stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
    },
    mmap: function (stream, address, length, position, prot, flags) {
      if (address !== 0) {
        // We don't currently support location hints for the address of the mapping
        throw new FS.ErrnoError(28);
      }

      if (!FS.isFile(stream.node.mode)) {
        throw new FS.ErrnoError(43);
      }

      var ptr;
      var allocated;
      var contents = stream.node.contents; // Only make a new copy when MAP_PRIVATE is specified.

      if (!(flags & 2) && contents.buffer === buffer) {
        // We can't emulate MAP_SHARED when the file is not backed by the buffer
        // we're mapping to (e.g. the HEAP buffer).
        allocated = false;
        ptr = contents.byteOffset;
      } else {
        // Try to avoid unnecessary slices.
        if (position > 0 || position + length < contents.length) {
          if (contents.subarray) {
            contents = contents.subarray(position, position + length);
          } else {
            contents = Array.prototype.slice.call(contents, position, position + length);
          }
        }

        allocated = true;
        ptr = mmapAlloc(length);

        if (!ptr) {
          throw new FS.ErrnoError(48);
        }

        HEAP8.set(contents, ptr);
      }

      return {
        ptr: ptr,
        allocated: allocated
      };
    },
    msync: function (stream, buffer, offset, length, mmapFlags) {
      if (!FS.isFile(stream.node.mode)) {
        throw new FS.ErrnoError(43);
      }

      if (mmapFlags & 2) {
        // MAP_PRIVATE calls need not to be synced back to underlying fs
        return 0;
      }

      var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false); // should we check if bytesWritten and length are the same?

      return 0;
    }
  }
};
/** @param {boolean=} noRunDep */

function asyncLoad(url, onload, onerror, noRunDep) {
  var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';
  readAsync(url, function (arrayBuffer) {
    assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
    onload(new Uint8Array(arrayBuffer));
    if (dep) removeRunDependency(dep);
  }, function (event) {
    if (onerror) {
      onerror();
    } else {
      throw 'Loading data file "' + url + '" failed.';
    }
  });
  if (dep) addRunDependency(dep);
}

var ERRNO_MESSAGES = {
  0: "Success",
  1: "Arg list too long",
  2: "Permission denied",
  3: "Address already in use",
  4: "Address not available",
  5: "Address family not supported by protocol family",
  6: "No more processes",
  7: "Socket already connected",
  8: "Bad file number",
  9: "Trying to read unreadable message",
  10: "Mount device busy",
  11: "Operation canceled",
  12: "No children",
  13: "Connection aborted",
  14: "Connection refused",
  15: "Connection reset by peer",
  16: "File locking deadlock error",
  17: "Destination address required",
  18: "Math arg out of domain of func",
  19: "Quota exceeded",
  20: "File exists",
  21: "Bad address",
  22: "File too large",
  23: "Host is unreachable",
  24: "Identifier removed",
  25: "Illegal byte sequence",
  26: "Connection already in progress",
  27: "Interrupted system call",
  28: "Invalid argument",
  29: "I/O error",
  30: "Socket is already connected",
  31: "Is a directory",
  32: "Too many symbolic links",
  33: "Too many open files",
  34: "Too many links",
  35: "Message too long",
  36: "Multihop attempted",
  37: "File or path name too long",
  38: "Network interface is not configured",
  39: "Connection reset by network",
  40: "Network is unreachable",
  41: "Too many open files in system",
  42: "No buffer space available",
  43: "No such device",
  44: "No such file or directory",
  45: "Exec format error",
  46: "No record locks available",
  47: "The link has been severed",
  48: "Not enough core",
  49: "No message of desired type",
  50: "Protocol not available",
  51: "No space left on device",
  52: "Function not implemented",
  53: "Socket is not connected",
  54: "Not a directory",
  55: "Directory not empty",
  56: "State not recoverable",
  57: "Socket operation on non-socket",
  59: "Not a typewriter",
  60: "No such device or address",
  61: "Value too large for defined data type",
  62: "Previous owner died",
  63: "Not super-user",
  64: "Broken pipe",
  65: "Protocol error",
  66: "Unknown protocol",
  67: "Protocol wrong type for socket",
  68: "Math result not representable",
  69: "Read only file system",
  70: "Illegal seek",
  71: "No such process",
  72: "Stale file handle",
  73: "Connection timed out",
  74: "Text file busy",
  75: "Cross-device link",
  100: "Device not a stream",
  101: "Bad font file fmt",
  102: "Invalid slot",
  103: "Invalid request code",
  104: "No anode",
  105: "Block device required",
  106: "Channel number out of range",
  107: "Level 3 halted",
  108: "Level 3 reset",
  109: "Link number out of range",
  110: "Protocol driver not attached",
  111: "No CSI structure available",
  112: "Level 2 halted",
  113: "Invalid exchange",
  114: "Invalid request descriptor",
  115: "Exchange full",
  116: "No data (for no delay io)",
  117: "Timer expired",
  118: "Out of streams resources",
  119: "Machine is not on the network",
  120: "Package not installed",
  121: "The object is remote",
  122: "Advertise error",
  123: "Srmount error",
  124: "Communication error on send",
  125: "Cross mount point (not really error)",
  126: "Given log. name not unique",
  127: "f.d. invalid for this operation",
  128: "Remote address changed",
  129: "Can   access a needed shared lib",
  130: "Accessing a corrupted shared lib",
  131: ".lib section in a.out corrupted",
  132: "Attempting to link in too many libs",
  133: "Attempting to exec a shared library",
  135: "Streams pipe error",
  136: "Too many users",
  137: "Socket type not supported",
  138: "Not supported",
  139: "Protocol family not supported",
  140: "Can't send after socket shutdown",
  141: "Too many references",
  142: "Host is down",
  148: "No medium (in tape drive)",
  156: "Level 2 not synchronized"
};
var ERRNO_CODES = {};
var FS = {
  root: null,
  mounts: [],
  devices: {},
  streams: [],
  nextInode: 1,
  nameTable: null,
  currentPath: "/",
  initialized: false,
  ignorePermissions: true,
  ErrnoError: null,
  genericErrors: {},
  filesystems: null,
  syncFSRequests: 0,
  lookupPath: (path, opts = {}) => {
    path = PATH_FS.resolve(FS.cwd(), path);
    if (!path) return {
      path: '',
      node: null
    };
    var defaults = {
      follow_mount: true,
      recurse_count: 0
    };
    opts = Object.assign(defaults, opts);

    if (opts.recurse_count > 8) {
      // max recursive lookup of 8
      throw new FS.ErrnoError(32);
    } // split the path


    var parts = PATH.normalizeArray(path.split('/').filter(p => !!p), false); // start at the root

    var current = FS.root;
    var current_path = '/';

    for (var i = 0; i < parts.length; i++) {
      var islast = i === parts.length - 1;

      if (islast && opts.parent) {
        // stop resolving
        break;
      }

      current = FS.lookupNode(current, parts[i]);
      current_path = PATH.join2(current_path, parts[i]); // jump to the mount's root node if this is a mountpoint

      if (FS.isMountpoint(current)) {
        if (!islast || islast && opts.follow_mount) {
          current = current.mounted.root;
        }
      } // by default, lookupPath will not follow a symlink if it is the final path component.
      // setting opts.follow = true will override this behavior.


      if (!islast || opts.follow) {
        var count = 0;

        while (FS.isLink(current.mode)) {
          var link = FS.readlink(current_path);
          current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
          var lookup = FS.lookupPath(current_path, {
            recurse_count: opts.recurse_count + 1
          });
          current = lookup.node;

          if (count++ > 40) {
            // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
            throw new FS.ErrnoError(32);
          }
        }
      }
    }

    return {
      path: current_path,
      node: current
    };
  },
  getPath: node => {
    var path;

    while (true) {
      if (FS.isRoot(node)) {
        var mount = node.mount.mountpoint;
        if (!path) return mount;
        return mount[mount.length - 1] !== '/' ? mount + '/' + path : mount + path;
      }

      path = path ? node.name + '/' + path : node.name;
      node = node.parent;
    }
  },
  hashName: (parentid, name) => {
    var hash = 0;

    for (var i = 0; i < name.length; i++) {
      hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
    }

    return (parentid + hash >>> 0) % FS.nameTable.length;
  },
  hashAddNode: node => {
    var hash = FS.hashName(node.parent.id, node.name);
    node.name_next = FS.nameTable[hash];
    FS.nameTable[hash] = node;
  },
  hashRemoveNode: node => {
    var hash = FS.hashName(node.parent.id, node.name);

    if (FS.nameTable[hash] === node) {
      FS.nameTable[hash] = node.name_next;
    } else {
      var current = FS.nameTable[hash];

      while (current) {
        if (current.name_next === node) {
          current.name_next = node.name_next;
          break;
        }

        current = current.name_next;
      }
    }
  },
  lookupNode: (parent, name) => {
    var errCode = FS.mayLookup(parent);

    if (errCode) {
      throw new FS.ErrnoError(errCode, parent);
    }

    var hash = FS.hashName(parent.id, name);

    for (var node = FS.nameTable[hash]; node; node = node.name_next) {
      var nodeName = node.name;

      if (node.parent.id === parent.id && nodeName === name) {
        return node;
      }
    } // if we failed to find it in the cache, call into the VFS


    return FS.lookup(parent, name);
  },
  createNode: (parent, name, mode, rdev) => {
    assert(typeof parent == 'object');
    var node = new FS.FSNode(parent, name, mode, rdev);
    FS.hashAddNode(node);
    return node;
  },
  destroyNode: node => {
    FS.hashRemoveNode(node);
  },
  isRoot: node => {
    return node === node.parent;
  },
  isMountpoint: node => {
    return !!node.mounted;
  },
  isFile: mode => {
    return (mode & 61440) === 32768;
  },
  isDir: mode => {
    return (mode & 61440) === 16384;
  },
  isLink: mode => {
    return (mode & 61440) === 40960;
  },
  isChrdev: mode => {
    return (mode & 61440) === 8192;
  },
  isBlkdev: mode => {
    return (mode & 61440) === 24576;
  },
  isFIFO: mode => {
    return (mode & 61440) === 4096;
  },
  isSocket: mode => {
    return (mode & 49152) === 49152;
  },
  flagModes: {
    "r": 0,
    "r+": 2,
    "w": 577,
    "w+": 578,
    "a": 1089,
    "a+": 1090
  },
  modeStringToFlags: str => {
    var flags = FS.flagModes[str];

    if (typeof flags == 'undefined') {
      throw new Error('Unknown file open mode: ' + str);
    }

    return flags;
  },
  flagsToPermissionString: flag => {
    var perms = ['r', 'w', 'rw'][flag & 3];

    if (flag & 512) {
      perms += 'w';
    }

    return perms;
  },
  nodePermissions: (node, perms) => {
    if (FS.ignorePermissions) {
      return 0;
    } // return 0 if any user, group or owner bits are set.


    if (perms.includes('r') && !(node.mode & 292)) {
      return 2;
    } else if (perms.includes('w') && !(node.mode & 146)) {
      return 2;
    } else if (perms.includes('x') && !(node.mode & 73)) {
      return 2;
    }

    return 0;
  },
  mayLookup: dir => {
    var errCode = FS.nodePermissions(dir, 'x');
    if (errCode) return errCode;
    if (!dir.node_ops.lookup) return 2;
    return 0;
  },
  mayCreate: (dir, name) => {
    try {
      var node = FS.lookupNode(dir, name);
      return 20;
    } catch (e) {}

    return FS.nodePermissions(dir, 'wx');
  },
  mayDelete: (dir, name, isdir) => {
    var node;

    try {
      node = FS.lookupNode(dir, name);
    } catch (e) {
      return e.errno;
    }

    var errCode = FS.nodePermissions(dir, 'wx');

    if (errCode) {
      return errCode;
    }

    if (isdir) {
      if (!FS.isDir(node.mode)) {
        return 54;
      }

      if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
        return 10;
      }
    } else {
      if (FS.isDir(node.mode)) {
        return 31;
      }
    }

    return 0;
  },
  mayOpen: (node, flags) => {
    if (!node) {
      return 44;
    }

    if (FS.isLink(node.mode)) {
      return 32;
    } else if (FS.isDir(node.mode)) {
      if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
      flags & 512) {
        // TODO: check for O_SEARCH? (== search for dir only)
        return 31;
      }
    }

    return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
  },
  MAX_OPEN_FDS: 4096,
  nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {
    for (var fd = fd_start; fd <= fd_end; fd++) {
      if (!FS.streams[fd]) {
        return fd;
      }
    }

    throw new FS.ErrnoError(33);
  },
  getStream: fd => FS.streams[fd],
  createStream: (stream, fd_start, fd_end) => {
    if (!FS.FSStream) {
      FS.FSStream =
      /** @constructor */
      function () {};

      FS.FSStream.prototype = {
        object: {
          get: function () {
            return this.node;
          },
          set: function (val) {
            this.node = val;
          }
        },
        isRead: {
          get: function () {
            return (this.flags & 2097155) !== 1;
          }
        },
        isWrite: {
          get: function () {
            return (this.flags & 2097155) !== 0;
          }
        },
        isAppend: {
          get: function () {
            return this.flags & 1024;
          }
        }
      };
    } // clone it, so we can return an instance of FSStream


    stream = Object.assign(new FS.FSStream(), stream);
    var fd = FS.nextfd(fd_start, fd_end);
    stream.fd = fd;
    FS.streams[fd] = stream;
    return stream;
  },
  closeStream: fd => {
    FS.streams[fd] = null;
  },
  chrdev_stream_ops: {
    open: stream => {
      var device = FS.getDevice(stream.node.rdev); // override node's stream ops with the device's

      stream.stream_ops = device.stream_ops; // forward the open call

      if (stream.stream_ops.open) {
        stream.stream_ops.open(stream);
      }
    },
    llseek: () => {
      throw new FS.ErrnoError(70);
    }
  },
  major: dev => dev >> 8,
  minor: dev => dev & 0xff,
  makedev: (ma, mi) => ma << 8 | mi,
  registerDevice: (dev, ops) => {
    FS.devices[dev] = {
      stream_ops: ops
    };
  },
  getDevice: dev => FS.devices[dev],
  getMounts: mount => {
    var mounts = [];
    var check = [mount];

    while (check.length) {
      var m = check.pop();
      mounts.push(m);
      check.push.apply(check, m.mounts);
    }

    return mounts;
  },
  syncfs: (populate, callback) => {
    if (typeof populate == 'function') {
      callback = populate;
      populate = false;
    }

    FS.syncFSRequests++;

    if (FS.syncFSRequests > 1) {
      err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
    }

    var mounts = FS.getMounts(FS.root.mount);
    var completed = 0;

    function doCallback(errCode) {
      assert(FS.syncFSRequests > 0);
      FS.syncFSRequests--;
      return callback(errCode);
    }

    function done(errCode) {
      if (errCode) {
        if (!done.errored) {
          done.errored = true;
          return doCallback(errCode);
        }

        return;
      }

      if (++completed >= mounts.length) {
        doCallback(null);
      }
    }

    ; // sync all mounts

    mounts.forEach(mount => {
      if (!mount.type.syncfs) {
        return done(null);
      }

      mount.type.syncfs(mount, populate, done);
    });
  },
  mount: (type, opts, mountpoint) => {
    if (typeof type == 'string') {
      // The filesystem was not included, and instead we have an error
      // message stored in the variable.
      throw type;
    }

    var root = mountpoint === '/';
    var pseudo = !mountpoint;
    var node;

    if (root && FS.root) {
      throw new FS.ErrnoError(10);
    } else if (!root && !pseudo) {
      var lookup = FS.lookupPath(mountpoint, {
        follow_mount: false
      });
      mountpoint = lookup.path; // use the absolute path

      node = lookup.node;

      if (FS.isMountpoint(node)) {
        throw new FS.ErrnoError(10);
      }

      if (!FS.isDir(node.mode)) {
        throw new FS.ErrnoError(54);
      }
    }

    var mount = {
      type: type,
      opts: opts,
      mountpoint: mountpoint,
      mounts: []
    }; // create a root node for the fs

    var mountRoot = type.mount(mount);
    mountRoot.mount = mount;
    mount.root = mountRoot;

    if (root) {
      FS.root = mountRoot;
    } else if (node) {
      // set as a mountpoint
      node.mounted = mount; // add the new mount to the current mount's children

      if (node.mount) {
        node.mount.mounts.push(mount);
      }
    }

    return mountRoot;
  },
  unmount: mountpoint => {
    var lookup = FS.lookupPath(mountpoint, {
      follow_mount: false
    });

    if (!FS.isMountpoint(lookup.node)) {
      throw new FS.ErrnoError(28);
    } // destroy the nodes for this mount, and all its child mounts


    var node = lookup.node;
    var mount = node.mounted;
    var mounts = FS.getMounts(mount);
    Object.keys(FS.nameTable).forEach(hash => {
      var current = FS.nameTable[hash];

      while (current) {
        var next = current.name_next;

        if (mounts.includes(current.mount)) {
          FS.destroyNode(current);
        }

        current = next;
      }
    }); // no longer a mountpoint

    node.mounted = null; // remove this mount from the child mounts

    var idx = node.mount.mounts.indexOf(mount);
    assert(idx !== -1);
    node.mount.mounts.splice(idx, 1);
  },
  lookup: (parent, name) => {
    return parent.node_ops.lookup(parent, name);
  },
  mknod: (path, mode, dev) => {
    var lookup = FS.lookupPath(path, {
      parent: true
    });
    var parent = lookup.node;
    var name = PATH.basename(path);

    if (!name || name === '.' || name === '..') {
      throw new FS.ErrnoError(28);
    }

    var errCode = FS.mayCreate(parent, name);

    if (errCode) {
      throw new FS.ErrnoError(errCode);
    }

    if (!parent.node_ops.mknod) {
      throw new FS.ErrnoError(63);
    }

    return parent.node_ops.mknod(parent, name, mode, dev);
  },
  create: (path, mode) => {
    mode = mode !== undefined ? mode : 438
    /* 0666 */
    ;
    mode &= 4095;
    mode |= 32768;
    return FS.mknod(path, mode, 0);
  },
  mkdir: (path, mode) => {
    mode = mode !== undefined ? mode : 511
    /* 0777 */
    ;
    mode &= 511 | 512;
    mode |= 16384;
    return FS.mknod(path, mode, 0);
  },
  mkdirTree: (path, mode) => {
    var dirs = path.split('/');
    var d = '';

    for (var i = 0; i < dirs.length; ++i) {
      if (!dirs[i]) continue;
      d += '/' + dirs[i];

      try {
        FS.mkdir(d, mode);
      } catch (e) {
        if (e.errno != 20) throw e;
      }
    }
  },
  mkdev: (path, mode, dev) => {
    if (typeof dev == 'undefined') {
      dev = mode;
      mode = 438
      /* 0666 */
      ;
    }

    mode |= 8192;
    return FS.mknod(path, mode, dev);
  },
  symlink: (oldpath, newpath) => {
    if (!PATH_FS.resolve(oldpath)) {
      throw new FS.ErrnoError(44);
    }

    var lookup = FS.lookupPath(newpath, {
      parent: true
    });
    var parent = lookup.node;

    if (!parent) {
      throw new FS.ErrnoError(44);
    }

    var newname = PATH.basename(newpath);
    var errCode = FS.mayCreate(parent, newname);

    if (errCode) {
      throw new FS.ErrnoError(errCode);
    }

    if (!parent.node_ops.symlink) {
      throw new FS.ErrnoError(63);
    }

    return parent.node_ops.symlink(parent, newname, oldpath);
  },
  rename: (old_path, new_path) => {
    var old_dirname = PATH.dirname(old_path);
    var new_dirname = PATH.dirname(new_path);
    var old_name = PATH.basename(old_path);
    var new_name = PATH.basename(new_path); // parents must exist

    var lookup, old_dir, new_dir; // let the errors from non existant directories percolate up

    lookup = FS.lookupPath(old_path, {
      parent: true
    });
    old_dir = lookup.node;
    lookup = FS.lookupPath(new_path, {
      parent: true
    });
    new_dir = lookup.node;
    if (!old_dir || !new_dir) throw new FS.ErrnoError(44); // need to be part of the same mount

    if (old_dir.mount !== new_dir.mount) {
      throw new FS.ErrnoError(75);
    } // source must exist


    var old_node = FS.lookupNode(old_dir, old_name); // old path should not be an ancestor of the new path

    var relative = PATH_FS.relative(old_path, new_dirname);

    if (relative.charAt(0) !== '.') {
      throw new FS.ErrnoError(28);
    } // new path should not be an ancestor of the old path


    relative = PATH_FS.relative(new_path, old_dirname);

    if (relative.charAt(0) !== '.') {
      throw new FS.ErrnoError(55);
    } // see if the new path already exists


    var new_node;

    try {
      new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {// not fatal
    } // early out if nothing needs to change


    if (old_node === new_node) {
      return;
    } // we'll need to delete the old entry


    var isdir = FS.isDir(old_node.mode);
    var errCode = FS.mayDelete(old_dir, old_name, isdir);

    if (errCode) {
      throw new FS.ErrnoError(errCode);
    } // need delete permissions if we'll be overwriting.
    // need create permissions if new doesn't already exist.


    errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);

    if (errCode) {
      throw new FS.ErrnoError(errCode);
    }

    if (!old_dir.node_ops.rename) {
      throw new FS.ErrnoError(63);
    }

    if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
      throw new FS.ErrnoError(10);
    } // if we are going to change the parent, check write permissions


    if (new_dir !== old_dir) {
      errCode = FS.nodePermissions(old_dir, 'w');

      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
    } // remove the node from the lookup hash


    FS.hashRemoveNode(old_node); // do the underlying fs rename

    try {
      old_dir.node_ops.rename(old_node, new_dir, new_name);
    } catch (e) {
      throw e;
    } finally {
      // add the node back to the hash (in case node_ops.rename
      // changed its name)
      FS.hashAddNode(old_node);
    }
  },
  rmdir: path => {
    var lookup = FS.lookupPath(path, {
      parent: true
    });
    var parent = lookup.node;
    var name = PATH.basename(path);
    var node = FS.lookupNode(parent, name);
    var errCode = FS.mayDelete(parent, name, true);

    if (errCode) {
      throw new FS.ErrnoError(errCode);
    }

    if (!parent.node_ops.rmdir) {
      throw new FS.ErrnoError(63);
    }

    if (FS.isMountpoint(node)) {
      throw new FS.ErrnoError(10);
    }

    parent.node_ops.rmdir(parent, name);
    FS.destroyNode(node);
  },
  readdir: path => {
    var lookup = FS.lookupPath(path, {
      follow: true
    });
    var node = lookup.node;

    if (!node.node_ops.readdir) {
      throw new FS.ErrnoError(54);
    }

    return node.node_ops.readdir(node);
  },
  unlink: path => {
    var lookup = FS.lookupPath(path, {
      parent: true
    });
    var parent = lookup.node;

    if (!parent) {
      throw new FS.ErrnoError(44);
    }

    var name = PATH.basename(path);
    var node = FS.lookupNode(parent, name);
    var errCode = FS.mayDelete(parent, name, false);

    if (errCode) {
      // According to POSIX, we should map EISDIR to EPERM, but
      // we instead do what Linux does (and we must, as we use
      // the musl linux libc).
      throw new FS.ErrnoError(errCode);
    }

    if (!parent.node_ops.unlink) {
      throw new FS.ErrnoError(63);
    }

    if (FS.isMountpoint(node)) {
      throw new FS.ErrnoError(10);
    }

    parent.node_ops.unlink(parent, name);
    FS.destroyNode(node);
  },
  readlink: path => {
    var lookup = FS.lookupPath(path);
    var link = lookup.node;

    if (!link) {
      throw new FS.ErrnoError(44);
    }

    if (!link.node_ops.readlink) {
      throw new FS.ErrnoError(28);
    }

    return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
  },
  stat: (path, dontFollow) => {
    var lookup = FS.lookupPath(path, {
      follow: !dontFollow
    });
    var node = lookup.node;

    if (!node) {
      throw new FS.ErrnoError(44);
    }

    if (!node.node_ops.getattr) {
      throw new FS.ErrnoError(63);
    }

    return node.node_ops.getattr(node);
  },
  lstat: path => {
    return FS.stat(path, true);
  },
  chmod: (path, mode, dontFollow) => {
    var node;

    if (typeof path == 'string') {
      var lookup = FS.lookupPath(path, {
        follow: !dontFollow
      });
      node = lookup.node;
    } else {
      node = path;
    }

    if (!node.node_ops.setattr) {
      throw new FS.ErrnoError(63);
    }

    node.node_ops.setattr(node, {
      mode: mode & 4095 | node.mode & ~4095,
      timestamp: Date.now()
    });
  },
  lchmod: (path, mode) => {
    FS.chmod(path, mode, true);
  },
  fchmod: (fd, mode) => {
    var stream = FS.getStream(fd);

    if (!stream) {
      throw new FS.ErrnoError(8);
    }

    FS.chmod(stream.node, mode);
  },
  chown: (path, uid, gid, dontFollow) => {
    var node;

    if (typeof path == 'string') {
      var lookup = FS.lookupPath(path, {
        follow: !dontFollow
      });
      node = lookup.node;
    } else {
      node = path;
    }

    if (!node.node_ops.setattr) {
      throw new FS.ErrnoError(63);
    }

    node.node_ops.setattr(node, {
      timestamp: Date.now() // we ignore the uid / gid for now

    });
  },
  lchown: (path, uid, gid) => {
    FS.chown(path, uid, gid, true);
  },
  fchown: (fd, uid, gid) => {
    var stream = FS.getStream(fd);

    if (!stream) {
      throw new FS.ErrnoError(8);
    }

    FS.chown(stream.node, uid, gid);
  },
  truncate: (path, len) => {
    if (len < 0) {
      throw new FS.ErrnoError(28);
    }

    var node;

    if (typeof path == 'string') {
      var lookup = FS.lookupPath(path, {
        follow: true
      });
      node = lookup.node;
    } else {
      node = path;
    }

    if (!node.node_ops.setattr) {
      throw new FS.ErrnoError(63);
    }

    if (FS.isDir(node.mode)) {
      throw new FS.ErrnoError(31);
    }

    if (!FS.isFile(node.mode)) {
      throw new FS.ErrnoError(28);
    }

    var errCode = FS.nodePermissions(node, 'w');

    if (errCode) {
      throw new FS.ErrnoError(errCode);
    }

    node.node_ops.setattr(node, {
      size: len,
      timestamp: Date.now()
    });
  },
  ftruncate: (fd, len) => {
    var stream = FS.getStream(fd);

    if (!stream) {
      throw new FS.ErrnoError(8);
    }

    if ((stream.flags & 2097155) === 0) {
      throw new FS.ErrnoError(28);
    }

    FS.truncate(stream.node, len);
  },
  utime: (path, atime, mtime) => {
    var lookup = FS.lookupPath(path, {
      follow: true
    });
    var node = lookup.node;
    node.node_ops.setattr(node, {
      timestamp: Math.max(atime, mtime)
    });
  },
  open: (path, flags, mode, fd_start, fd_end) => {
    if (path === "") {
      throw new FS.ErrnoError(44);
    }

    flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;
    mode = typeof mode == 'undefined' ? 438
    /* 0666 */
    : mode;

    if (flags & 64) {
      mode = mode & 4095 | 32768;
    } else {
      mode = 0;
    }

    var node;

    if (typeof path == 'object') {
      node = path;
    } else {
      path = PATH.normalize(path);

      try {
        var lookup = FS.lookupPath(path, {
          follow: !(flags & 131072)
        });
        node = lookup.node;
      } catch (e) {// ignore
      }
    } // perhaps we need to create the node


    var created = false;

    if (flags & 64) {
      if (node) {
        // if O_CREAT and O_EXCL are set, error out if the node already exists
        if (flags & 128) {
          throw new FS.ErrnoError(20);
        }
      } else {
        // node doesn't exist, try to create it
        node = FS.mknod(path, mode, 0);
        created = true;
      }
    }

    if (!node) {
      throw new FS.ErrnoError(44);
    } // can't truncate a device


    if (FS.isChrdev(node.mode)) {
      flags &= ~512;
    } // if asked only for a directory, then this must be one


    if (flags & 65536 && !FS.isDir(node.mode)) {
      throw new FS.ErrnoError(54);
    } // check permissions, if this is not a file we just created now (it is ok to
    // create and write to a file with read-only permissions; it is read-only
    // for later use)


    if (!created) {
      var errCode = FS.mayOpen(node, flags);

      if (errCode) {
        throw new FS.ErrnoError(errCode);
      }
    } // do truncation if necessary


    if (flags & 512) {
      FS.truncate(node, 0);
    } // we've already handled these, don't pass down to the underlying vfs


    flags &= ~(128 | 512 | 131072); // register the stream with the filesystem

    var stream = FS.createStream({
      node: node,
      path: FS.getPath(node),
      flags: flags,
      seekable: true,
      position: 0,
      stream_ops: node.stream_ops,
      // used by the file family libc calls (fopen, fwrite, ferror, etc.)
      ungotten: [],
      error: false
    }, fd_start, fd_end); // call the new stream's open function

    if (stream.stream_ops.open) {
      stream.stream_ops.open(stream);
    }

    if (Module['logReadFiles'] && !(flags & 1)) {
      if (!FS.readFiles) FS.readFiles = {};

      if (!(path in FS.readFiles)) {
        FS.readFiles[path] = 1;
      }
    }

    return stream;
  },
  close: stream => {
    if (FS.isClosed(stream)) {
      throw new FS.ErrnoError(8);
    }

    if (stream.getdents) stream.getdents = null; // free readdir state

    try {
      if (stream.stream_ops.close) {
        stream.stream_ops.close(stream);
      }
    } catch (e) {
      throw e;
    } finally {
      FS.closeStream(stream.fd);
    }

    stream.fd = null;
  },
  isClosed: stream => {
    return stream.fd === null;
  },
  llseek: (stream, offset, whence) => {
    if (FS.isClosed(stream)) {
      throw new FS.ErrnoError(8);
    }

    if (!stream.seekable || !stream.stream_ops.llseek) {
      throw new FS.ErrnoError(70);
    }

    if (whence != 0 && whence != 1 && whence != 2) {
      throw new FS.ErrnoError(28);
    }

    stream.position = stream.stream_ops.llseek(stream, offset, whence);
    stream.ungotten = [];
    return stream.position;
  },
  read: (stream, buffer, offset, length, position) => {
    if (length < 0 || position < 0) {
      throw new FS.ErrnoError(28);
    }

    if (FS.isClosed(stream)) {
      throw new FS.ErrnoError(8);
    }

    if ((stream.flags & 2097155) === 1) {
      throw new FS.ErrnoError(8);
    }

    if (FS.isDir(stream.node.mode)) {
      throw new FS.ErrnoError(31);
    }

    if (!stream.stream_ops.read) {
      throw new FS.ErrnoError(28);
    }

    var seeking = typeof position != 'undefined';

    if (!seeking) {
      position = stream.position;
    } else if (!stream.seekable) {
      throw new FS.ErrnoError(70);
    }

    var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
    if (!seeking) stream.position += bytesRead;
    return bytesRead;
  },
  write: (stream, buffer, offset, length, position, canOwn) => {
    if (length < 0 || position < 0) {
      throw new FS.ErrnoError(28);
    }

    if (FS.isClosed(stream)) {
      throw new FS.ErrnoError(8);
    }

    if ((stream.flags & 2097155) === 0) {
      throw new FS.ErrnoError(8);
    }

    if (FS.isDir(stream.node.mode)) {
      throw new FS.ErrnoError(31);
    }

    if (!stream.stream_ops.write) {
      throw new FS.ErrnoError(28);
    }

    if (stream.seekable && stream.flags & 1024) {
      // seek to the end before writing in append mode
      FS.llseek(stream, 0, 2);
    }

    var seeking = typeof position != 'undefined';

    if (!seeking) {
      position = stream.position;
    } else if (!stream.seekable) {
      throw new FS.ErrnoError(70);
    }

    var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
    if (!seeking) stream.position += bytesWritten;
    return bytesWritten;
  },
  allocate: (stream, offset, length) => {
    if (FS.isClosed(stream)) {
      throw new FS.ErrnoError(8);
    }

    if (offset < 0 || length <= 0) {
      throw new FS.ErrnoError(28);
    }

    if ((stream.flags & 2097155) === 0) {
      throw new FS.ErrnoError(8);
    }

    if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
      throw new FS.ErrnoError(43);
    }

    if (!stream.stream_ops.allocate) {
      throw new FS.ErrnoError(138);
    }

    stream.stream_ops.allocate(stream, offset, length);
  },
  mmap: (stream, address, length, position, prot, flags) => {
    // User requests writing to file (prot & PROT_WRITE != 0).
    // Checking if we have permissions to write to the file unless
    // MAP_PRIVATE flag is set. According to POSIX spec it is possible
    // to write to file opened in read-only mode with MAP_PRIVATE flag,
    // as all modifications will be visible only in the memory of
    // the current process.
    if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
      throw new FS.ErrnoError(2);
    }

    if ((stream.flags & 2097155) === 1) {
      throw new FS.ErrnoError(2);
    }

    if (!stream.stream_ops.mmap) {
      throw new FS.ErrnoError(43);
    }

    return stream.stream_ops.mmap(stream, address, length, position, prot, flags);
  },
  msync: (stream, buffer, offset, length, mmapFlags) => {
    if (!stream || !stream.stream_ops.msync) {
      return 0;
    }

    return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
  },
  munmap: stream => 0,
  ioctl: (stream, cmd, arg) => {
    if (!stream.stream_ops.ioctl) {
      throw new FS.ErrnoError(59);
    }

    return stream.stream_ops.ioctl(stream, cmd, arg);
  },
  readFile: (path, opts = {}) => {
    opts.flags = opts.flags || 0;
    opts.encoding = opts.encoding || 'binary';

    if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
      throw new Error('Invalid encoding type "' + opts.encoding + '"');
    }

    var ret;
    var stream = FS.open(path, opts.flags);
    var stat = FS.stat(path);
    var length = stat.size;
    var buf = new Uint8Array(length);
    FS.read(stream, buf, 0, length, 0);

    if (opts.encoding === 'utf8') {
      ret = UTF8ArrayToString(buf, 0);
    } else if (opts.encoding === 'binary') {
      ret = buf;
    }

    FS.close(stream);
    return ret;
  },
  writeFile: (path, data, opts = {}) => {
    opts.flags = opts.flags || 577;
    var stream = FS.open(path, opts.flags, opts.mode);

    if (typeof data == 'string') {
      var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
      var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
      FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
    } else if (ArrayBuffer.isView(data)) {
      FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
    } else {
      throw new Error('Unsupported data type');
    }

    FS.close(stream);
  },
  cwd: () => FS.currentPath,
  chdir: path => {
    var lookup = FS.lookupPath(path, {
      follow: true
    });

    if (lookup.node === null) {
      throw new FS.ErrnoError(44);
    }

    if (!FS.isDir(lookup.node.mode)) {
      throw new FS.ErrnoError(54);
    }

    var errCode = FS.nodePermissions(lookup.node, 'x');

    if (errCode) {
      throw new FS.ErrnoError(errCode);
    }

    FS.currentPath = lookup.path;
  },
  createDefaultDirectories: () => {
    FS.mkdir('/tmp');
    FS.mkdir('/home');
    FS.mkdir('/home/web_user');
  },
  createDefaultDevices: () => {
    // create /dev
    FS.mkdir('/dev'); // setup /dev/null

    FS.registerDevice(FS.makedev(1, 3), {
      read: () => 0,
      write: (stream, buffer, offset, length, pos) => length
    });
    FS.mkdev('/dev/null', FS.makedev(1, 3)); // setup /dev/tty and /dev/tty1
    // stderr needs to print output using err() rather than out()
    // so we register a second tty just for it.

    TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
    TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
    FS.mkdev('/dev/tty', FS.makedev(5, 0));
    FS.mkdev('/dev/tty1', FS.makedev(6, 0)); // setup /dev/[u]random

    var random_device = getRandomDevice();
    FS.createDevice('/dev', 'random', random_device);
    FS.createDevice('/dev', 'urandom', random_device); // we're not going to emulate the actual shm device,
    // just create the tmp dirs that reside in it commonly

    FS.mkdir('/dev/shm');
    FS.mkdir('/dev/shm/tmp');
  },
  createSpecialDirectories: () => {
    // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the
    // name of the stream for fd 6 (see test_unistd_ttyname)
    FS.mkdir('/proc');
    var proc_self = FS.mkdir('/proc/self');
    FS.mkdir('/proc/self/fd');
    FS.mount({
      mount: () => {
        var node = FS.createNode(proc_self, 'fd', 16384 | 511
        /* 0777 */
        , 73);
        node.node_ops = {
          lookup: (parent, name) => {
            var fd = +name;
            var stream = FS.getStream(fd);
            if (!stream) throw new FS.ErrnoError(8);
            var ret = {
              parent: null,
              mount: {
                mountpoint: 'fake'
              },
              node_ops: {
                readlink: () => stream.path
              }
            };
            ret.parent = ret; // make it look like a simple root node

            return ret;
          }
        };
        return node;
      }
    }, {}, '/proc/self/fd');
  },
  createStandardStreams: () => {
    // TODO deprecate the old functionality of a single
    // input / output callback and that utilizes FS.createDevice
    // and instead require a unique set of stream ops
    // by default, we symlink the standard streams to the
    // default tty devices. however, if the standard streams
    // have been overwritten we create a unique device for
    // them instead.
    if (Module['stdin']) {
      FS.createDevice('/dev', 'stdin', Module['stdin']);
    } else {
      FS.symlink('/dev/tty', '/dev/stdin');
    }

    if (Module['stdout']) {
      FS.createDevice('/dev', 'stdout', null, Module['stdout']);
    } else {
      FS.symlink('/dev/tty', '/dev/stdout');
    }

    if (Module['stderr']) {
      FS.createDevice('/dev', 'stderr', null, Module['stderr']);
    } else {
      FS.symlink('/dev/tty1', '/dev/stderr');
    } // open default streams for the stdin, stdout and stderr devices


    var stdin = FS.open('/dev/stdin', 0);
    var stdout = FS.open('/dev/stdout', 1);
    var stderr = FS.open('/dev/stderr', 1);
    assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
    assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
    assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
  },
  ensureErrnoError: () => {
    if (FS.ErrnoError) return;

    FS.ErrnoError =
    /** @this{Object} */
    function ErrnoError(errno, node) {
      this.node = node;

      this.setErrno =
      /** @this{Object} */
      function (errno) {
        this.errno = errno;

        for (var key in ERRNO_CODES) {
          if (ERRNO_CODES[key] === errno) {
            this.code = key;
            break;
          }
        }
      };

      this.setErrno(errno);
      this.message = ERRNO_MESSAGES[errno]; // Try to get a maximally helpful stack trace. On Node.js, getting Error.stack
      // now ensures it shows what we want.

      if (this.stack) {
        // Define the stack property for Node.js 4, which otherwise errors on the next line.
        Object.defineProperty(this, "stack", {
          value: new Error().stack,
          writable: true
        });
        this.stack = demangleAll(this.stack);
      }
    };

    FS.ErrnoError.prototype = new Error();
    FS.ErrnoError.prototype.constructor = FS.ErrnoError; // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)

    [44].forEach(code => {
      FS.genericErrors[code] = new FS.ErrnoError(code);
      FS.genericErrors[code].stack = '<generic error, no stack>';
    });
  },
  staticInit: () => {
    FS.ensureErrnoError();
    FS.nameTable = new Array(4096);
    FS.mount(MEMFS, {}, '/');
    FS.createDefaultDirectories();
    FS.createDefaultDevices();
    FS.createSpecialDirectories();
    FS.filesystems = {
      'MEMFS': MEMFS
    };
  },
  init: (input, output, error) => {
    assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
    FS.init.initialized = true;
    FS.ensureErrnoError(); // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here

    Module['stdin'] = input || Module['stdin'];
    Module['stdout'] = output || Module['stdout'];
    Module['stderr'] = error || Module['stderr'];
    FS.createStandardStreams();
  },
  quit: () => {
    FS.init.initialized = false; // Call musl-internal function to close all stdio streams, so nothing is
    // left in internal buffers.

    ___stdio_exit(); // close all of our streams


    for (var i = 0; i < FS.streams.length; i++) {
      var stream = FS.streams[i];

      if (!stream) {
        continue;
      }

      FS.close(stream);
    }
  },
  getMode: (canRead, canWrite) => {
    var mode = 0;
    if (canRead) mode |= 292 | 73;
    if (canWrite) mode |= 146;
    return mode;
  },
  findObject: (path, dontResolveLastLink) => {
    var ret = FS.analyzePath(path, dontResolveLastLink);

    if (ret.exists) {
      return ret.object;
    } else {
      return null;
    }
  },
  analyzePath: (path, dontResolveLastLink) => {
    // operate from within the context of the symlink's target
    try {
      var lookup = FS.lookupPath(path, {
        follow: !dontResolveLastLink
      });
      path = lookup.path;
    } catch (e) {}

    var ret = {
      isRoot: false,
      exists: false,
      error: 0,
      name: null,
      path: null,
      object: null,
      parentExists: false,
      parentPath: null,
      parentObject: null
    };

    try {
      var lookup = FS.lookupPath(path, {
        parent: true
      });
      ret.parentExists = true;
      ret.parentPath = lookup.path;
      ret.parentObject = lookup.node;
      ret.name = PATH.basename(path);
      lookup = FS.lookupPath(path, {
        follow: !dontResolveLastLink
      });
      ret.exists = true;
      ret.path = lookup.path;
      ret.object = lookup.node;
      ret.name = lookup.node.name;
      ret.isRoot = lookup.path === '/';
    } catch (e) {
      ret.error = e.errno;
    }

    ;
    return ret;
  },
  createPath: (parent, path, canRead, canWrite) => {
    parent = typeof parent == 'string' ? parent : FS.getPath(parent);
    var parts = path.split('/').reverse();

    while (parts.length) {
      var part = parts.pop();
      if (!part) continue;
      var current = PATH.join2(parent, part);

      try {
        FS.mkdir(current);
      } catch (e) {// ignore EEXIST
      }

      parent = current;
    }

    return current;
  },
  createFile: (parent, name, properties, canRead, canWrite) => {
    var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);
    var mode = FS.getMode(canRead, canWrite);
    return FS.create(path, mode);
  },
  createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {
    var path = name;

    if (parent) {
      parent = typeof parent == 'string' ? parent : FS.getPath(parent);
      path = name ? PATH.join2(parent, name) : parent;
    }

    var mode = FS.getMode(canRead, canWrite);
    var node = FS.create(path, mode);

    if (data) {
      if (typeof data == 'string') {
        var arr = new Array(data.length);

        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);

        data = arr;
      } // make sure we can write to the file


      FS.chmod(node, mode | 146);
      var stream = FS.open(node, 577);
      FS.write(stream, data, 0, data.length, 0, canOwn);
      FS.close(stream);
      FS.chmod(node, mode);
    }

    return node;
  },
  createDevice: (parent, name, input, output) => {
    var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);
    var mode = FS.getMode(!!input, !!output);
    if (!FS.createDevice.major) FS.createDevice.major = 64;
    var dev = FS.makedev(FS.createDevice.major++, 0); // Create a fake device that a set of stream ops to emulate
    // the old behavior.

    FS.registerDevice(dev, {
      open: stream => {
        stream.seekable = false;
      },
      close: stream => {
        // flush any pending line data
        if (output && output.buffer && output.buffer.length) {
          output(10);
        }
      },
      read: (stream, buffer, offset, length, pos
      /* ignored */
      ) => {
        var bytesRead = 0;

        for (var i = 0; i < length; i++) {
          var result;

          try {
            result = input();
          } catch (e) {
            throw new FS.ErrnoError(29);
          }

          if (result === undefined && bytesRead === 0) {
            throw new FS.ErrnoError(6);
          }

          if (result === null || result === undefined) break;
          bytesRead++;
          buffer[offset + i] = result;
        }

        if (bytesRead) {
          stream.node.timestamp = Date.now();
        }

        return bytesRead;
      },
      write: (stream, buffer, offset, length, pos) => {
        for (var i = 0; i < length; i++) {
          try {
            output(buffer[offset + i]);
          } catch (e) {
            throw new FS.ErrnoError(29);
          }
        }

        if (length) {
          stream.node.timestamp = Date.now();
        }

        return i;
      }
    });
    return FS.mkdev(path, mode, dev);
  },
  forceLoadFile: obj => {
    if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;

    if (typeof XMLHttpRequest != 'undefined') {
      throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
    } else if (read_) {
      // Command-line.
      try {
        // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
        //          read() will try to parse UTF8.
        obj.contents = intArrayFromString(read_(obj.url), true);
        obj.usedBytes = obj.contents.length;
      } catch (e) {
        throw new FS.ErrnoError(29);
      }
    } else {
      throw new Error('Cannot load without read() or XMLHttpRequest.');
    }
  },
  createLazyFile: (parent, name, url, canRead, canWrite) => {
    // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.

    /** @constructor */
    function LazyUint8Array() {
      this.lengthKnown = false;
      this.chunks = []; // Loaded chunks. Index is the chunk number
    }

    LazyUint8Array.prototype.get =
    /** @this{Object} */
    function LazyUint8Array_get(idx) {
      if (idx > this.length - 1 || idx < 0) {
        return undefined;
      }

      var chunkOffset = idx % this.chunkSize;
      var chunkNum = idx / this.chunkSize | 0;
      return this.getter(chunkNum)[chunkOffset];
    };

    LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
      this.getter = getter;
    };

    LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
      // Find length
      var xhr = new XMLHttpRequest();
      xhr.open('HEAD', url, false);
      xhr.send(null);
      if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
      var datalength = Number(xhr.getResponseHeader("Content-length"));
      var header;
      var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
      var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
      var chunkSize = 1024 * 1024; // Chunk size in bytes

      if (!hasByteServing) chunkSize = datalength; // Function to get a range from the remote URL.

      var doXHR = (from, to) => {
        if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
        if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!"); // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.

        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to); // Some hints to the browser that we want binary data.

        xhr.responseType = 'arraybuffer';

        if (xhr.overrideMimeType) {
          xhr.overrideMimeType('text/plain; charset=x-user-defined');
        }

        xhr.send(null);
        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);

        if (xhr.response !== undefined) {
          return new Uint8Array(
          /** @type{Array<number>} */
          xhr.response || []);
        } else {
          return intArrayFromString(xhr.responseText || '', true);
        }
      };

      var lazyArray = this;
      lazyArray.setDataGetter(chunkNum => {
        var start = chunkNum * chunkSize;
        var end = (chunkNum + 1) * chunkSize - 1; // including this byte

        end = Math.min(end, datalength - 1); // if datalength-1 is selected, this is the last block

        if (typeof lazyArray.chunks[chunkNum] == 'undefined') {
          lazyArray.chunks[chunkNum] = doXHR(start, end);
        }

        if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');
        return lazyArray.chunks[chunkNum];
      });

      if (usesGzip || !datalength) {
        // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
        chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file

        datalength = this.getter(0).length;
        chunkSize = datalength;
        out("LazyFiles on gzip forces download of the whole file when length is accessed");
      }

      this._length = datalength;
      this._chunkSize = chunkSize;
      this.lengthKnown = true;
    };

    if (typeof XMLHttpRequest != 'undefined') {
      if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
      var lazyArray = new LazyUint8Array();
      Object.defineProperties(lazyArray, {
        length: {
          get:
          /** @this{Object} */
          function () {
            if (!this.lengthKnown) {
              this.cacheLength();
            }

            return this._length;
          }
        },
        chunkSize: {
          get:
          /** @this{Object} */
          function () {
            if (!this.lengthKnown) {
              this.cacheLength();
            }

            return this._chunkSize;
          }
        }
      });
      var properties = {
        isDevice: false,
        contents: lazyArray
      };
    } else {
      var properties = {
        isDevice: false,
        url: url
      };
    }

    var node = FS.createFile(parent, name, properties, canRead, canWrite); // This is a total hack, but I want to get this lazy file code out of the
    // core of MEMFS. If we want to keep this lazy file concept I feel it should
    // be its own thin LAZYFS proxying calls to MEMFS.

    if (properties.contents) {
      node.contents = properties.contents;
    } else if (properties.url) {
      node.contents = null;
      node.url = properties.url;
    } // Add a function that defers querying the file size until it is asked the first time.


    Object.defineProperties(node, {
      usedBytes: {
        get:
        /** @this {FSNode} */
        function () {
          return this.contents.length;
        }
      }
    }); // override each stream op with one that tries to force load the lazy file first

    var stream_ops = {};
    var keys = Object.keys(node.stream_ops);
    keys.forEach(key => {
      var fn = node.stream_ops[key];

      stream_ops[key] = function forceLoadLazyFile() {
        FS.forceLoadFile(node);
        return fn.apply(null, arguments);
      };
    }); // use a custom read function

    stream_ops.read = (stream, buffer, offset, length, position) => {
      FS.forceLoadFile(node);
      var contents = stream.node.contents;
      if (position >= contents.length) return 0;
      var size = Math.min(contents.length - position, length);
      assert(size >= 0);

      if (contents.slice) {
        // normal array
        for (var i = 0; i < size; i++) {
          buffer[offset + i] = contents[position + i];
        }
      } else {
        for (var i = 0; i < size; i++) {
          // LazyUint8Array from sync binary XHR
          buffer[offset + i] = contents.get(position + i);
        }
      }

      return size;
    };

    node.stream_ops = stream_ops;
    return node;
  },
  createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {
    // TODO we should allow people to just pass in a complete filename instead
    // of parent and name being that we just join them anyways
    var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
    var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname

    function processData(byteArray) {
      function finish(byteArray) {
        if (preFinish) preFinish();

        if (!dontCreateFile) {
          FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
        }

        if (onload) onload();
        removeRunDependency(dep);
      }

      if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {
        if (onerror) onerror();
        removeRunDependency(dep);
      })) {
        return;
      }

      finish(byteArray);
    }

    addRunDependency(dep);

    if (typeof url == 'string') {
      asyncLoad(url, byteArray => processData(byteArray), onerror);
    } else {
      processData(url);
    }
  },
  indexedDB: () => {
    return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  },
  DB_NAME: () => {
    return 'EM_FS_' + window.location.pathname;
  },
  DB_VERSION: 20,
  DB_STORE_NAME: "FILE_DATA",
  saveFilesToDB: (paths, onload, onerror) => {
    onload = onload || (() => {});

    onerror = onerror || (() => {});

    var indexedDB = FS.indexedDB();

    try {
      var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
    } catch (e) {
      return onerror(e);
    }

    openRequest.onupgradeneeded = () => {
      out('creating db');
      var db = openRequest.result;
      db.createObjectStore(FS.DB_STORE_NAME);
    };

    openRequest.onsuccess = () => {
      var db = openRequest.result;
      var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
      var files = transaction.objectStore(FS.DB_STORE_NAME);
      var ok = 0,
          fail = 0,
          total = paths.length;

      function finish() {
        if (fail == 0) onload();else onerror();
      }

      paths.forEach(path => {
        var putRequest = files.put(FS.analyzePath(path).object.contents, path);

        putRequest.onsuccess = () => {
          ok++;
          if (ok + fail == total) finish();
        };

        putRequest.onerror = () => {
          fail++;
          if (ok + fail == total) finish();
        };
      });
      transaction.onerror = onerror;
    };

    openRequest.onerror = onerror;
  },
  loadFilesFromDB: (paths, onload, onerror) => {
    onload = onload || (() => {});

    onerror = onerror || (() => {});

    var indexedDB = FS.indexedDB();

    try {
      var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
    } catch (e) {
      return onerror(e);
    }

    openRequest.onupgradeneeded = onerror; // no database to load from

    openRequest.onsuccess = () => {
      var db = openRequest.result;

      try {
        var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
      } catch (e) {
        onerror(e);
        return;
      }

      var files = transaction.objectStore(FS.DB_STORE_NAME);
      var ok = 0,
          fail = 0,
          total = paths.length;

      function finish() {
        if (fail == 0) onload();else onerror();
      }

      paths.forEach(path => {
        var getRequest = files.get(path);

        getRequest.onsuccess = () => {
          if (FS.analyzePath(path).exists) {
            FS.unlink(path);
          }

          FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
          ok++;
          if (ok + fail == total) finish();
        };

        getRequest.onerror = () => {
          fail++;
          if (ok + fail == total) finish();
        };
      });
      transaction.onerror = onerror;
    };

    openRequest.onerror = onerror;
  },
  absolutePath: () => {
    abort('FS.absolutePath has been removed; use PATH_FS.resolve instead');
  },
  createFolder: () => {
    abort('FS.createFolder has been removed; use FS.mkdir instead');
  },
  createLink: () => {
    abort('FS.createLink has been removed; use FS.symlink instead');
  },
  joinPath: () => {
    abort('FS.joinPath has been removed; use PATH.join instead');
  },
  mmapAlloc: () => {
    abort('FS.mmapAlloc has been replaced by the top level function mmapAlloc');
  },
  standardizePath: () => {
    abort('FS.standardizePath has been removed; use PATH.normalize instead');
  }
};
var SYSCALLS = {
  DEFAULT_POLLMASK: 5,
  calculateAt: function (dirfd, path, allowEmpty) {
    if (path[0] === '/') {
      return path;
    } // relative path


    var dir;

    if (dirfd === -100) {
      dir = FS.cwd();
    } else {
      var dirstream = FS.getStream(dirfd);
      if (!dirstream) throw new FS.ErrnoError(8);
      dir = dirstream.path;
    }

    if (path.length == 0) {
      if (!allowEmpty) {
        throw new FS.ErrnoError(44);
        ;
      }

      return dir;
    }

    return PATH.join2(dir, path);
  },
  doStat: function (func, path, buf) {
    try {
      var stat = func(path);
    } catch (e) {
      if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
        // an error occurred while trying to look up the path; we should just report ENOTDIR
        return -54;
      }

      throw e;
    }

    HEAP32[buf >> 2] = stat.dev;
    HEAP32[buf + 4 >> 2] = 0;
    HEAP32[buf + 8 >> 2] = stat.ino;
    HEAP32[buf + 12 >> 2] = stat.mode;
    HEAP32[buf + 16 >> 2] = stat.nlink;
    HEAP32[buf + 20 >> 2] = stat.uid;
    HEAP32[buf + 24 >> 2] = stat.gid;
    HEAP32[buf + 28 >> 2] = stat.rdev;
    HEAP32[buf + 32 >> 2] = 0;
    tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];
    HEAP32[buf + 48 >> 2] = 4096;
    HEAP32[buf + 52 >> 2] = stat.blocks;
    HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1000 | 0;
    HEAP32[buf + 60 >> 2] = 0;
    HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1000 | 0;
    HEAP32[buf + 68 >> 2] = 0;
    HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1000 | 0;
    HEAP32[buf + 76 >> 2] = 0;
    tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];
    return 0;
  },
  doMsync: function (addr, stream, len, flags, offset) {
    var buffer = HEAPU8.slice(addr, addr + len);
    FS.msync(stream, buffer, offset, len, flags);
  },
  doMkdir: function (path, mode) {
    // remove a trailing slash, if one - /a/b/ has basename of '', but
    // we want to create b in the context of this function
    path = PATH.normalize(path);
    if (path[path.length - 1] === '/') path = path.substr(0, path.length - 1);
    FS.mkdir(path, mode, 0);
    return 0;
  },
  doMknod: function (path, mode, dev) {
    // we don't want this in the JS API as it uses mknod to create all nodes.
    switch (mode & 61440) {
      case 32768:
      case 8192:
      case 24576:
      case 4096:
      case 49152:
        break;

      default:
        return -28;
    }

    FS.mknod(path, mode, dev);
    return 0;
  },
  doReadlink: function (path, buf, bufsize) {
    if (bufsize <= 0) return -28;
    var ret = FS.readlink(path);
    var len = Math.min(bufsize, lengthBytesUTF8(ret));
    var endChar = HEAP8[buf + len];
    stringToUTF8(ret, buf, bufsize + 1); // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
    // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.

    HEAP8[buf + len] = endChar;
    return len;
  },
  doAccess: function (path, amode) {
    if (amode & ~7) {
      // need a valid mode
      return -28;
    }

    var lookup = FS.lookupPath(path, {
      follow: true
    });
    var node = lookup.node;

    if (!node) {
      return -44;
    }

    var perms = '';
    if (amode & 4) perms += 'r';
    if (amode & 2) perms += 'w';
    if (amode & 1) perms += 'x';

    if (perms
    /* otherwise, they've just passed F_OK */
    && FS.nodePermissions(node, perms)) {
      return -2;
    }

    return 0;
  },
  doReadv: function (stream, iov, iovcnt, offset) {
    var ret = 0;

    for (var i = 0; i < iovcnt; i++) {
      var ptr = HEAP32[iov + i * 8 >> 2];
      var len = HEAP32[iov + (i * 8 + 4) >> 2];
      var curr = FS.read(stream, HEAP8, ptr, len, offset);
      if (curr < 0) return -1;
      ret += curr;
      if (curr < len) break; // nothing more to read
    }

    return ret;
  },
  doWritev: function (stream, iov, iovcnt, offset) {
    var ret = 0;

    for (var i = 0; i < iovcnt; i++) {
      var ptr = HEAP32[iov + i * 8 >> 2];
      var len = HEAP32[iov + (i * 8 + 4) >> 2];
      var curr = FS.write(stream, HEAP8, ptr, len, offset);
      if (curr < 0) return -1;
      ret += curr;
    }

    return ret;
  },
  varargs: undefined,
  get: function () {
    assert(SYSCALLS.varargs != undefined);
    SYSCALLS.varargs += 4;
    var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
    return ret;
  },
  getStr: function (ptr) {
    var ret = UTF8ToString(ptr);
    return ret;
  },
  getStreamFromFD: function (fd) {
    var stream = FS.getStream(fd);
    if (!stream) throw new FS.ErrnoError(8);
    return stream;
  },
  get64: function (low, high) {
    if (low >= 0) assert(high === 0);else assert(high === -1);
    return low;
  }
};

function ___syscall_dup(fd) {
  try {
    var old = SYSCALLS.getStreamFromFD(fd);
    return FS.open(old.path, old.flags, 0).fd;
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return -e.errno;
  }
}

function ___syscall_newfstatat(dirfd, path, buf, flags) {
  try {
    path = SYSCALLS.getStr(path);
    var nofollow = flags & 256;
    var allowEmpty = flags & 4096;
    flags = flags & ~4352;
    assert(!flags, flags);
    path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);
    return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return -e.errno;
  }
}

function ___syscall_openat(dirfd, path, flags, varargs) {
  SYSCALLS.varargs = varargs;

  try {
    path = SYSCALLS.getStr(path);
    path = SYSCALLS.calculateAt(dirfd, path);
    var mode = varargs ? SYSCALLS.get() : 0;
    return FS.open(path, flags, mode).fd;
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return -e.errno;
  }
}

function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}

function getShiftFromSize(size) {
  switch (size) {
    case 1:
      return 0;

    case 2:
      return 1;

    case 4:
      return 2;

    case 8:
      return 3;

    default:
      throw new TypeError('Unknown type size: ' + size);
  }
}

function embind_init_charCodes() {
  var codes = new Array(256);

  for (var i = 0; i < 256; ++i) {
    codes[i] = String.fromCharCode(i);
  }

  embind_charCodes = codes;
}

var embind_charCodes = undefined;

function readLatin1String(ptr) {
  var ret = "";
  var c = ptr;

  while (HEAPU8[c]) {
    ret += embind_charCodes[HEAPU8[c++]];
  }

  return ret;
}

var awaitingDependencies = {};
var registeredTypes = {};
var typeDependencies = {};
var char_0 = 48;
var char_9 = 57;

function makeLegalFunctionName(name) {
  if (undefined === name) {
    return '_unknown';
  }

  name = name.replace(/[^a-zA-Z0-9_]/g, '$');
  var f = name.charCodeAt(0);

  if (f >= char_0 && f <= char_9) {
    return '_' + name;
  }

  return name;
}

function createNamedFunction(name, body) {
  name = makeLegalFunctionName(name);
  /*jshint evil:true*/

  return new Function("body", "return function " + name + "() {\n" + "    \"use strict\";" + "    return body.apply(this, arguments);\n" + "};\n")(body);
}

function extendError(baseErrorType, errorName) {
  var errorClass = createNamedFunction(errorName, function (message) {
    this.name = errorName;
    this.message = message;
    var stack = new Error(message).stack;

    if (stack !== undefined) {
      this.stack = this.toString() + '\n' + stack.replace(/^Error(:[^\n]*)?\n/, '');
    }
  });
  errorClass.prototype = Object.create(baseErrorType.prototype);
  errorClass.prototype.constructor = errorClass;

  errorClass.prototype.toString = function () {
    if (this.message === undefined) {
      return this.name;
    } else {
      return this.name + ': ' + this.message;
    }
  };

  return errorClass;
}

var BindingError = undefined;

function throwBindingError(message) {
  throw new BindingError(message);
}

var InternalError = undefined;

function throwInternalError(message) {
  throw new InternalError(message);
}

function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
  myTypes.forEach(function (type) {
    typeDependencies[type] = dependentTypes;
  });

  function onComplete(typeConverters) {
    var myTypeConverters = getTypeConverters(typeConverters);

    if (myTypeConverters.length !== myTypes.length) {
      throwInternalError('Mismatched type converter count');
    }

    for (var i = 0; i < myTypes.length; ++i) {
      registerType(myTypes[i], myTypeConverters[i]);
    }
  }

  var typeConverters = new Array(dependentTypes.length);
  var unregisteredTypes = [];
  var registered = 0;
  dependentTypes.forEach((dt, i) => {
    if (registeredTypes.hasOwnProperty(dt)) {
      typeConverters[i] = registeredTypes[dt];
    } else {
      unregisteredTypes.push(dt);

      if (!awaitingDependencies.hasOwnProperty(dt)) {
        awaitingDependencies[dt] = [];
      }

      awaitingDependencies[dt].push(() => {
        typeConverters[i] = registeredTypes[dt];
        ++registered;

        if (registered === unregisteredTypes.length) {
          onComplete(typeConverters);
        }
      });
    }
  });

  if (0 === unregisteredTypes.length) {
    onComplete(typeConverters);
  }
}
/** @param {Object=} options */


function registerType(rawType, registeredInstance, options = {}) {
  if (!('argPackAdvance' in registeredInstance)) {
    throw new TypeError('registerType registeredInstance requires argPackAdvance');
  }

  var name = registeredInstance.name;

  if (!rawType) {
    throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
  }

  if (registeredTypes.hasOwnProperty(rawType)) {
    if (options.ignoreDuplicateRegistrations) {
      return;
    } else {
      throwBindingError("Cannot register type '" + name + "' twice");
    }
  }

  registeredTypes[rawType] = registeredInstance;
  delete typeDependencies[rawType];

  if (awaitingDependencies.hasOwnProperty(rawType)) {
    var callbacks = awaitingDependencies[rawType];
    delete awaitingDependencies[rawType];
    callbacks.forEach(cb => cb());
  }
}

function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
  var shift = getShiftFromSize(size);
  name = readLatin1String(name);
  registerType(rawType, {
    name: name,
    'fromWireType': function (wt) {
      // ambiguous emscripten ABI: sometimes return values are
      // true or false, and sometimes integers (0 or 1)
      return !!wt;
    },
    'toWireType': function (destructors, o) {
      return o ? trueValue : falseValue;
    },
    'argPackAdvance': 8,
    'readValueFromPointer': function (pointer) {
      // TODO: if heap is fixed (like in asm.js) this could be executed outside
      var heap;

      if (size === 1) {
        heap = HEAP8;
      } else if (size === 2) {
        heap = HEAP16;
      } else if (size === 4) {
        heap = HEAP32;
      } else {
        throw new TypeError("Unknown boolean type size: " + name);
      }

      return this['fromWireType'](heap[pointer >> shift]);
    },
    destructorFunction: null // This type does not need a destructor

  });
}

function ClassHandle_isAliasOf(other) {
  if (!(this instanceof ClassHandle)) {
    return false;
  }

  if (!(other instanceof ClassHandle)) {
    return false;
  }

  var leftClass = this.$$.ptrType.registeredClass;
  var left = this.$$.ptr;
  var rightClass = other.$$.ptrType.registeredClass;
  var right = other.$$.ptr;

  while (leftClass.baseClass) {
    left = leftClass.upcast(left);
    leftClass = leftClass.baseClass;
  }

  while (rightClass.baseClass) {
    right = rightClass.upcast(right);
    rightClass = rightClass.baseClass;
  }

  return leftClass === rightClass && left === right;
}

function shallowCopyInternalPointer(o) {
  return {
    count: o.count,
    deleteScheduled: o.deleteScheduled,
    preservePointerOnDelete: o.preservePointerOnDelete,
    ptr: o.ptr,
    ptrType: o.ptrType,
    smartPtr: o.smartPtr,
    smartPtrType: o.smartPtrType
  };
}

function throwInstanceAlreadyDeleted(obj) {
  function getInstanceTypeName(handle) {
    return handle.$$.ptrType.registeredClass.name;
  }

  throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');
}

var finalizationRegistry = false;

function detachFinalizer(handle) {}

function runDestructor($$) {
  if ($$.smartPtr) {
    $$.smartPtrType.rawDestructor($$.smartPtr);
  } else {
    $$.ptrType.registeredClass.rawDestructor($$.ptr);
  }
}

function releaseClassHandle($$) {
  $$.count.value -= 1;
  var toDelete = 0 === $$.count.value;

  if (toDelete) {
    runDestructor($$);
  }
}

function downcastPointer(ptr, ptrClass, desiredClass) {
  if (ptrClass === desiredClass) {
    return ptr;
  }

  if (undefined === desiredClass.baseClass) {
    return null; // no conversion
  }

  var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);

  if (rv === null) {
    return null;
  }

  return desiredClass.downcast(rv);
}

var registeredPointers = {};

function getInheritedInstanceCount() {
  return Object.keys(registeredInstances).length;
}

function getLiveInheritedInstances() {
  var rv = [];

  for (var k in registeredInstances) {
    if (registeredInstances.hasOwnProperty(k)) {
      rv.push(registeredInstances[k]);
    }
  }

  return rv;
}

var deletionQueue = [];

function flushPendingDeletes() {
  while (deletionQueue.length) {
    var obj = deletionQueue.pop();
    obj.$$.deleteScheduled = false;
    obj['delete']();
  }
}

var delayFunction = undefined;

function setDelayFunction(fn) {
  delayFunction = fn;

  if (deletionQueue.length && delayFunction) {
    delayFunction(flushPendingDeletes);
  }
}

function init_embind() {
  Module['getInheritedInstanceCount'] = getInheritedInstanceCount;
  Module['getLiveInheritedInstances'] = getLiveInheritedInstances;
  Module['flushPendingDeletes'] = flushPendingDeletes;
  Module['setDelayFunction'] = setDelayFunction;
}

var registeredInstances = {};

function getBasestPointer(class_, ptr) {
  if (ptr === undefined) {
    throwBindingError('ptr should not be undefined');
  }

  while (class_.baseClass) {
    ptr = class_.upcast(ptr);
    class_ = class_.baseClass;
  }

  return ptr;
}

function getInheritedInstance(class_, ptr) {
  ptr = getBasestPointer(class_, ptr);
  return registeredInstances[ptr];
}

function makeClassHandle(prototype, record) {
  if (!record.ptrType || !record.ptr) {
    throwInternalError('makeClassHandle requires ptr and ptrType');
  }

  var hasSmartPtrType = !!record.smartPtrType;
  var hasSmartPtr = !!record.smartPtr;

  if (hasSmartPtrType !== hasSmartPtr) {
    throwInternalError('Both smartPtrType and smartPtr must be specified');
  }

  record.count = {
    value: 1
  };
  return attachFinalizer(Object.create(prototype, {
    $$: {
      value: record
    }
  }));
}

function RegisteredPointer_fromWireType(ptr) {
  // ptr is a raw pointer (or a raw smartpointer)
  // rawPointer is a maybe-null raw pointer
  var rawPointer = this.getPointee(ptr);

  if (!rawPointer) {
    this.destructor(ptr);
    return null;
  }

  var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);

  if (undefined !== registeredInstance) {
    // JS object has been neutered, time to repopulate it
    if (0 === registeredInstance.$$.count.value) {
      registeredInstance.$$.ptr = rawPointer;
      registeredInstance.$$.smartPtr = ptr;
      return registeredInstance['clone']();
    } else {
      // else, just increment reference count on existing object
      // it already has a reference to the smart pointer
      var rv = registeredInstance['clone']();
      this.destructor(ptr);
      return rv;
    }
  }

  function makeDefaultHandle() {
    if (this.isSmartPointer) {
      return makeClassHandle(this.registeredClass.instancePrototype, {
        ptrType: this.pointeeType,
        ptr: rawPointer,
        smartPtrType: this,
        smartPtr: ptr
      });
    } else {
      return makeClassHandle(this.registeredClass.instancePrototype, {
        ptrType: this,
        ptr: ptr
      });
    }
  }

  var actualType = this.registeredClass.getActualType(rawPointer);
  var registeredPointerRecord = registeredPointers[actualType];

  if (!registeredPointerRecord) {
    return makeDefaultHandle.call(this);
  }

  var toType;

  if (this.isConst) {
    toType = registeredPointerRecord.constPointerType;
  } else {
    toType = registeredPointerRecord.pointerType;
  }

  var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);

  if (dp === null) {
    return makeDefaultHandle.call(this);
  }

  if (this.isSmartPointer) {
    return makeClassHandle(toType.registeredClass.instancePrototype, {
      ptrType: toType,
      ptr: dp,
      smartPtrType: this,
      smartPtr: ptr
    });
  } else {
    return makeClassHandle(toType.registeredClass.instancePrototype, {
      ptrType: toType,
      ptr: dp
    });
  }
}

function attachFinalizer(handle) {
  if ('undefined' === typeof FinalizationRegistry) {
    attachFinalizer = handle => handle;

    return handle;
  } // If the running environment has a FinalizationRegistry (see
  // https://github.com/tc39/proposal-weakrefs), then attach finalizers
  // for class handles.  We check for the presence of FinalizationRegistry
  // at run-time, not build-time.


  finalizationRegistry = new FinalizationRegistry(info => {
    console.warn(info.leakWarning.stack.replace(/^Error: /, ''));
    releaseClassHandle(info.$$);
  });

  attachFinalizer = handle => {
    var $$ = handle.$$;
    var hasSmartPtr = !!$$.smartPtr;

    if (hasSmartPtr) {
      // We should not call the destructor on raw pointers in case other code expects the pointee to live
      var info = {
        $$: $$
      }; // Create a warning as an Error instance in advance so that we can store
      // the current stacktrace and point to it when / if a leak is detected.
      // This is more useful than the empty stacktrace of `FinalizationRegistry`
      // callback.

      var cls = $$.ptrType.registeredClass;
      info.leakWarning = new Error("Embind found a leaked C++ instance " + cls.name + " <0x" + $$.ptr.toString(16) + ">.\n" + "We'll free it automatically in this case, but this functionality is not reliable across various environments.\n" + "Make sure to invoke .delete() manually once you're done with the instance instead.\n" + "Originally allocated"); // `.stack` will add "at ..." after this sentence

      if ('captureStackTrace' in Error) {
        Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);
      }

      finalizationRegistry.register(handle, info, handle);
    }

    return handle;
  };

  detachFinalizer = handle => finalizationRegistry.unregister(handle);

  return attachFinalizer(handle);
}

function ClassHandle_clone() {
  if (!this.$$.ptr) {
    throwInstanceAlreadyDeleted(this);
  }

  if (this.$$.preservePointerOnDelete) {
    this.$$.count.value += 1;
    return this;
  } else {
    var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {
      $$: {
        value: shallowCopyInternalPointer(this.$$)
      }
    }));
    clone.$$.count.value += 1;
    clone.$$.deleteScheduled = false;
    return clone;
  }
}

function ClassHandle_delete() {
  if (!this.$$.ptr) {
    throwInstanceAlreadyDeleted(this);
  }

  if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
    throwBindingError('Object already scheduled for deletion');
  }

  detachFinalizer(this);
  releaseClassHandle(this.$$);

  if (!this.$$.preservePointerOnDelete) {
    this.$$.smartPtr = undefined;
    this.$$.ptr = undefined;
  }
}

function ClassHandle_isDeleted() {
  return !this.$$.ptr;
}

function ClassHandle_deleteLater() {
  if (!this.$$.ptr) {
    throwInstanceAlreadyDeleted(this);
  }

  if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
    throwBindingError('Object already scheduled for deletion');
  }

  deletionQueue.push(this);

  if (deletionQueue.length === 1 && delayFunction) {
    delayFunction(flushPendingDeletes);
  }

  this.$$.deleteScheduled = true;
  return this;
}

function init_ClassHandle() {
  ClassHandle.prototype['isAliasOf'] = ClassHandle_isAliasOf;
  ClassHandle.prototype['clone'] = ClassHandle_clone;
  ClassHandle.prototype['delete'] = ClassHandle_delete;
  ClassHandle.prototype['isDeleted'] = ClassHandle_isDeleted;
  ClassHandle.prototype['deleteLater'] = ClassHandle_deleteLater;
}

function ClassHandle() {}

function ensureOverloadTable(proto, methodName, humanName) {
  if (undefined === proto[methodName].overloadTable) {
    var prevFunc = proto[methodName]; // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.

    proto[methodName] = function () {
      // TODO This check can be removed in -O3 level "unsafe" optimizations.
      if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
        throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
      }

      return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
    }; // Move the previous function into the overload table.


    proto[methodName].overloadTable = [];
    proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
  }
}
/** @param {number=} numArguments */


function exposePublicSymbol(name, value, numArguments) {
  if (Module.hasOwnProperty(name)) {
    if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
      throwBindingError("Cannot register public name '" + name + "' twice");
    } // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
    // that routes between the two.


    ensureOverloadTable(Module, name, name);

    if (Module.hasOwnProperty(numArguments)) {
      throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
    } // Add the new function into the overload table.


    Module[name].overloadTable[numArguments] = value;
  } else {
    Module[name] = value;

    if (undefined !== numArguments) {
      Module[name].numArguments = numArguments;
    }
  }
}
/** @constructor */


function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {
  this.name = name;
  this.constructor = constructor;
  this.instancePrototype = instancePrototype;
  this.rawDestructor = rawDestructor;
  this.baseClass = baseClass;
  this.getActualType = getActualType;
  this.upcast = upcast;
  this.downcast = downcast;
  this.pureVirtualFunctions = [];
}

function upcastPointer(ptr, ptrClass, desiredClass) {
  while (ptrClass !== desiredClass) {
    if (!ptrClass.upcast) {
      throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
    }

    ptr = ptrClass.upcast(ptr);
    ptrClass = ptrClass.baseClass;
  }

  return ptr;
}

function constNoSmartPtrRawPointerToWireType(destructors, handle) {
  if (handle === null) {
    if (this.isReference) {
      throwBindingError('null is not a valid ' + this.name);
    }

    return 0;
  }

  if (!handle.$$) {
    throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
  }

  if (!handle.$$.ptr) {
    throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
  }

  var handleClass = handle.$$.ptrType.registeredClass;
  var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
  return ptr;
}

function genericPointerToWireType(destructors, handle) {
  var ptr;

  if (handle === null) {
    if (this.isReference) {
      throwBindingError('null is not a valid ' + this.name);
    }

    if (this.isSmartPointer) {
      ptr = this.rawConstructor();

      if (destructors !== null) {
        destructors.push(this.rawDestructor, ptr);
      }

      return ptr;
    } else {
      return 0;
    }
  }

  if (!handle.$$) {
    throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
  }

  if (!handle.$$.ptr) {
    throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
  }

  if (!this.isConst && handle.$$.ptrType.isConst) {
    throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
  }

  var handleClass = handle.$$.ptrType.registeredClass;
  ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);

  if (this.isSmartPointer) {
    // TODO: this is not strictly true
    // We could support BY_EMVAL conversions from raw pointers to smart pointers
    // because the smart pointer can hold a reference to the handle
    if (undefined === handle.$$.smartPtr) {
      throwBindingError('Passing raw pointer to smart pointer is illegal');
    }

    switch (this.sharingPolicy) {
      case 0:
        // NONE
        // no upcasting
        if (handle.$$.smartPtrType === this) {
          ptr = handle.$$.smartPtr;
        } else {
          throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
        }

        break;

      case 1:
        // INTRUSIVE
        ptr = handle.$$.smartPtr;
        break;

      case 2:
        // BY_EMVAL
        if (handle.$$.smartPtrType === this) {
          ptr = handle.$$.smartPtr;
        } else {
          var clonedHandle = handle['clone']();
          ptr = this.rawShare(ptr, Emval.toHandle(function () {
            clonedHandle['delete']();
          }));

          if (destructors !== null) {
            destructors.push(this.rawDestructor, ptr);
          }
        }

        break;

      default:
        throwBindingError('Unsupporting sharing policy');
    }
  }

  return ptr;
}

function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
  if (handle === null) {
    if (this.isReference) {
      throwBindingError('null is not a valid ' + this.name);
    }

    return 0;
  }

  if (!handle.$$) {
    throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
  }

  if (!handle.$$.ptr) {
    throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
  }

  if (handle.$$.ptrType.isConst) {
    throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);
  }

  var handleClass = handle.$$.ptrType.registeredClass;
  var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
  return ptr;
}

function simpleReadValueFromPointer(pointer) {
  return this['fromWireType'](HEAPU32[pointer >> 2]);
}

function RegisteredPointer_getPointee(ptr) {
  if (this.rawGetPointee) {
    ptr = this.rawGetPointee(ptr);
  }

  return ptr;
}

function RegisteredPointer_destructor(ptr) {
  if (this.rawDestructor) {
    this.rawDestructor(ptr);
  }
}

function RegisteredPointer_deleteObject(handle) {
  if (handle !== null) {
    handle['delete']();
  }
}

function init_RegisteredPointer() {
  RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
  RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
  RegisteredPointer.prototype['argPackAdvance'] = 8;
  RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;
  RegisteredPointer.prototype['deleteObject'] = RegisteredPointer_deleteObject;
  RegisteredPointer.prototype['fromWireType'] = RegisteredPointer_fromWireType;
}
/** @constructor
    @param {*=} pointeeType,
    @param {*=} sharingPolicy,
    @param {*=} rawGetPointee,
    @param {*=} rawConstructor,
    @param {*=} rawShare,
    @param {*=} rawDestructor,
     */


function RegisteredPointer(name, registeredClass, isReference, isConst, // smart pointer properties
isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {
  this.name = name;
  this.registeredClass = registeredClass;
  this.isReference = isReference;
  this.isConst = isConst; // smart pointer properties

  this.isSmartPointer = isSmartPointer;
  this.pointeeType = pointeeType;
  this.sharingPolicy = sharingPolicy;
  this.rawGetPointee = rawGetPointee;
  this.rawConstructor = rawConstructor;
  this.rawShare = rawShare;
  this.rawDestructor = rawDestructor;

  if (!isSmartPointer && registeredClass.baseClass === undefined) {
    if (isConst) {
      this['toWireType'] = constNoSmartPtrRawPointerToWireType;
      this.destructorFunction = null;
    } else {
      this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;
      this.destructorFunction = null;
    }
  } else {
    this['toWireType'] = genericPointerToWireType; // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns
    // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.
    // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in
    //       craftInvokerFunction altogether.
  }
}
/** @param {number=} numArguments */


function replacePublicSymbol(name, value, numArguments) {
  if (!Module.hasOwnProperty(name)) {
    throwInternalError('Replacing nonexistant public symbol');
  } // If there's an overload table for this symbol, replace the symbol in the overload table instead.


  if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
    Module[name].overloadTable[numArguments] = value;
  } else {
    Module[name] = value;
    Module[name].argCount = numArguments;
  }
}

function dynCallLegacy(sig, ptr, args) {
  assert('dynCall_' + sig in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');

  if (args && args.length) {
    // j (64-bit integer) must be passed in as two numbers [low 32, high 32].
    assert(args.length === sig.substring(1).replace(/j/g, '--').length);
  } else {
    assert(sig.length == 1);
  }

  var f = Module["dynCall_" + sig];
  return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);
}
/** @param {Object=} args */


function dynCall(sig, ptr, args) {
  // Without WASM_BIGINT support we cannot directly call function with i64 as
  // part of thier signature, so we rely the dynCall functions generated by
  // wasm-emscripten-finalize
  if (sig.includes('j')) {
    return dynCallLegacy(sig, ptr, args);
  }

  assert(getWasmTableEntry(ptr), 'missing table entry in dynCall: ' + ptr);
  return getWasmTableEntry(ptr).apply(null, args);
}

function getDynCaller(sig, ptr) {
  assert(sig.includes('j'), 'getDynCaller should only be called with i64 sigs');
  var argCache = [];
  return function () {
    argCache.length = 0;
    Object.assign(argCache, arguments);
    return dynCall(sig, ptr, argCache);
  };
}

function embind__requireFunction(signature, rawFunction) {
  signature = readLatin1String(signature);

  function makeDynCaller() {
    if (signature.includes('j')) {
      return getDynCaller(signature, rawFunction);
    }

    return getWasmTableEntry(rawFunction);
  }

  var fp = makeDynCaller();

  if (typeof fp != "function") {
    throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
  }

  return fp;
}

var UnboundTypeError = undefined;

function getTypeName(type) {
  var ptr = ___getTypeName(type);

  var rv = readLatin1String(ptr);

  _free(ptr);

  return rv;
}

function throwUnboundTypeError(message, types) {
  var unboundTypes = [];
  var seen = {};

  function visit(type) {
    if (seen[type]) {
      return;
    }

    if (registeredTypes[type]) {
      return;
    }

    if (typeDependencies[type]) {
      typeDependencies[type].forEach(visit);
      return;
    }

    unboundTypes.push(type);
    seen[type] = true;
  }

  types.forEach(visit);
  throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
}

function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {
  name = readLatin1String(name);
  getActualType = embind__requireFunction(getActualTypeSignature, getActualType);

  if (upcast) {
    upcast = embind__requireFunction(upcastSignature, upcast);
  }

  if (downcast) {
    downcast = embind__requireFunction(downcastSignature, downcast);
  }

  rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
  var legalFunctionName = makeLegalFunctionName(name);
  exposePublicSymbol(legalFunctionName, function () {
    // this code cannot run if baseClassRawType is zero
    throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);
  });
  whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function (base) {
    base = base[0];
    var baseClass;
    var basePrototype;

    if (baseClassRawType) {
      baseClass = base.registeredClass;
      basePrototype = baseClass.instancePrototype;
    } else {
      basePrototype = ClassHandle.prototype;
    }

    var constructor = createNamedFunction(legalFunctionName, function () {
      if (Object.getPrototypeOf(this) !== instancePrototype) {
        throw new BindingError("Use 'new' to construct " + name);
      }

      if (undefined === registeredClass.constructor_body) {
        throw new BindingError(name + " has no accessible constructor");
      }

      var body = registeredClass.constructor_body[arguments.length];

      if (undefined === body) {
        throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
      }

      return body.apply(this, arguments);
    });
    var instancePrototype = Object.create(basePrototype, {
      constructor: {
        value: constructor
      }
    });
    constructor.prototype = instancePrototype;
    var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);
    var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);
    var pointerConverter = new RegisteredPointer(name + '*', registeredClass, false, false, false);
    var constPointerConverter = new RegisteredPointer(name + ' const*', registeredClass, false, true, false);
    registeredPointers[rawType] = {
      pointerType: pointerConverter,
      constPointerType: constPointerConverter
    };
    replacePublicSymbol(legalFunctionName, constructor);
    return [referenceConverter, pointerConverter, constPointerConverter];
  });
}

function heap32VectorToArray(count, firstElement) {
  var array = [];

  for (var i = 0; i < count; i++) {
    array.push(HEAP32[(firstElement >> 2) + i]);
  }

  return array;
}

function runDestructors(destructors) {
  while (destructors.length) {
    var ptr = destructors.pop();
    var del = destructors.pop();
    del(ptr);
  }
}

function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {
  assert(argCount > 0);
  var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
  invoker = embind__requireFunction(invokerSignature, invoker);
  var args = [rawConstructor];
  var destructors = [];
  whenDependentTypesAreResolved([], [rawClassType], function (classType) {
    classType = classType[0];
    var humanName = 'constructor ' + classType.name;

    if (undefined === classType.registeredClass.constructor_body) {
      classType.registeredClass.constructor_body = [];
    }

    if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
      throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount - 1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
    }

    classType.registeredClass.constructor_body[argCount - 1] = () => {
      throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);
    };

    whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {
      // Insert empty slot for context type (argTypes[1]).
      argTypes.splice(1, 0, null);
      classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);
      return [];
    });
    return [];
  });
}

function new_(constructor, argumentList) {
  if (!(constructor instanceof Function)) {
    throw new TypeError('new_ called with constructor type ' + typeof constructor + " which is not a function");
  }
  /*
   * Previously, the following line was just:
   *   function dummy() {};
   * Unfortunately, Chrome was preserving 'dummy' as the object's name, even
   * though at creation, the 'dummy' has the correct constructor name.  Thus,
   * objects created with IMVU.new would show up in the debugger as 'dummy',
   * which isn't very helpful.  Using IMVU.createNamedFunction addresses the
   * issue.  Doublely-unfortunately, there's no way to write a test for this
   * behavior.  -NRD 2013.02.22
   */


  var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function () {});
  dummy.prototype = constructor.prototype;
  var obj = new dummy();
  var r = constructor.apply(obj, argumentList);
  return r instanceof Object ? r : obj;
}

function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
  // humanName: a human-readable string name for the function to be generated.
  // argTypes: An array that contains the embind type objects for all types in the function signature.
  //    argTypes[0] is the type object for the function return value.
  //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
  //    argTypes[2...] are the actual function parameters.
  // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
  // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
  // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
  var argCount = argTypes.length;

  if (argCount < 2) {
    throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
  }

  var isClassMethodFunc = argTypes[1] !== null && classType !== null; // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
  // TODO: Remove this completely once all function invokers are being dynamically generated.

  var needsDestructorStack = false;

  for (var i = 1; i < argTypes.length; ++i) {
    // Skip return value at index 0 - it's not deleted here.
    if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
      // The type does not define a destructor function - must use dynamic stack
      needsDestructorStack = true;
      break;
    }
  }

  var returns = argTypes[0].name !== "void";
  var argsList = "";
  var argsListWired = "";

  for (var i = 0; i < argCount - 2; ++i) {
    argsList += (i !== 0 ? ", " : "") + "arg" + i;
    argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
  }

  var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";

  if (needsDestructorStack) {
    invokerFnBody += "var destructors = [];\n";
  }

  var dtorStack = needsDestructorStack ? "destructors" : "null";
  var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
  var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];

  if (isClassMethodFunc) {
    invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
  }

  for (var i = 0; i < argCount - 2; ++i) {
    invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
    args1.push("argType" + i);
    args2.push(argTypes[i + 2]);
  }

  if (isClassMethodFunc) {
    argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
  }

  invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";

  if (needsDestructorStack) {
    invokerFnBody += "runDestructors(destructors);\n";
  } else {
    for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
      // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
      var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";

      if (argTypes[i].destructorFunction !== null) {
        invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
        args1.push(paramName + "_dtor");
        args2.push(argTypes[i].destructorFunction);
      }
    }
  }

  if (returns) {
    invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
  } else {}

  invokerFnBody += "}\n";
  args1.push(invokerFnBody);
  var invokerFunction = new_(Function, args1).apply(null, args2);
  return invokerFunction;
}

function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, // [ReturnType, ThisType, Args...]
invokerSignature, rawInvoker, context, isPureVirtual) {
  var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
  methodName = readLatin1String(methodName);
  rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);
  whenDependentTypesAreResolved([], [rawClassType], function (classType) {
    classType = classType[0];
    var humanName = classType.name + '.' + methodName;

    if (methodName.startsWith("@@")) {
      methodName = Symbol[methodName.substring(2)];
    }

    if (isPureVirtual) {
      classType.registeredClass.pureVirtualFunctions.push(methodName);
    }

    function unboundTypesHandler() {
      throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);
    }

    var proto = classType.registeredClass.instancePrototype;
    var method = proto[methodName];

    if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {
      // This is the first overload to be registered, OR we are replacing a
      // function in the base class with a function in the derived class.
      unboundTypesHandler.argCount = argCount - 2;
      unboundTypesHandler.className = classType.name;
      proto[methodName] = unboundTypesHandler;
    } else {
      // There was an existing function with the same name registered. Set up
      // a function overload routing table.
      ensureOverloadTable(proto, methodName, humanName);
      proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
    }

    whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {
      var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context); // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types
      // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.

      if (undefined === proto[methodName].overloadTable) {
        // Set argCount in case an overload is registered later
        memberFunction.argCount = argCount - 2;
        proto[methodName] = memberFunction;
      } else {
        proto[methodName].overloadTable[argCount - 2] = memberFunction;
      }

      return [];
    });
    return [];
  });
}

var emval_free_list = [];
var emval_handle_array = [{}, {
  value: undefined
}, {
  value: null
}, {
  value: true
}, {
  value: false
}];

function __emval_decref(handle) {
  if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
    emval_handle_array[handle] = undefined;
    emval_free_list.push(handle);
  }
}

function count_emval_handles() {
  var count = 0;

  for (var i = 5; i < emval_handle_array.length; ++i) {
    if (emval_handle_array[i] !== undefined) {
      ++count;
    }
  }

  return count;
}

function get_first_emval() {
  for (var i = 5; i < emval_handle_array.length; ++i) {
    if (emval_handle_array[i] !== undefined) {
      return emval_handle_array[i];
    }
  }

  return null;
}

function init_emval() {
  Module['count_emval_handles'] = count_emval_handles;
  Module['get_first_emval'] = get_first_emval;
}

var Emval = {
  toValue: handle => {
    if (!handle) {
      throwBindingError('Cannot use deleted val. handle = ' + handle);
    }

    return emval_handle_array[handle].value;
  },
  toHandle: value => {
    switch (value) {
      case undefined:
        return 1;

      case null:
        return 2;

      case true:
        return 3;

      case false:
        return 4;

      default:
        {
          var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
          emval_handle_array[handle] = {
            refcount: 1,
            value: value
          };
          return handle;
        }
    }
  }
};

function __embind_register_emval(rawType, name) {
  name = readLatin1String(name);
  registerType(rawType, {
    name: name,
    'fromWireType': function (handle) {
      var rv = Emval.toValue(handle);

      __emval_decref(handle);

      return rv;
    },
    'toWireType': function (destructors, value) {
      return Emval.toHandle(value);
    },
    'argPackAdvance': 8,
    'readValueFromPointer': simpleReadValueFromPointer,
    destructorFunction: null // This type does not need a destructor
    // TODO: do we need a deleteObject here?  write a test where
    // emval is passed into JS via an interface

  });
}

function enumReadValueFromPointer(name, shift, signed) {
  switch (shift) {
    case 0:
      return function (pointer) {
        var heap = signed ? HEAP8 : HEAPU8;
        return this['fromWireType'](heap[pointer]);
      };

    case 1:
      return function (pointer) {
        var heap = signed ? HEAP16 : HEAPU16;
        return this['fromWireType'](heap[pointer >> 1]);
      };

    case 2:
      return function (pointer) {
        var heap = signed ? HEAP32 : HEAPU32;
        return this['fromWireType'](heap[pointer >> 2]);
      };

    default:
      throw new TypeError("Unknown integer type: " + name);
  }
}

function __embind_register_enum(rawType, name, size, isSigned) {
  var shift = getShiftFromSize(size);
  name = readLatin1String(name);

  function ctor() {}

  ctor.values = {};
  registerType(rawType, {
    name: name,
    constructor: ctor,
    'fromWireType': function (c) {
      return this.constructor.values[c];
    },
    'toWireType': function (destructors, c) {
      return c.value;
    },
    'argPackAdvance': 8,
    'readValueFromPointer': enumReadValueFromPointer(name, shift, isSigned),
    destructorFunction: null
  });
  exposePublicSymbol(name, ctor);
}

function requireRegisteredType(rawType, humanName) {
  var impl = registeredTypes[rawType];

  if (undefined === impl) {
    throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
  }

  return impl;
}

function __embind_register_enum_value(rawEnumType, name, enumValue) {
  var enumType = requireRegisteredType(rawEnumType, 'enum');
  name = readLatin1String(name);
  var Enum = enumType.constructor;
  var Value = Object.create(enumType.constructor.prototype, {
    value: {
      value: enumValue
    },
    constructor: {
      value: createNamedFunction(enumType.name + '_' + name, function () {})
    }
  });
  Enum.values[enumValue] = Value;
  Enum[name] = Value;
}

function _embind_repr(v) {
  if (v === null) {
    return 'null';
  }

  var t = typeof v;

  if (t === 'object' || t === 'array' || t === 'function') {
    return v.toString();
  } else {
    return '' + v;
  }
}

function floatReadValueFromPointer(name, shift) {
  switch (shift) {
    case 2:
      return function (pointer) {
        return this['fromWireType'](HEAPF32[pointer >> 2]);
      };

    case 3:
      return function (pointer) {
        return this['fromWireType'](HEAPF64[pointer >> 3]);
      };

    default:
      throw new TypeError("Unknown float type: " + name);
  }
}

function __embind_register_float(rawType, name, size) {
  var shift = getShiftFromSize(size);
  name = readLatin1String(name);
  registerType(rawType, {
    name: name,
    'fromWireType': function (value) {
      return value;
    },
    'toWireType': function (destructors, value) {
      if (typeof value != "number" && typeof value != "boolean") {
        throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
      } // The VM will perform JS to Wasm value conversion, according to the spec:
      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue


      return value;
    },
    'argPackAdvance': 8,
    'readValueFromPointer': floatReadValueFromPointer(name, shift),
    destructorFunction: null // This type does not need a destructor

  });
}

function integerReadValueFromPointer(name, shift, signed) {
  // integers are quite common, so generate very specialized functions
  switch (shift) {
    case 0:
      return signed ? function readS8FromPointer(pointer) {
        return HEAP8[pointer];
      } : function readU8FromPointer(pointer) {
        return HEAPU8[pointer];
      };

    case 1:
      return signed ? function readS16FromPointer(pointer) {
        return HEAP16[pointer >> 1];
      } : function readU16FromPointer(pointer) {
        return HEAPU16[pointer >> 1];
      };

    case 2:
      return signed ? function readS32FromPointer(pointer) {
        return HEAP32[pointer >> 2];
      } : function readU32FromPointer(pointer) {
        return HEAPU32[pointer >> 2];
      };

    default:
      throw new TypeError("Unknown integer type: " + name);
  }
}

function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
  name = readLatin1String(name);

  if (maxRange === -1) {
    // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
    maxRange = 4294967295;
  }

  var shift = getShiftFromSize(size);

  var fromWireType = value => value;

  if (minRange === 0) {
    var bitshift = 32 - 8 * size;

    fromWireType = value => value << bitshift >>> bitshift;
  }

  var isUnsignedType = name.includes('unsigned');

  var checkAssertions = (value, toTypeName) => {
    if (typeof value != "number" && typeof value != "boolean") {
      throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + toTypeName);
    }

    if (value < minRange || value > maxRange) {
      throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
    }
  };

  var toWireType;

  if (isUnsignedType) {
    toWireType = function (destructors, value) {
      checkAssertions(value, this.name);
      return value >>> 0;
    };
  } else {
    toWireType = function (destructors, value) {
      checkAssertions(value, this.name); // The VM will perform JS to Wasm value conversion, according to the spec:
      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue

      return value;
    };
  }

  registerType(primitiveType, {
    name: name,
    'fromWireType': fromWireType,
    'toWireType': toWireType,
    'argPackAdvance': 8,
    'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
    destructorFunction: null // This type does not need a destructor

  });
}

function __embind_register_memory_view(rawType, dataTypeIndex, name) {
  var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
  var TA = typeMapping[dataTypeIndex];

  function decodeMemoryView(handle) {
    handle = handle >> 2;
    var heap = HEAPU32;
    var size = heap[handle]; // in elements

    var data = heap[handle + 1]; // byte offset into emscripten heap

    return new TA(buffer, data, size);
  }

  name = readLatin1String(name);
  registerType(rawType, {
    name: name,
    'fromWireType': decodeMemoryView,
    'argPackAdvance': 8,
    'readValueFromPointer': decodeMemoryView
  }, {
    ignoreDuplicateRegistrations: true
  });
}

function __embind_register_std_string(rawType, name) {
  name = readLatin1String(name);
  var stdStringIsUTF8 //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>
  = name === "std::string";
  registerType(rawType, {
    name: name,
    'fromWireType': function (value) {
      var length = HEAPU32[value >> 2];
      var str;

      if (stdStringIsUTF8) {
        var decodeStartPtr = value + 4; // Looping here to support possible embedded '0' bytes

        for (var i = 0; i <= length; ++i) {
          var currentBytePtr = value + 4 + i;

          if (i == length || HEAPU8[currentBytePtr] == 0) {
            var maxRead = currentBytePtr - decodeStartPtr;
            var stringSegment = UTF8ToString(decodeStartPtr, maxRead);

            if (str === undefined) {
              str = stringSegment;
            } else {
              str += String.fromCharCode(0);
              str += stringSegment;
            }

            decodeStartPtr = currentBytePtr + 1;
          }
        }
      } else {
        var a = new Array(length);

        for (var i = 0; i < length; ++i) {
          a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
        }

        str = a.join('');
      }

      _free(value);

      return str;
    },
    'toWireType': function (destructors, value) {
      if (value instanceof ArrayBuffer) {
        value = new Uint8Array(value);
      }

      var getLength;
      var valueIsOfTypeString = typeof value == 'string';

      if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
        throwBindingError('Cannot pass non-string to std::string');
      }

      if (stdStringIsUTF8 && valueIsOfTypeString) {
        getLength = () => lengthBytesUTF8(value);
      } else {
        getLength = () => value.length;
      } // assumes 4-byte alignment


      var length = getLength();

      var ptr = _malloc(4 + length + 1);

      HEAPU32[ptr >> 2] = length;

      if (stdStringIsUTF8 && valueIsOfTypeString) {
        stringToUTF8(value, ptr + 4, length + 1);
      } else {
        if (valueIsOfTypeString) {
          for (var i = 0; i < length; ++i) {
            var charCode = value.charCodeAt(i);

            if (charCode > 255) {
              _free(ptr);

              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
            }

            HEAPU8[ptr + 4 + i] = charCode;
          }
        } else {
          for (var i = 0; i < length; ++i) {
            HEAPU8[ptr + 4 + i] = value[i];
          }
        }
      }

      if (destructors !== null) {
        destructors.push(_free, ptr);
      }

      return ptr;
    },
    'argPackAdvance': 8,
    'readValueFromPointer': simpleReadValueFromPointer,
    destructorFunction: function (ptr) {
      _free(ptr);
    }
  });
}

function __embind_register_std_wstring(rawType, charSize, name) {
  name = readLatin1String(name);
  var decodeString, encodeString, getHeap, lengthBytesUTF, shift;

  if (charSize === 2) {
    decodeString = UTF16ToString;
    encodeString = stringToUTF16;
    lengthBytesUTF = lengthBytesUTF16;

    getHeap = () => HEAPU16;

    shift = 1;
  } else if (charSize === 4) {
    decodeString = UTF32ToString;
    encodeString = stringToUTF32;
    lengthBytesUTF = lengthBytesUTF32;

    getHeap = () => HEAPU32;

    shift = 2;
  }

  registerType(rawType, {
    name: name,
    'fromWireType': function (value) {
      // Code mostly taken from _embind_register_std_string fromWireType
      var length = HEAPU32[value >> 2];
      var HEAP = getHeap();
      var str;
      var decodeStartPtr = value + 4; // Looping here to support possible embedded '0' bytes

      for (var i = 0; i <= length; ++i) {
        var currentBytePtr = value + 4 + i * charSize;

        if (i == length || HEAP[currentBytePtr >> shift] == 0) {
          var maxReadBytes = currentBytePtr - decodeStartPtr;
          var stringSegment = decodeString(decodeStartPtr, maxReadBytes);

          if (str === undefined) {
            str = stringSegment;
          } else {
            str += String.fromCharCode(0);
            str += stringSegment;
          }

          decodeStartPtr = currentBytePtr + charSize;
        }
      }

      _free(value);

      return str;
    },
    'toWireType': function (destructors, value) {
      if (!(typeof value == 'string')) {
        throwBindingError('Cannot pass non-string to C++ string type ' + name);
      } // assumes 4-byte alignment


      var length = lengthBytesUTF(value);

      var ptr = _malloc(4 + length + charSize);

      HEAPU32[ptr >> 2] = length >> shift;
      encodeString(value, ptr + 4, length + charSize);

      if (destructors !== null) {
        destructors.push(_free, ptr);
      }

      return ptr;
    },
    'argPackAdvance': 8,
    'readValueFromPointer': simpleReadValueFromPointer,
    destructorFunction: function (ptr) {
      _free(ptr);
    }
  });
}

function __embind_register_void(rawType, name) {
  name = readLatin1String(name);
  registerType(rawType, {
    isVoid: true,
    name: name,
    'argPackAdvance': 0,
    'fromWireType': function () {
      return undefined;
    },
    'toWireType': function (destructors, o) {
      // TODO: assert if anything else is given?
      return undefined;
    }
  });
}

function __emscripten_date_now() {
  return Date.now();
}

var nowIsMonotonic = true;
;

function __emscripten_get_now_is_monotonic() {
  return nowIsMonotonic;
}

function __emval_incref(handle) {
  if (handle > 4) {
    emval_handle_array[handle].refcount += 1;
  }
}

function __emval_take_value(type, argv) {
  type = requireRegisteredType(type, '_emval_take_value');
  var v = type['readValueFromPointer'](argv);
  return Emval.toHandle(v);
}

function __mmap_js(addr, len, prot, flags, fd, off, allocated, builtin) {
  try {
    var info = FS.getStream(fd);
    if (!info) return -8;
    var res = FS.mmap(info, addr, len, off, prot, flags);
    var ptr = res.ptr;
    HEAP32[allocated >> 2] = res.allocated;
    return ptr;
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return -e.errno;
  }
}

function __munmap_js(addr, len, prot, flags, fd, offset) {
  try {
    var stream = FS.getStream(fd);

    if (stream) {
      if (prot & 2) {
        SYSCALLS.doMsync(addr, stream, len, flags, offset);
      }

      FS.munmap(stream);
    }
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return -e.errno;
  }
}

function _abort() {
  abort('native code called abort()');
}

var readAsmConstArgsArray = [];

function readAsmConstArgs(sigPtr, buf) {
  ; // Nobody should have mutated _readAsmConstArgsArray underneath us to be something else than an array.

  assert(Array.isArray(readAsmConstArgsArray)); // The input buffer is allocated on the stack, so it must be stack-aligned.

  assert(buf % 16 == 0);
  readAsmConstArgsArray.length = 0;
  var ch; // Most arguments are i32s, so shift the buffer pointer so it is a plain
  // index into HEAP32.

  buf >>= 2;

  while (ch = HEAPU8[sigPtr++]) {
    assert(ch === 100
    /*'d'*/
    || ch === 102
    /*'f'*/
    || ch === 105
    /*'i'*/
    , 'Invalid character ' + ch + '("' + String.fromCharCode(ch) + '") in readAsmConstArgs! Use only "d", "f" or "i", and do not specify "v" for void return argument.'); // A double takes two 32-bit slots, and must also be aligned - the backend
    // will emit padding to avoid that.

    var readAsmConstArgsDouble = ch < 105;
    if (readAsmConstArgsDouble && buf & 1) buf++;
    readAsmConstArgsArray.push(readAsmConstArgsDouble ? HEAPF64[buf++ >> 1] : HEAP32[buf]);
    ++buf;
  }

  return readAsmConstArgsArray;
}

function _emscripten_asm_const_int(code, sigPtr, argbuf) {
  var args = readAsmConstArgs(sigPtr, argbuf);
  if (!ASM_CONSTS.hasOwnProperty(code)) abort('No EM_ASM constant found at address ' + code);
  return ASM_CONSTS[code].apply(null, args);
}

function _emscripten_get_heap_max() {
  return HEAPU8.length;
}

function _emscripten_get_module_name(buf, length) {
  return stringToUTF8(wasmBinaryFile, buf, length);
}

var _emscripten_get_now;

if (ENVIRONMENT_IS_NODE) {
  _emscripten_get_now = () => {
    var t = process['hrtime']();
    return t[0] * 1e3 + t[1] / 1e6;
  };
} else _emscripten_get_now = () => performance.now();

;

function _emscripten_memcpy_big(dest, src, num) {
  HEAPU8.copyWithin(dest, src, src + num);
}

var UNWIND_CACHE = {};
/** @returns {number} */

function convertFrameToPC(frame) {
  assert(wasmOffsetConverter);
  var match;

  if (match = /\bwasm-function\[\d+\]:(0x[0-9a-f]+)/.exec(frame)) {
    // some engines give the binary offset directly, so we use that as return address
    return +match[1];
  } else if (match = /\bwasm-function\[(\d+)\]:(\d+)/.exec(frame)) {
    // other engines only give function index and offset in the function,
    // so we try using the offset converter. If that doesn't work,
    // we pack index and offset into a "return address"
    return wasmOffsetConverter.convert(+match[1], +match[2]);
  } else if (match = /:(\d+):\d+(?:\)|$)/.exec(frame)) {
    // If we are in js, we can use the js line number as the "return address".
    // This should work for wasm2js.  We tag the high bit to distinguish this
    // from wasm addresses.
    return 0x80000000 | +match[1];
  } // return 0 if we can't find any


  return 0;
}

function convertPCtoSourceLocation(pc) {
  if (UNWIND_CACHE.last_get_source_pc == pc) return UNWIND_CACHE.last_source;
  var match;
  var source;

  if (!source) {
    var frame = UNWIND_CACHE[pc];
    if (!frame) return null; // Example: at callMain (a.out.js:6335:22)

    if (match = /\((.*):(\d+):(\d+)\)$/.exec(frame)) {
      source = {
        file: match[1],
        line: match[2],
        column: match[3]
      }; // Example: main@a.out.js:1337:42
    } else if (match = /@(.*):(\d+):(\d+)/.exec(frame)) {
      source = {
        file: match[1],
        line: match[2],
        column: match[3]
      };
    }
  }

  UNWIND_CACHE.last_get_source_pc = pc;
  UNWIND_CACHE.last_source = source;
  return source;
}

function _emscripten_pc_get_column(pc) {
  var result = convertPCtoSourceLocation(pc);
  return result ? result.column || 0 : 0;
}
/** @suppress{checkTypes} */


function withBuiltinMalloc(func) {
  var prev_malloc = typeof _malloc != 'undefined' ? _malloc : undefined;
  var prev_memalign = typeof _memalign != 'undefined' ? _memalign : undefined;
  var prev_free = typeof _free != 'undefined' ? _free : undefined;
  _malloc = _emscripten_builtin_malloc;
  _memalign = _emscripten_builtin_memalign;
  _free = _emscripten_builtin_free;

  try {
    return func();
  } finally {
    _malloc = prev_malloc;
    _memalign = prev_memalign;
    _free = prev_free;
  }
}

function _emscripten_pc_get_file(pc) {
  return withBuiltinMalloc(function () {
    var result = convertPCtoSourceLocation(pc);
    if (!result) return 0;
    if (_emscripten_pc_get_file.ret) _free(_emscripten_pc_get_file.ret);
    _emscripten_pc_get_file.ret = allocateUTF8(result.file);
    return _emscripten_pc_get_file.ret;
  });
}

function _emscripten_pc_get_function(pc) {
  return withBuiltinMalloc(function () {
    var name;

    if (pc & 0x80000000) {
      // If this is a JavaScript function, try looking it up in the unwind cache.
      var frame = UNWIND_CACHE[pc];
      if (!frame) return 0;
      var match;

      if (match = /^\s+at (.*) \(.*\)$/.exec(frame)) {
        name = match[1];
      } else if (match = /^(.+?)@/.exec(frame)) {
        name = match[1];
      } else {
        return 0;
      }
    } else {
      name = wasmOffsetConverter.getName(pc);
    }

    if (_emscripten_pc_get_function.ret) _free(_emscripten_pc_get_function.ret);
    _emscripten_pc_get_function.ret = allocateUTF8(name);
    return _emscripten_pc_get_function.ret;
  });
}

function _emscripten_pc_get_line(pc) {
  var result = convertPCtoSourceLocation(pc);
  return result ? result.line : 0;
}

function abortOnCannotGrowMemory(requestedSize) {
  abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s INITIAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

function _emscripten_resize_heap(requestedSize) {
  var oldSize = HEAPU8.length;
  requestedSize = requestedSize >>> 0;
  abortOnCannotGrowMemory(requestedSize);
}

function _emscripten_return_address(level) {
  var callstack = new Error().stack.split('\n');

  if (callstack[0] == 'Error') {
    callstack.shift();
  } // skip this function and the caller to get caller's return address


  return convertFrameToPC(callstack[level + 2]);
}

function saveInUnwindCache(callstack) {
  callstack.forEach(function (frame) {
    var pc = convertFrameToPC(frame);

    if (pc) {
      UNWIND_CACHE[pc] = frame;
    }
  });
}

function _emscripten_stack_unwind_buffer(addr, buffer, count) {
  var stack;

  if (UNWIND_CACHE.last_addr == addr) {
    stack = UNWIND_CACHE.last_stack;
  } else {
    stack = new Error().stack.split('\n');

    if (stack[0] == 'Error') {
      stack.shift();
    }

    saveInUnwindCache(stack);
  }

  var offset = 2;

  while (stack[offset] && convertFrameToPC(stack[offset]) != addr) {
    ++offset;
  }

  for (var i = 0; i < count && stack[i + offset]; ++i) {
    HEAP32[buffer + i * 4 >> 2] = convertFrameToPC(stack[i + offset]);
  }

  return i;
}

var ENV = {};

function getExecutableName() {
  return thisProgram || './this.program';
}

function getEnvStrings() {
  if (!getEnvStrings.strings) {
    // Default values.
    // Browser language detection #8751
    var lang = (typeof navigator == 'object' && navigator.languages && navigator.languages[0] || 'C').replace('-', '_') + '.UTF-8';
    var env = {
      'USER': 'web_user',
      'LOGNAME': 'web_user',
      'PATH': '/',
      'PWD': '/',
      'HOME': '/home/web_user',
      'LANG': lang,
      '_': getExecutableName()
    }; // Apply the user-provided values, if any.

    for (var x in ENV) {
      // x is a key in ENV; if ENV[x] is undefined, that means it was
      // explicitly set to be so. We allow user code to do that to
      // force variables with default values to remain unset.
      if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];
    }

    var strings = [];

    for (var x in env) {
      strings.push(x + '=' + env[x]);
    }

    getEnvStrings.strings = strings;
  }

  return getEnvStrings.strings;
}

function _environ_get(__environ, environ_buf) {
  var bufSize = 0;
  getEnvStrings().forEach(function (string, i) {
    var ptr = environ_buf + bufSize;
    HEAP32[__environ + i * 4 >> 2] = ptr;
    writeAsciiToMemory(string, ptr);
    bufSize += string.length + 1;
  });
  return 0;
}

function _environ_sizes_get(penviron_count, penviron_buf_size) {
  var strings = getEnvStrings();
  HEAP32[penviron_count >> 2] = strings.length;
  var bufSize = 0;
  strings.forEach(function (string) {
    bufSize += string.length + 1;
  });
  HEAP32[penviron_buf_size >> 2] = bufSize;
  return 0;
}

function _fd_close(fd) {
  try {
    var stream = SYSCALLS.getStreamFromFD(fd);
    FS.close(stream);
    return 0;
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return e.errno;
  }
}

function _fd_read(fd, iov, iovcnt, pnum) {
  try {
    var stream = SYSCALLS.getStreamFromFD(fd);
    var num = SYSCALLS.doReadv(stream, iov, iovcnt);
    HEAP32[pnum >> 2] = num;
    return 0;
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return e.errno;
  }
}

function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
  try {
    var stream = SYSCALLS.getStreamFromFD(fd);
    var HIGH_OFFSET = 0x100000000; // 2^32
    // use an unsigned operator on low and shift high by 32-bits

    var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);
    var DOUBLE_LIMIT = 0x20000000000000; // 2^53
    // we also check for equality since DOUBLE_LIMIT + 1 == DOUBLE_LIMIT

    if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {
      return -61;
    }

    FS.llseek(stream, offset, whence);
    tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];
    if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state

    return 0;
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return e.errno;
  }
}

function _fd_write(fd, iov, iovcnt, pnum) {
  try {
    ;
    var stream = SYSCALLS.getStreamFromFD(fd);
    var num = SYSCALLS.doWritev(stream, iov, iovcnt);
    HEAP32[pnum >> 2] = num;
    return 0;
  } catch (e) {
    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;
    return e.errno;
  }
}

function _getTempRet0() {
  return getTempRet0();
}

function _llvm_eh_typeid_for(type) {
  return type;
}

function _proc_exit(code) {
  procExit(code);
}

function _setTempRet0(val) {
  setTempRet0(val);
}

function __isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}

function __arraySum(array, index) {
  var sum = 0;

  for (var i = 0; i <= index; sum += array[i++]) {// no-op
  }

  return sum;
}

var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

function __addDays(date, days) {
  var newDate = new Date(date.getTime());

  while (days > 0) {
    var leap = __isLeapYear(newDate.getFullYear());

    var currentMonth = newDate.getMonth();
    var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];

    if (days > daysInCurrentMonth - newDate.getDate()) {
      // we spill over to next month
      days -= daysInCurrentMonth - newDate.getDate() + 1;
      newDate.setDate(1);

      if (currentMonth < 11) {
        newDate.setMonth(currentMonth + 1);
      } else {
        newDate.setMonth(0);
        newDate.setFullYear(newDate.getFullYear() + 1);
      }
    } else {
      // we stay in current month
      newDate.setDate(newDate.getDate() + days);
      return newDate;
    }
  }

  return newDate;
}

function _strftime(s, maxsize, format, tm) {
  // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
  // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  var tm_zone = HEAP32[tm + 40 >> 2];
  var date = {
    tm_sec: HEAP32[tm >> 2],
    tm_min: HEAP32[tm + 4 >> 2],
    tm_hour: HEAP32[tm + 8 >> 2],
    tm_mday: HEAP32[tm + 12 >> 2],
    tm_mon: HEAP32[tm + 16 >> 2],
    tm_year: HEAP32[tm + 20 >> 2],
    tm_wday: HEAP32[tm + 24 >> 2],
    tm_yday: HEAP32[tm + 28 >> 2],
    tm_isdst: HEAP32[tm + 32 >> 2],
    tm_gmtoff: HEAP32[tm + 36 >> 2],
    tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''
  };
  var pattern = UTF8ToString(format); // expand format

  var EXPANSION_RULES_1 = {
    '%c': '%a %b %d %H:%M:%S %Y',
    '%D': '%m/%d/%y',
    '%F': '%Y-%m-%d',
    '%h': '%b',
    '%r': '%I:%M:%S %p',
    '%R': '%H:%M',
    '%T': '%H:%M:%S',
    '%x': '%m/%d/%y',
    '%X': '%H:%M:%S',
    // Modified Conversion Specifiers
    '%Ec': '%c',
    '%EC': '%C',
    '%Ex': '%m/%d/%y',
    '%EX': '%H:%M:%S',
    '%Ey': '%y',
    '%EY': '%Y',
    '%Od': '%d',
    '%Oe': '%e',
    '%OH': '%H',
    '%OI': '%I',
    '%Om': '%m',
    '%OM': '%M',
    '%OS': '%S',
    '%Ou': '%u',
    '%OU': '%U',
    '%OV': '%V',
    '%Ow': '%w',
    '%OW': '%W',
    '%Oy': '%y' // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.

  };

  for (var rule in EXPANSION_RULES_1) {
    pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
  }

  var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
  var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

  function leadingSomething(value, digits, character) {
    var str = typeof value == 'number' ? value.toString() : value || '';

    while (str.length < digits) {
      str = character[0] + str;
    }

    return str;
  }

  function leadingNulls(value, digits) {
    return leadingSomething(value, digits, '0');
  }

  function compareByDay(date1, date2) {
    function sgn(value) {
      return value < 0 ? -1 : value > 0 ? 1 : 0;
    }

    var compare;

    if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
      if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
        compare = sgn(date1.getDate() - date2.getDate());
      }
    }

    return compare;
  }

  function getFirstWeekStartDate(janFourth) {
    switch (janFourth.getDay()) {
      case 0:
        // Sunday
        return new Date(janFourth.getFullYear() - 1, 11, 29);

      case 1:
        // Monday
        return janFourth;

      case 2:
        // Tuesday
        return new Date(janFourth.getFullYear(), 0, 3);

      case 3:
        // Wednesday
        return new Date(janFourth.getFullYear(), 0, 2);

      case 4:
        // Thursday
        return new Date(janFourth.getFullYear(), 0, 1);

      case 5:
        // Friday
        return new Date(janFourth.getFullYear() - 1, 11, 31);

      case 6:
        // Saturday
        return new Date(janFourth.getFullYear() - 1, 11, 30);
    }
  }

  function getWeekBasedYear(date) {
    var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);

    var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
    var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
    var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
    var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);

    if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
      // this date is after the start of the first week of this year
      if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
        return thisDate.getFullYear() + 1;
      } else {
        return thisDate.getFullYear();
      }
    } else {
      return thisDate.getFullYear() - 1;
    }
  }

  var EXPANSION_RULES_2 = {
    '%a': function (date) {
      return WEEKDAYS[date.tm_wday].substring(0, 3);
    },
    '%A': function (date) {
      return WEEKDAYS[date.tm_wday];
    },
    '%b': function (date) {
      return MONTHS[date.tm_mon].substring(0, 3);
    },
    '%B': function (date) {
      return MONTHS[date.tm_mon];
    },
    '%C': function (date) {
      var year = date.tm_year + 1900;
      return leadingNulls(year / 100 | 0, 2);
    },
    '%d': function (date) {
      return leadingNulls(date.tm_mday, 2);
    },
    '%e': function (date) {
      return leadingSomething(date.tm_mday, 2, ' ');
    },
    '%g': function (date) {
      // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.
      // In this system, weeks begin on a Monday and week 1 of the year is the week that includes
      // January 4th, which is also the week that includes the first Thursday of the year, and
      // is also the first week that contains at least four days in the year.
      // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of
      // the last week of the preceding year; thus, for Saturday 2nd January 1999,
      // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,
      // or 31st is a Monday, it and any following days are part of week 1 of the following year.
      // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
      return getWeekBasedYear(date).toString().substring(2);
    },
    '%G': function (date) {
      return getWeekBasedYear(date);
    },
    '%H': function (date) {
      return leadingNulls(date.tm_hour, 2);
    },
    '%I': function (date) {
      var twelveHour = date.tm_hour;
      if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;
      return leadingNulls(twelveHour, 2);
    },
    '%j': function (date) {
      // Day of the year (001-366)
      return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
    },
    '%m': function (date) {
      return leadingNulls(date.tm_mon + 1, 2);
    },
    '%M': function (date) {
      return leadingNulls(date.tm_min, 2);
    },
    '%n': function () {
      return '\n';
    },
    '%p': function (date) {
      if (date.tm_hour >= 0 && date.tm_hour < 12) {
        return 'AM';
      } else {
        return 'PM';
      }
    },
    '%S': function (date) {
      return leadingNulls(date.tm_sec, 2);
    },
    '%t': function () {
      return '\t';
    },
    '%u': function (date) {
      return date.tm_wday || 7;
    },
    '%U': function (date) {
      var days = date.tm_yday + 7 - date.tm_wday;
      return leadingNulls(Math.floor(days / 7), 2);
    },
    '%V': function (date) {
      // Replaced by the week number of the year (Monday as the first day of the week)
      // as a decimal number [01,53]. If the week containing 1 January has four
      // or more days in the new year, then it is considered week 1.
      // Otherwise, it is the last week of the previous year, and the next week is week 1.
      // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
      var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7); // If 1 Jan is just 1-3 days past Monday, the previous week
      // is also in this year.

      if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {
        val++;
      }

      if (!val) {
        val = 52; // If 31 December of prev year a Thursday, or Friday of a
        // leap year, then the prev year has 53 weeks.

        var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;

        if (dec31 == 4 || dec31 == 5 && __isLeapYear(date.tm_year % 400 - 1)) {
          val++;
        }
      } else if (val == 53) {
        // If 1 January is not a Thursday, and not a Wednesday of a
        // leap year, then this year has only 52 weeks.
        var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;
        if (jan1 != 4 && (jan1 != 3 || !__isLeapYear(date.tm_year))) val = 1;
      }

      return leadingNulls(val, 2);
    },
    '%w': function (date) {
      return date.tm_wday;
    },
    '%W': function (date) {
      var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;
      return leadingNulls(Math.floor(days / 7), 2);
    },
    '%y': function (date) {
      // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
      return (date.tm_year + 1900).toString().substring(2);
    },
    '%Y': function (date) {
      // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
      return date.tm_year + 1900;
    },
    '%z': function (date) {
      // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
      // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
      var off = date.tm_gmtoff;
      var ahead = off >= 0;
      off = Math.abs(off) / 60; // convert from minutes into hhmm format (which means 60 minutes = 100 units)

      off = off / 60 * 100 + off % 60;
      return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
    },
    '%Z': function (date) {
      return date.tm_zone;
    },
    '%%': function () {
      return '%';
    }
  }; // Replace %% with a pair of NULLs (which cannot occur in a C string), then
  // re-inject them after processing.

  pattern = pattern.replace(/%%/g, '\0\0');

  for (var rule in EXPANSION_RULES_2) {
    if (pattern.includes(rule)) {
      pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
    }
  }

  pattern = pattern.replace(/\0\0/g, '%');
  var bytes = intArrayFromString(pattern, false);

  if (bytes.length > maxsize) {
    return 0;
  }

  writeArrayToMemory(bytes, s);
  return bytes.length - 1;
}

function _strftime_l(s, maxsize, format, tm) {
  return _strftime(s, maxsize, format, tm); // no locale support yet
}

var FSNode =
/** @constructor */
function (parent, name, mode, rdev) {
  if (!parent) {
    parent = this; // root node sets parent to itself
  }

  this.parent = parent;
  this.mount = parent.mount;
  this.mounted = null;
  this.id = FS.nextInode++;
  this.name = name;
  this.mode = mode;
  this.node_ops = {};
  this.stream_ops = {};
  this.rdev = rdev;
};

var readMode = 292
/*292*/
| 73
/*73*/
;
var writeMode = 146
/*146*/
;
Object.defineProperties(FSNode.prototype, {
  read: {
    get:
    /** @this{FSNode} */
    function () {
      return (this.mode & readMode) === readMode;
    },
    set:
    /** @this{FSNode} */
    function (val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
    }
  },
  write: {
    get:
    /** @this{FSNode} */
    function () {
      return (this.mode & writeMode) === writeMode;
    },
    set:
    /** @this{FSNode} */
    function (val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
    }
  },
  isFolder: {
    get:
    /** @this{FSNode} */
    function () {
      return FS.isDir(this.mode);
    }
  },
  isDevice: {
    get:
    /** @this{FSNode} */
    function () {
      return FS.isChrdev(this.mode);
    }
  }
});
FS.FSNode = FSNode;
FS.staticInit();
;
ERRNO_CODES = {
  'EPERM': 63,
  'ENOENT': 44,
  'ESRCH': 71,
  'EINTR': 27,
  'EIO': 29,
  'ENXIO': 60,
  'E2BIG': 1,
  'ENOEXEC': 45,
  'EBADF': 8,
  'ECHILD': 12,
  'EAGAIN': 6,
  'EWOULDBLOCK': 6,
  'ENOMEM': 48,
  'EACCES': 2,
  'EFAULT': 21,
  'ENOTBLK': 105,
  'EBUSY': 10,
  'EEXIST': 20,
  'EXDEV': 75,
  'ENODEV': 43,
  'ENOTDIR': 54,
  'EISDIR': 31,
  'EINVAL': 28,
  'ENFILE': 41,
  'EMFILE': 33,
  'ENOTTY': 59,
  'ETXTBSY': 74,
  'EFBIG': 22,
  'ENOSPC': 51,
  'ESPIPE': 70,
  'EROFS': 69,
  'EMLINK': 34,
  'EPIPE': 64,
  'EDOM': 18,
  'ERANGE': 68,
  'ENOMSG': 49,
  'EIDRM': 24,
  'ECHRNG': 106,
  'EL2NSYNC': 156,
  'EL3HLT': 107,
  'EL3RST': 108,
  'ELNRNG': 109,
  'EUNATCH': 110,
  'ENOCSI': 111,
  'EL2HLT': 112,
  'EDEADLK': 16,
  'ENOLCK': 46,
  'EBADE': 113,
  'EBADR': 114,
  'EXFULL': 115,
  'ENOANO': 104,
  'EBADRQC': 103,
  'EBADSLT': 102,
  'EDEADLOCK': 16,
  'EBFONT': 101,
  'ENOSTR': 100,
  'ENODATA': 116,
  'ETIME': 117,
  'ENOSR': 118,
  'ENONET': 119,
  'ENOPKG': 120,
  'EREMOTE': 121,
  'ENOLINK': 47,
  'EADV': 122,
  'ESRMNT': 123,
  'ECOMM': 124,
  'EPROTO': 65,
  'EMULTIHOP': 36,
  'EDOTDOT': 125,
  'EBADMSG': 9,
  'ENOTUNIQ': 126,
  'EBADFD': 127,
  'EREMCHG': 128,
  'ELIBACC': 129,
  'ELIBBAD': 130,
  'ELIBSCN': 131,
  'ELIBMAX': 132,
  'ELIBEXEC': 133,
  'ENOSYS': 52,
  'ENOTEMPTY': 55,
  'ENAMETOOLONG': 37,
  'ELOOP': 32,
  'EOPNOTSUPP': 138,
  'EPFNOSUPPORT': 139,
  'ECONNRESET': 15,
  'ENOBUFS': 42,
  'EAFNOSUPPORT': 5,
  'EPROTOTYPE': 67,
  'ENOTSOCK': 57,
  'ENOPROTOOPT': 50,
  'ESHUTDOWN': 140,
  'ECONNREFUSED': 14,
  'EADDRINUSE': 3,
  'ECONNABORTED': 13,
  'ENETUNREACH': 40,
  'ENETDOWN': 38,
  'ETIMEDOUT': 73,
  'EHOSTDOWN': 142,
  'EHOSTUNREACH': 23,
  'EINPROGRESS': 26,
  'EALREADY': 7,
  'EDESTADDRREQ': 17,
  'EMSGSIZE': 35,
  'EPROTONOSUPPORT': 66,
  'ESOCKTNOSUPPORT': 137,
  'EADDRNOTAVAIL': 4,
  'ENETRESET': 39,
  'EISCONN': 30,
  'ENOTCONN': 53,
  'ETOOMANYREFS': 141,
  'EUSERS': 136,
  'EDQUOT': 19,
  'ESTALE': 72,
  'ENOTSUP': 138,
  'ENOMEDIUM': 148,
  'EILSEQ': 25,
  'EOVERFLOW': 61,
  'ECANCELED': 11,
  'ENOTRECOVERABLE': 56,
  'EOWNERDEAD': 62,
  'ESTRPIPE': 135
};
;
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');
;
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');
;
init_ClassHandle();
init_embind();
;
init_RegisteredPointer();
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');
;
init_emval();
;
var ASSERTIONS = true;
/** @type {function(string, boolean=, number=)} */

function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];

  for (var i = 0; i < array.length; i++) {
    var chr = array[i];

    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }

      chr &= 0xFF;
    }

    ret.push(String.fromCharCode(chr));
  }

  return ret.join('');
}

function checkIncomingModuleAPI() {
  ignoredModuleProp('fetchSettings');
}

var asmLibraryArg = {
  "__assert_fail": ___assert_fail,
  "__cxa_allocate_exception": ___cxa_allocate_exception,
  "__cxa_begin_catch": ___cxa_begin_catch,
  "__cxa_end_catch": ___cxa_end_catch,
  "__cxa_find_matching_catch_2": ___cxa_find_matching_catch_2,
  "__cxa_find_matching_catch_3": ___cxa_find_matching_catch_3,
  "__cxa_find_matching_catch_4": ___cxa_find_matching_catch_4,
  "__cxa_free_exception": ___cxa_free_exception,
  "__cxa_get_exception_ptr": ___cxa_get_exception_ptr,
  "__cxa_rethrow": ___cxa_rethrow,
  "__cxa_throw": ___cxa_throw,
  "__cxa_uncaught_exceptions": ___cxa_uncaught_exceptions,
  "__resumeException": ___resumeException,
  "__syscall_dup": ___syscall_dup,
  "__syscall_newfstatat": ___syscall_newfstatat,
  "__syscall_openat": ___syscall_openat,
  "_embind_register_bigint": __embind_register_bigint,
  "_embind_register_bool": __embind_register_bool,
  "_embind_register_class": __embind_register_class,
  "_embind_register_class_constructor": __embind_register_class_constructor,
  "_embind_register_class_function": __embind_register_class_function,
  "_embind_register_emval": __embind_register_emval,
  "_embind_register_enum": __embind_register_enum,
  "_embind_register_enum_value": __embind_register_enum_value,
  "_embind_register_float": __embind_register_float,
  "_embind_register_integer": __embind_register_integer,
  "_embind_register_memory_view": __embind_register_memory_view,
  "_embind_register_std_string": __embind_register_std_string,
  "_embind_register_std_wstring": __embind_register_std_wstring,
  "_embind_register_void": __embind_register_void,
  "_emscripten_date_now": __emscripten_date_now,
  "_emscripten_get_now_is_monotonic": __emscripten_get_now_is_monotonic,
  "_emval_decref": __emval_decref,
  "_emval_incref": __emval_incref,
  "_emval_take_value": __emval_take_value,
  "_mmap_js": __mmap_js,
  "_munmap_js": __munmap_js,
  "abort": _abort,
  "emscripten_asm_const_int": _emscripten_asm_const_int,
  "emscripten_get_heap_max": _emscripten_get_heap_max,
  "emscripten_get_module_name": _emscripten_get_module_name,
  "emscripten_get_now": _emscripten_get_now,
  "emscripten_memcpy_big": _emscripten_memcpy_big,
  "emscripten_pc_get_column": _emscripten_pc_get_column,
  "emscripten_pc_get_file": _emscripten_pc_get_file,
  "emscripten_pc_get_function": _emscripten_pc_get_function,
  "emscripten_pc_get_line": _emscripten_pc_get_line,
  "emscripten_resize_heap": _emscripten_resize_heap,
  "emscripten_return_address": _emscripten_return_address,
  "emscripten_stack_unwind_buffer": _emscripten_stack_unwind_buffer,
  "environ_get": _environ_get,
  "environ_sizes_get": _environ_sizes_get,
  "fd_close": _fd_close,
  "fd_read": _fd_read,
  "fd_seek": _fd_seek,
  "fd_write": _fd_write,
  "getTempRet0": _getTempRet0,
  "invoke_did": invoke_did,
  "invoke_dii": invoke_dii,
  "invoke_diii": invoke_diii,
  "invoke_fiii": invoke_fiii,
  "invoke_i": invoke_i,
  "invoke_ii": invoke_ii,
  "invoke_iidd": invoke_iidd,
  "invoke_iidddiiiiiii": invoke_iidddiiiiiii,
  "invoke_iiddi": invoke_iiddi,
  "invoke_iii": invoke_iii,
  "invoke_iiidd": invoke_iiidd,
  "invoke_iiii": invoke_iiii,
  "invoke_iiiii": invoke_iiiii,
  "invoke_iiiiid": invoke_iiiiid,
  "invoke_iiiiii": invoke_iiiiii,
  "invoke_iiiiiii": invoke_iiiiiii,
  "invoke_iiiiiiii": invoke_iiiiiiii,
  "invoke_iiiiiiiiiii": invoke_iiiiiiiiiii,
  "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii,
  "invoke_iiiiiiiiiiiii": invoke_iiiiiiiiiiiii,
  "invoke_jiiii": invoke_jiiii,
  "invoke_v": invoke_v,
  "invoke_vi": invoke_vi,
  "invoke_vid": invoke_vid,
  "invoke_vidd": invoke_vidd,
  "invoke_vii": invoke_vii,
  "invoke_viid": invoke_viid,
  "invoke_viii": invoke_viii,
  "invoke_viiidd": invoke_viiidd,
  "invoke_viiii": invoke_viiii,
  "invoke_viiiid": invoke_viiiid,
  "invoke_viiiii": invoke_viiiii,
  "invoke_viiiiii": invoke_viiiiii,
  "invoke_viiiiiii": invoke_viiiiiii,
  "invoke_viiiiiiiiii": invoke_viiiiiiiiii,
  "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii,
  "llvm_eh_typeid_for": _llvm_eh_typeid_for,
  "proc_exit": _proc_exit,
  "setTempRet0": _setTempRet0,
  "strftime_l": _strftime_l
};
var asm = createWasm();
/** @type {function(...*):?} */

var ___wasm_call_ctors = Module["___wasm_call_ctors"] = createExportWrapper("__wasm_call_ctors");
/** @type {function(...*):?} */


var _malloc = Module["_malloc"] = createExportWrapper("malloc");
/** @type {function(...*):?} */


var ___getTypeName = Module["___getTypeName"] = createExportWrapper("__getTypeName");
/** @type {function(...*):?} */


var ___embind_register_native_and_builtin_types = Module["___embind_register_native_and_builtin_types"] = createExportWrapper("__embind_register_native_and_builtin_types");
/** @type {function(...*):?} */


var ___errno_location = Module["___errno_location"] = createExportWrapper("__errno_location");
/** @type {function(...*):?} */


var ___stdio_exit = Module["___stdio_exit"] = createExportWrapper("__stdio_exit");
/** @type {function(...*):?} */


var _free = Module["_free"] = createExportWrapper("free");
/** @type {function(...*):?} */


var _memalign = Module["_memalign"] = createExportWrapper("memalign");
/** @type {function(...*):?} */


var _emscripten_builtin_malloc = Module["_emscripten_builtin_malloc"] = createExportWrapper("emscripten_builtin_malloc");
/** @type {function(...*):?} */


var _emscripten_builtin_free = Module["_emscripten_builtin_free"] = createExportWrapper("emscripten_builtin_free");
/** @type {function(...*):?} */


var _emscripten_builtin_memalign = Module["_emscripten_builtin_memalign"] = createExportWrapper("emscripten_builtin_memalign");
/** @type {function(...*):?} */


var _setThrew = Module["_setThrew"] = createExportWrapper("setThrew");
/** @type {function(...*):?} */


var _emscripten_stack_init = Module["_emscripten_stack_init"] = function () {
  return (_emscripten_stack_init = Module["_emscripten_stack_init"] = Module["asm"]["emscripten_stack_init"]).apply(null, arguments);
};
/** @type {function(...*):?} */


var _emscripten_stack_get_free = Module["_emscripten_stack_get_free"] = function () {
  return (_emscripten_stack_get_free = Module["_emscripten_stack_get_free"] = Module["asm"]["emscripten_stack_get_free"]).apply(null, arguments);
};
/** @type {function(...*):?} */


var _emscripten_stack_get_base = Module["_emscripten_stack_get_base"] = function () {
  return (_emscripten_stack_get_base = Module["_emscripten_stack_get_base"] = Module["asm"]["emscripten_stack_get_base"]).apply(null, arguments);
};
/** @type {function(...*):?} */


var _emscripten_stack_get_end = Module["_emscripten_stack_get_end"] = function () {
  return (_emscripten_stack_get_end = Module["_emscripten_stack_get_end"] = Module["asm"]["emscripten_stack_get_end"]).apply(null, arguments);
};
/** @type {function(...*):?} */


var stackSave = Module["stackSave"] = createExportWrapper("stackSave");
/** @type {function(...*):?} */

var stackRestore = Module["stackRestore"] = createExportWrapper("stackRestore");
/** @type {function(...*):?} */

var stackAlloc = Module["stackAlloc"] = createExportWrapper("stackAlloc");
/** @type {function(...*):?} */

var ___cxa_can_catch = Module["___cxa_can_catch"] = createExportWrapper("__cxa_can_catch");
/** @type {function(...*):?} */


var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = createExportWrapper("__cxa_is_pointer_type");
/** @type {function(...*):?} */


var dynCall_viijii = Module["dynCall_viijii"] = createExportWrapper("dynCall_viijii");
/** @type {function(...*):?} */

var dynCall_jiji = Module["dynCall_jiji"] = createExportWrapper("dynCall_jiji");
/** @type {function(...*):?} */

var dynCall_jiiii = Module["dynCall_jiiii"] = createExportWrapper("dynCall_jiiii");
/** @type {function(...*):?} */

var dynCall_iiiiij = Module["dynCall_iiiiij"] = createExportWrapper("dynCall_iiiiij");
/** @type {function(...*):?} */

var dynCall_iiiiijj = Module["dynCall_iiiiijj"] = createExportWrapper("dynCall_iiiiijj");
/** @type {function(...*):?} */

var dynCall_iiiiiijj = Module["dynCall_iiiiiijj"] = createExportWrapper("dynCall_iiiiiijj");

function invoke_iii(index, a1, a2) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_ii(index, a1) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_vii(index, a1, a2) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_vi(index, a1) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_v(index) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)();
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiii(index, a1, a2, a3) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viii(index, a1, a2, a3) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_vid(index, a1, a2) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiii(index, a1, a2, a3, a4) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiddi(index, a1, a2, a3, a4) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_vidd(index, a1, a2, a3) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiidd(index, a1, a2, a3, a4, a5) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4, a5);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iidd(index, a1, a2, a3) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiii(index, a1, a2, a3, a4) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiidd(index, a1, a2, a3, a4) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_dii(index, a1, a2) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiiii(index, a1, a2, a3, a4, a5) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4, a5);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiiid(index, a1, a2, a3, a4, a5) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4, a5);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_did(index, a1, a2) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_i(index) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)();
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iidddiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiiid(index, a1, a2, a3, a4, a5) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_fiii(index, a1, a2, a3) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_diii(index, a1, a2, a3) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
  var sp = stackSave();

  try {
    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_viid(index, a1, a2, a3) {
  var sp = stackSave();

  try {
    getWasmTableEntry(index)(a1, a2, a3);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
}

function invoke_jiiii(index, a1, a2, a3, a4) {
  var sp = stackSave();

  try {
    return dynCall_jiiii(index, a1, a2, a3, a4);
  } catch (e) {
    stackRestore(sp);
    if (e !== e + 0) throw e;

    _setThrew(1, 0);
  }
} // === Auto-generated postamble setup entry stuff ===


unexportedRuntimeFunction('intArrayFromString', false);
unexportedRuntimeFunction('intArrayToString', false);
unexportedRuntimeFunction('ccall', false);
unexportedRuntimeFunction('cwrap', false);
unexportedRuntimeFunction('setValue', false);
unexportedRuntimeFunction('getValue', false);
unexportedRuntimeFunction('allocate', false);
unexportedRuntimeFunction('UTF8ArrayToString', false);
Module["UTF8ToString"] = UTF8ToString;
unexportedRuntimeFunction('stringToUTF8Array', false);
unexportedRuntimeFunction('stringToUTF8', false);
unexportedRuntimeFunction('lengthBytesUTF8', false);
unexportedRuntimeFunction('stackTrace', false);
unexportedRuntimeFunction('addOnPreRun', false);
unexportedRuntimeFunction('addOnInit', false);
unexportedRuntimeFunction('addOnPreMain', false);
unexportedRuntimeFunction('addOnExit', false);
unexportedRuntimeFunction('addOnPostRun', false);
unexportedRuntimeFunction('writeStringToMemory', false);
unexportedRuntimeFunction('writeArrayToMemory', false);
unexportedRuntimeFunction('writeAsciiToMemory', false);
unexportedRuntimeFunction('addRunDependency', true);
unexportedRuntimeFunction('removeRunDependency', true);
unexportedRuntimeFunction('FS_createFolder', false);
unexportedRuntimeFunction('FS_createPath', true);
unexportedRuntimeFunction('FS_createDataFile', true);
unexportedRuntimeFunction('FS_createPreloadedFile', true);
unexportedRuntimeFunction('FS_createLazyFile', true);
unexportedRuntimeFunction('FS_createLink', false);
unexportedRuntimeFunction('FS_createDevice', true);
unexportedRuntimeFunction('FS_unlink', true);
unexportedRuntimeFunction('getLEB', false);
unexportedRuntimeFunction('getFunctionTables', false);
unexportedRuntimeFunction('alignFunctionTables', false);
unexportedRuntimeFunction('registerFunctions', false);
Module["addFunction"] = addFunction;
unexportedRuntimeFunction('removeFunction', false);
unexportedRuntimeFunction('getFuncWrapper', false);
unexportedRuntimeFunction('prettyPrint', false);
unexportedRuntimeFunction('dynCall', false);
unexportedRuntimeFunction('getCompilerSetting', false);
unexportedRuntimeFunction('print', false);
unexportedRuntimeFunction('printErr', false);
unexportedRuntimeFunction('getTempRet0', false);
unexportedRuntimeFunction('setTempRet0', false);
unexportedRuntimeFunction('callMain', false);
unexportedRuntimeFunction('abort', false);
unexportedRuntimeFunction('keepRuntimeAlive', false);
unexportedRuntimeFunction('WasmOffsetConverter', false);
unexportedRuntimeFunction('zeroMemory', false);
unexportedRuntimeFunction('stringToNewUTF8', false);
unexportedRuntimeFunction('abortOnCannotGrowMemory', false);
unexportedRuntimeFunction('emscripten_realloc_buffer', false);
unexportedRuntimeFunction('ENV', false);
unexportedRuntimeFunction('ERRNO_CODES', false);
unexportedRuntimeFunction('ERRNO_MESSAGES', false);
unexportedRuntimeFunction('setErrNo', false);
unexportedRuntimeFunction('inetPton4', false);
unexportedRuntimeFunction('inetNtop4', false);
unexportedRuntimeFunction('inetPton6', false);
unexportedRuntimeFunction('inetNtop6', false);
unexportedRuntimeFunction('readSockaddr', false);
unexportedRuntimeFunction('writeSockaddr', false);
unexportedRuntimeFunction('DNS', false);
unexportedRuntimeFunction('getHostByName', false);
unexportedRuntimeFunction('Protocols', false);
unexportedRuntimeFunction('Sockets', false);
unexportedRuntimeFunction('getRandomDevice', false);
unexportedRuntimeFunction('traverseStack', false);
unexportedRuntimeFunction('UNWIND_CACHE', false);
unexportedRuntimeFunction('convertPCtoSourceLocation', false);
unexportedRuntimeFunction('withBuiltinMalloc', false);
unexportedRuntimeFunction('readAsmConstArgsArray', false);
unexportedRuntimeFunction('readAsmConstArgs', false);
unexportedRuntimeFunction('mainThreadEM_ASM', false);
unexportedRuntimeFunction('jstoi_q', false);
unexportedRuntimeFunction('jstoi_s', false);
unexportedRuntimeFunction('getExecutableName', false);
unexportedRuntimeFunction('listenOnce', false);
unexportedRuntimeFunction('autoResumeAudioContext', false);
unexportedRuntimeFunction('dynCallLegacy', false);
unexportedRuntimeFunction('getDynCaller', false);
unexportedRuntimeFunction('dynCall', false);
unexportedRuntimeFunction('handleException', false);
unexportedRuntimeFunction('runtimeKeepalivePush', false);
unexportedRuntimeFunction('runtimeKeepalivePop', false);
unexportedRuntimeFunction('callUserCallback', false);
unexportedRuntimeFunction('maybeExit', false);
unexportedRuntimeFunction('safeSetTimeout', false);
unexportedRuntimeFunction('asmjsMangle', false);
unexportedRuntimeFunction('asyncLoad', false);
unexportedRuntimeFunction('alignMemory', false);
unexportedRuntimeFunction('mmapAlloc', false);
unexportedRuntimeFunction('reallyNegative', false);
unexportedRuntimeFunction('unSign', false);
unexportedRuntimeFunction('reSign', false);
unexportedRuntimeFunction('formatString', false);
unexportedRuntimeFunction('PATH', false);
unexportedRuntimeFunction('PATH_FS', false);
unexportedRuntimeFunction('SYSCALLS', false);
unexportedRuntimeFunction('getSocketFromFD', false);
unexportedRuntimeFunction('getSocketAddress', false);
unexportedRuntimeFunction('JSEvents', false);
unexportedRuntimeFunction('registerKeyEventCallback', false);
unexportedRuntimeFunction('specialHTMLTargets', false);
unexportedRuntimeFunction('maybeCStringToJsString', false);
unexportedRuntimeFunction('findEventTarget', false);
unexportedRuntimeFunction('findCanvasEventTarget', false);
unexportedRuntimeFunction('getBoundingClientRect', false);
unexportedRuntimeFunction('fillMouseEventData', false);
unexportedRuntimeFunction('registerMouseEventCallback', false);
unexportedRuntimeFunction('registerWheelEventCallback', false);
unexportedRuntimeFunction('registerUiEventCallback', false);
unexportedRuntimeFunction('registerFocusEventCallback', false);
unexportedRuntimeFunction('fillDeviceOrientationEventData', false);
unexportedRuntimeFunction('registerDeviceOrientationEventCallback', false);
unexportedRuntimeFunction('fillDeviceMotionEventData', false);
unexportedRuntimeFunction('registerDeviceMotionEventCallback', false);
unexportedRuntimeFunction('screenOrientation', false);
unexportedRuntimeFunction('fillOrientationChangeEventData', false);
unexportedRuntimeFunction('registerOrientationChangeEventCallback', false);
unexportedRuntimeFunction('fillFullscreenChangeEventData', false);
unexportedRuntimeFunction('registerFullscreenChangeEventCallback', false);
unexportedRuntimeFunction('registerRestoreOldStyle', false);
unexportedRuntimeFunction('hideEverythingExceptGivenElement', false);
unexportedRuntimeFunction('restoreHiddenElements', false);
unexportedRuntimeFunction('setLetterbox', false);
unexportedRuntimeFunction('currentFullscreenStrategy', false);
unexportedRuntimeFunction('restoreOldWindowedStyle', false);
unexportedRuntimeFunction('softFullscreenResizeWebGLRenderTarget', false);
unexportedRuntimeFunction('doRequestFullscreen', false);
unexportedRuntimeFunction('fillPointerlockChangeEventData', false);
unexportedRuntimeFunction('registerPointerlockChangeEventCallback', false);
unexportedRuntimeFunction('registerPointerlockErrorEventCallback', false);
unexportedRuntimeFunction('requestPointerLock', false);
unexportedRuntimeFunction('fillVisibilityChangeEventData', false);
unexportedRuntimeFunction('registerVisibilityChangeEventCallback', false);
unexportedRuntimeFunction('registerTouchEventCallback', false);
unexportedRuntimeFunction('fillGamepadEventData', false);
unexportedRuntimeFunction('registerGamepadEventCallback', false);
unexportedRuntimeFunction('registerBeforeUnloadEventCallback', false);
unexportedRuntimeFunction('fillBatteryEventData', false);
unexportedRuntimeFunction('battery', false);
unexportedRuntimeFunction('registerBatteryEventCallback', false);
unexportedRuntimeFunction('setCanvasElementSize', false);
unexportedRuntimeFunction('getCanvasElementSize', false);
unexportedRuntimeFunction('demangle', false);
unexportedRuntimeFunction('demangleAll', false);
unexportedRuntimeFunction('jsStackTrace', false);
unexportedRuntimeFunction('stackTrace', false);
unexportedRuntimeFunction('getEnvStrings', false);
unexportedRuntimeFunction('checkWasiClock', false);
unexportedRuntimeFunction('writeI53ToI64', false);
unexportedRuntimeFunction('writeI53ToI64Clamped', false);
unexportedRuntimeFunction('writeI53ToI64Signaling', false);
unexportedRuntimeFunction('writeI53ToU64Clamped', false);
unexportedRuntimeFunction('writeI53ToU64Signaling', false);
unexportedRuntimeFunction('readI53FromI64', false);
unexportedRuntimeFunction('readI53FromU64', false);
unexportedRuntimeFunction('convertI32PairToI53', false);
unexportedRuntimeFunction('convertU32PairToI53', false);
unexportedRuntimeFunction('setImmediateWrapped', false);
unexportedRuntimeFunction('clearImmediateWrapped', false);
unexportedRuntimeFunction('polyfillSetImmediate', false);
unexportedRuntimeFunction('uncaughtExceptionCount', false);
unexportedRuntimeFunction('exceptionLast', false);
unexportedRuntimeFunction('exceptionCaught', false);
unexportedRuntimeFunction('ExceptionInfo', false);
unexportedRuntimeFunction('CatchInfo', false);
unexportedRuntimeFunction('exception_addRef', false);
unexportedRuntimeFunction('exception_decRef', false);
unexportedRuntimeFunction('formatException', false);
unexportedRuntimeFunction('Browser', false);
unexportedRuntimeFunction('funcWrappers', false);
unexportedRuntimeFunction('getFuncWrapper', false);
unexportedRuntimeFunction('setMainLoop', false);
unexportedRuntimeFunction('wget', false);
unexportedRuntimeFunction('FS', false);
unexportedRuntimeFunction('MEMFS', false);
unexportedRuntimeFunction('TTY', false);
unexportedRuntimeFunction('PIPEFS', false);
unexportedRuntimeFunction('SOCKFS', false);
unexportedRuntimeFunction('_setNetworkCallback', false);
unexportedRuntimeFunction('tempFixedLengthArray', false);
unexportedRuntimeFunction('miniTempWebGLFloatBuffers', false);
unexportedRuntimeFunction('heapObjectForWebGLType', false);
unexportedRuntimeFunction('heapAccessShiftForWebGLHeap', false);
unexportedRuntimeFunction('GL', false);
unexportedRuntimeFunction('emscriptenWebGLGet', false);
unexportedRuntimeFunction('computeUnpackAlignedImageSize', false);
unexportedRuntimeFunction('emscriptenWebGLGetTexPixelData', false);
unexportedRuntimeFunction('emscriptenWebGLGetUniform', false);
unexportedRuntimeFunction('webglGetUniformLocation', false);
unexportedRuntimeFunction('webglPrepareUniformLocationsBeforeFirstUse', false);
unexportedRuntimeFunction('webglGetLeftBracePos', false);
unexportedRuntimeFunction('emscriptenWebGLGetVertexAttrib', false);
unexportedRuntimeFunction('writeGLArray', false);
unexportedRuntimeFunction('AL', false);
unexportedRuntimeFunction('SDL_unicode', false);
unexportedRuntimeFunction('SDL_ttfContext', false);
unexportedRuntimeFunction('SDL_audio', false);
unexportedRuntimeFunction('SDL', false);
unexportedRuntimeFunction('SDL_gfx', false);
unexportedRuntimeFunction('GLUT', false);
unexportedRuntimeFunction('EGL', false);
unexportedRuntimeFunction('GLFW_Window', false);
unexportedRuntimeFunction('GLFW', false);
unexportedRuntimeFunction('GLEW', false);
unexportedRuntimeFunction('IDBStore', false);
unexportedRuntimeFunction('runAndAbortIfError', false);
unexportedRuntimeFunction('InternalError', false);
unexportedRuntimeFunction('BindingError', false);
unexportedRuntimeFunction('UnboundTypeError', false);
unexportedRuntimeFunction('PureVirtualError', false);
unexportedRuntimeFunction('init_embind', false);
unexportedRuntimeFunction('throwInternalError', false);
unexportedRuntimeFunction('throwBindingError', false);
unexportedRuntimeFunction('throwUnboundTypeError', false);
unexportedRuntimeFunction('ensureOverloadTable', false);
unexportedRuntimeFunction('exposePublicSymbol', false);
unexportedRuntimeFunction('replacePublicSymbol', false);
unexportedRuntimeFunction('extendError', false);
unexportedRuntimeFunction('createNamedFunction', false);
unexportedRuntimeFunction('registeredInstances', false);
unexportedRuntimeFunction('getBasestPointer', false);
unexportedRuntimeFunction('registerInheritedInstance', false);
unexportedRuntimeFunction('unregisterInheritedInstance', false);
unexportedRuntimeFunction('getInheritedInstance', false);
unexportedRuntimeFunction('getInheritedInstanceCount', false);
unexportedRuntimeFunction('getLiveInheritedInstances', false);
unexportedRuntimeFunction('registeredTypes', false);
unexportedRuntimeFunction('awaitingDependencies', false);
unexportedRuntimeFunction('typeDependencies', false);
unexportedRuntimeFunction('registeredPointers', false);
unexportedRuntimeFunction('registerType', false);
unexportedRuntimeFunction('whenDependentTypesAreResolved', false);
unexportedRuntimeFunction('embind_charCodes', false);
unexportedRuntimeFunction('embind_init_charCodes', false);
unexportedRuntimeFunction('readLatin1String', false);
unexportedRuntimeFunction('getTypeName', false);
unexportedRuntimeFunction('heap32VectorToArray', false);
unexportedRuntimeFunction('requireRegisteredType', false);
unexportedRuntimeFunction('getShiftFromSize', false);
unexportedRuntimeFunction('integerReadValueFromPointer', false);
unexportedRuntimeFunction('enumReadValueFromPointer', false);
unexportedRuntimeFunction('floatReadValueFromPointer', false);
unexportedRuntimeFunction('simpleReadValueFromPointer', false);
unexportedRuntimeFunction('runDestructors', false);
unexportedRuntimeFunction('new_', false);
unexportedRuntimeFunction('craftInvokerFunction', false);
unexportedRuntimeFunction('embind__requireFunction', false);
unexportedRuntimeFunction('tupleRegistrations', false);
unexportedRuntimeFunction('structRegistrations', false);
unexportedRuntimeFunction('genericPointerToWireType', false);
unexportedRuntimeFunction('constNoSmartPtrRawPointerToWireType', false);
unexportedRuntimeFunction('nonConstNoSmartPtrRawPointerToWireType', false);
unexportedRuntimeFunction('init_RegisteredPointer', false);
unexportedRuntimeFunction('RegisteredPointer', false);
unexportedRuntimeFunction('RegisteredPointer_getPointee', false);
unexportedRuntimeFunction('RegisteredPointer_destructor', false);
unexportedRuntimeFunction('RegisteredPointer_deleteObject', false);
unexportedRuntimeFunction('RegisteredPointer_fromWireType', false);
unexportedRuntimeFunction('runDestructor', false);
unexportedRuntimeFunction('releaseClassHandle', false);
unexportedRuntimeFunction('finalizationRegistry', false);
unexportedRuntimeFunction('detachFinalizer_deps', false);
unexportedRuntimeFunction('detachFinalizer', false);
unexportedRuntimeFunction('attachFinalizer', false);
unexportedRuntimeFunction('makeClassHandle', false);
unexportedRuntimeFunction('init_ClassHandle', false);
unexportedRuntimeFunction('ClassHandle', false);
unexportedRuntimeFunction('ClassHandle_isAliasOf', false);
unexportedRuntimeFunction('throwInstanceAlreadyDeleted', false);
unexportedRuntimeFunction('ClassHandle_clone', false);
unexportedRuntimeFunction('ClassHandle_delete', false);
unexportedRuntimeFunction('deletionQueue', false);
unexportedRuntimeFunction('ClassHandle_isDeleted', false);
unexportedRuntimeFunction('ClassHandle_deleteLater', false);
unexportedRuntimeFunction('flushPendingDeletes', false);
unexportedRuntimeFunction('delayFunction', false);
unexportedRuntimeFunction('setDelayFunction', false);
unexportedRuntimeFunction('RegisteredClass', false);
unexportedRuntimeFunction('shallowCopyInternalPointer', false);
unexportedRuntimeFunction('downcastPointer', false);
unexportedRuntimeFunction('upcastPointer', false);
unexportedRuntimeFunction('validateThis', false);
unexportedRuntimeFunction('char_0', false);
unexportedRuntimeFunction('char_9', false);
unexportedRuntimeFunction('makeLegalFunctionName', false);
unexportedRuntimeFunction('emval_handle_array', false);
unexportedRuntimeFunction('emval_free_list', false);
unexportedRuntimeFunction('emval_symbols', false);
unexportedRuntimeFunction('init_emval', false);
unexportedRuntimeFunction('count_emval_handles', false);
unexportedRuntimeFunction('get_first_emval', false);
unexportedRuntimeFunction('getStringOrSymbol', false);
unexportedRuntimeFunction('Emval', false);
unexportedRuntimeFunction('emval_newers', false);
unexportedRuntimeFunction('craftEmvalAllocator', false);
unexportedRuntimeFunction('emval_get_global', false);
unexportedRuntimeFunction('emval_methodCallers', false);
unexportedRuntimeFunction('emval_registeredMethods', false);
unexportedRuntimeFunction('warnOnce', false);
unexportedRuntimeFunction('stackSave', false);
unexportedRuntimeFunction('stackRestore', false);
unexportedRuntimeFunction('stackAlloc', false);
unexportedRuntimeFunction('AsciiToString', false);
unexportedRuntimeFunction('stringToAscii', false);
unexportedRuntimeFunction('UTF16ToString', false);
unexportedRuntimeFunction('stringToUTF16', false);
unexportedRuntimeFunction('lengthBytesUTF16', false);
unexportedRuntimeFunction('UTF32ToString', false);
unexportedRuntimeFunction('stringToUTF32', false);
unexportedRuntimeFunction('lengthBytesUTF32', false);
unexportedRuntimeFunction('allocateUTF8', false);
unexportedRuntimeFunction('allocateUTF8OnStack', false);
Module["writeStackCookie"] = writeStackCookie;
Module["checkStackCookie"] = checkStackCookie;
unexportedRuntimeSymbol('ALLOC_NORMAL', false);
unexportedRuntimeSymbol('ALLOC_STACK', false);
var calledRun;
/**
 * @constructor
 * @this {ExitStatus}
 */

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
}

var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!calledRun) run();
  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
};

function stackCheckInit() {
  // This is normally called automatically during __wasm_call_ctors but need to
  // get these values before even running any of the ctors so we call it redundantly
  // here.
  // TODO(sbc): Move writeStackCookie to native to to avoid this.
  _emscripten_stack_init();

  writeStackCookie();
}
/** @type {function(Array=)} */


function run(args) {
  args = args || arguments_;

  if (runDependencies > 0) {
    return;
  }

  stackCheckInit();
  preRun(); // a preRun added a dependency, run will be called later

  if (runDependencies > 0) {
    return;
  }

  function doRun() {
    // run may have just been called through dependencies being fulfilled just in this very frame,
    // or while the async setStatus time below was happening
    if (calledRun) return;
    calledRun = true;
    Module['calledRun'] = true;
    if (ABORT) return;
    initRuntime();
    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();
    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');
    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function () {
      setTimeout(function () {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }

  checkStackCookie();
}

Module['run'] = run;

function checkUnflushedContent() {
  // Compiler settings do not allow exiting the runtime, so flushing
  // the streams is not possible. but in ASSERTIONS mode we check
  // if there was something to flush, and if so tell the user they
  // should request that the runtime be exitable.
  // Normally we would not even include flush() at all, but in ASSERTIONS
  // builds we do so just for this check, and here we see if there is any
  // content to flush, that is, we check if there would have been
  // something a non-ASSERTIONS build would have not seen.
  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0
  // mode (which has its own special function for this; otherwise, all
  // the code is inside libc)
  var oldOut = out;
  var oldErr = err;
  var has = false;

  out = err = x => {
    has = true;
  };

  try {
    // it doesn't matter if it fails
    ___stdio_exit(); // also flush in the JS FS layer


    ['stdout', 'stderr'].forEach(function (name) {
      var info = FS.analyzePath('/dev/' + name);
      if (!info) return;
      var stream = info.object;
      var rdev = stream.rdev;
      var tty = TTY.ttys[rdev];

      if (tty && tty.output && tty.output.length) {
        has = true;
      }
    });
  } catch (e) {}

  out = oldOut;
  err = oldErr;

  if (has) {
    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');
  }
}
/** @param {boolean|number=} implicit */


function exit(status, implicit) {
  EXITSTATUS = status;
  checkUnflushedContent(); // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down

  if (keepRuntimeAlive() && !implicit) {
    var msg = 'program exited (with status: ' + status + '), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)';
    err(msg);
  }

  procExit(status);
}

function procExit(code) {
  EXITSTATUS = code;

  if (!keepRuntimeAlive()) {
    if (Module['onExit']) Module['onExit'](code);
    ABORT = true;
  }

  quit_(code, new ExitStatus(code));
}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];

  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

run();

/***/ }),

/***/ 5041:
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppComponent": () => (/* binding */ AppComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _services_scheme_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/scheme.service */ 4604);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/user.service */ 3071);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 4364);
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./login/login.component */ 8458);
/* harmony import */ var _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dashboard/dashboard.component */ 7528);






function AppComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](1, "app-login");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
function AppComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](1, "app-dashboard");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
class AppComponent {
    constructor(_schemeService, _userService) {
        this._schemeService = _schemeService;
        this._userService = _userService;
    }
    ngOnInit() { }
}
AppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_scheme_service__WEBPACK_IMPORTED_MODULE_0__.SchemeService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_user_service__WEBPACK_IMPORTED_MODULE_1__.UserService)); };
AppComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: AppComponent, selectors: [["app-root"]], decls: 3, vars: 2, consts: [[2, "height", "100%", "width", "100%"], [4, "ngIf"], ["style", "height: 100%; width: 100%;", 4, "ngIf"]], template: function AppComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, AppComponent_div_1_Template, 2, 0, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](2, AppComponent_div_2_Template, 2, 0, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !ctx._userService.accessToken);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx._userService.accessToken);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _login_login_component__WEBPACK_IMPORTED_MODULE_2__.LoginComponent, _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_3__.DashboardComponent], styles: ["[_nghost-%COMP%] {\r\n  display: block;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%] {\r\n  background-color: #2C3C5B;\r\n  color: #FFFFFF;\r\n  border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n  color: #0AC5A8;\r\n  border: medium solid #0AC5A8;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0VBQ1IsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsY0FBYztFQUNkLDRCQUE0QjtBQUM5QiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIG1pbi13aWR0aDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubXktYnRuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMkMzQzVCO1xyXG4gIGNvbG9yOiAjRkZGRkZGO1xyXG4gIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gIGNvbG9yOiAjMEFDNUE4O1xyXG4gIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn0iXX0= */"] });


/***/ }),

/***/ 6747:
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppModule": () => (/* binding */ AppModule)
/* harmony export */ });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @angular/platform-browser */ 1570);
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @angular/platform-browser/animations */ 718);
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app.component */ 5041);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @angular/common/http */ 3882);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @angular/forms */ 1707);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ngx-toastr */ 4101);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/user.service */ 3071);
/* harmony import */ var _services_scheme_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/scheme.service */ 4604);
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./login/login.component */ 8458);
/* harmony import */ var _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dashboard/dashboard.component */ 7528);
/* harmony import */ var _dashboard_shapes_creator_buttons_point_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/point.component */ 2694);
/* harmony import */ var _dashboard_shapes_creator_buttons_line_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/line.component */ 9674);
/* harmony import */ var _dashboard_shapes_creator_buttons_segment_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/segment.component */ 3970);
/* harmony import */ var _dashboard_shapes_creator_buttons_circle_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/circle.component */ 2520);
/* harmony import */ var _dashboard_shapes_creator_buttons_semiline_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/semiline.component */ 7525);
/* harmony import */ var _dashboard_shapes_creator_buttons_perpendicularity_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/perpendicularity.component */ 6507);
/* harmony import */ var _dashboard_shapes_creator_buttons_parallelism_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/parallelism.component */ 3694);
/* harmony import */ var _dashboard_shapes_creator_buttons_bisector_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/bisector.component */ 699);
/* harmony import */ var _dashboard_shapes_creator_buttons_mid_perpendicular_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/mid-perpendicular.component */ 7212);
/* harmony import */ var _dashboard_shapes_creator_buttons_tangent_circle_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/tangent-circle.component */ 231);
/* harmony import */ var _dashboard_shapes_creator_buttons_process_data_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/process-data.component */ 8869);
/* harmony import */ var _dashboard_shapes_creator_buttons_clear_canvas_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/clear-canvas.component */ 9726);
/* harmony import */ var _dashboard_shapes_creator_buttons_set_length_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/set-length.component */ 4103);
/* harmony import */ var _dashboard_shapes_creator_buttons_set_angle_value_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/set-angle-value.component */ 6063);
/* harmony import */ var _dashboard_shapes_creator_buttons_equal_segments__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/equal-segments */ 3393);
/* harmony import */ var _dashboard_shapes_creator_buttons_equal_angles__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/equal-angles */ 4597);
/* harmony import */ var _dashboard_shapes_creator_buttons_escribed_circle_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/escribed-circle.component */ 2549);
/* harmony import */ var _dashboard_shapes_creator_buttons_inscribed_circle_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/inscribed-circle.component */ 8512);
/* harmony import */ var _dashboard_shapes_creator_buttons_circumscribed_circle__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/circumscribed-circle */ 9083);
/* harmony import */ var _dashboard_shapes_creator_buttons_polygon_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/polygon.component */ 949);
/* harmony import */ var _dashboard_shapes_creator_buttons_square_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/square.component */ 1916);
/* harmony import */ var _dashboard_shapes_creator_buttons_rectangle_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/rectangle.component */ 1326);
/* harmony import */ var _dashboard_shapes_creator_buttons_triangle_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/triangle.component */ 9149);
/* harmony import */ var _dashboard_shapes_creator_buttons_parallelogram_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/parallelogram.component */ 3415);
/* harmony import */ var _dashboard_shapes_creator_buttons_kite_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/kite.component */ 2799);
/* harmony import */ var _dashboard_shapes_creator_buttons_rhombus_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/rhombus.component */ 9872);
/* harmony import */ var _dashboard_shapes_creator_buttons_trapezoid_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/trapezoid.component */ 8564);
/* harmony import */ var _dashboard_shapes_creator_buttons_divide_segment_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/divide-segment.component */ 6882);
/* harmony import */ var _dashboard_shapes_creator_buttons_divide_angle_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/divide-angle.component */ 3296);
/* harmony import */ var _dashboard_shapes_creator_buttons_altitude_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/altitude.component */ 6280);
/* harmony import */ var _dashboard_shapes_creator_buttons_median_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/median.component */ 9332);
/* harmony import */ var _dashboard_shapes_creator_buttons_mid_segment_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/mid-segment.component */ 9181);
/* harmony import */ var _dashboard_dependencies_presenter_dependencies_presenter_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./dashboard/dependencies-presenter/dependencies-presenter.component */ 3950);
/* harmony import */ var _dashboard_shapes_creator_complex_shape_creator_complex_shape_creator_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./dashboard/shapes-creator/complex-shape-creator/complex-shape-creator.component */ 3069);
/* harmony import */ var _dashboard_shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./dashboard/shapes-creator/shapes-creator.component */ 5436);
/* harmony import */ var _dashboard_shapes_creator_buttons_save_scheme_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/save-scheme.component */ 1080);
/* harmony import */ var _dashboard_shapes_creator_buttons_load_scheme_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./dashboard/shapes-creator/buttons/load-scheme.component */ 5597);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @angular/common */ 4364);




















































class AppModule {
}
AppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };
AppModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_42__["ɵɵdefineNgModule"]({ type: AppModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_0__.AppComponent] });
AppModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_42__["ɵɵdefineInjector"]({ providers: [_services_user_service__WEBPACK_IMPORTED_MODULE_1__.UserService, _services_scheme_service__WEBPACK_IMPORTED_MODULE_2__.SchemeService], imports: [[
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_43__.BrowserModule, _angular_forms__WEBPACK_IMPORTED_MODULE_44__.FormsModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_45__.HttpClientModule,
            _angular_common_http__WEBPACK_IMPORTED_MODULE_45__.HttpClientXsrfModule.withOptions({
                cookieName: 'csrftoken',
                headerName: 'X-CSRFToken',
            }),
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_46__.NgbModule, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_47__.BrowserAnimationsModule, ngx_toastr__WEBPACK_IMPORTED_MODULE_48__.ToastrModule.forRoot()
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_42__["ɵɵsetNgModuleScope"](AppModule, { declarations: [_app_component__WEBPACK_IMPORTED_MODULE_0__.AppComponent,
        _login_login_component__WEBPACK_IMPORTED_MODULE_3__.LoginComponent,
        _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_4__.DashboardComponent,
        _dashboard_shapes_creator_buttons_point_component__WEBPACK_IMPORTED_MODULE_5__.PointComponent,
        _dashboard_shapes_creator_buttons_line_component__WEBPACK_IMPORTED_MODULE_6__.LineComponent,
        _dashboard_shapes_creator_buttons_segment_component__WEBPACK_IMPORTED_MODULE_7__.SegmentComponent,
        _dashboard_shapes_creator_buttons_circle_component__WEBPACK_IMPORTED_MODULE_8__.CircleComponent,
        _dashboard_shapes_creator_buttons_semiline_component__WEBPACK_IMPORTED_MODULE_9__.SemilineComponent,
        _dashboard_shapes_creator_buttons_perpendicularity_component__WEBPACK_IMPORTED_MODULE_10__.PerpendicularityComponent,
        _dashboard_shapes_creator_buttons_parallelism_component__WEBPACK_IMPORTED_MODULE_11__.ParallelismComponent,
        _dashboard_shapes_creator_buttons_bisector_component__WEBPACK_IMPORTED_MODULE_12__.BisectorComponent,
        _dashboard_shapes_creator_buttons_mid_perpendicular_component__WEBPACK_IMPORTED_MODULE_13__.MidPerpendicularComponent,
        _dashboard_shapes_creator_buttons_tangent_circle_component__WEBPACK_IMPORTED_MODULE_14__.TangentCircleComponent,
        _dashboard_shapes_creator_buttons_process_data_component__WEBPACK_IMPORTED_MODULE_15__.ProcessDataComponent,
        _dashboard_shapes_creator_buttons_clear_canvas_component__WEBPACK_IMPORTED_MODULE_16__.ClearCanvasComponent,
        _dashboard_shapes_creator_buttons_set_length_component__WEBPACK_IMPORTED_MODULE_17__.SetLengthComponent,
        _dashboard_shapes_creator_buttons_set_angle_value_component__WEBPACK_IMPORTED_MODULE_18__.SetAngleValueComponent,
        _dashboard_shapes_creator_buttons_equal_segments__WEBPACK_IMPORTED_MODULE_19__.EqualSegmentsComponent,
        _dashboard_shapes_creator_buttons_equal_angles__WEBPACK_IMPORTED_MODULE_20__.EqualAnglesComponent,
        _dashboard_shapes_creator_buttons_escribed_circle_component__WEBPACK_IMPORTED_MODULE_21__.EscribedCircleComponent,
        _dashboard_shapes_creator_buttons_inscribed_circle_component__WEBPACK_IMPORTED_MODULE_22__.InscribedCircleComponent,
        _dashboard_shapes_creator_buttons_circumscribed_circle__WEBPACK_IMPORTED_MODULE_23__.CircumscribedCircleComponent,
        _dashboard_shapes_creator_buttons_polygon_component__WEBPACK_IMPORTED_MODULE_24__.PolygonComponent,
        _dashboard_shapes_creator_buttons_square_component__WEBPACK_IMPORTED_MODULE_25__.SquareComponent,
        _dashboard_shapes_creator_buttons_rectangle_component__WEBPACK_IMPORTED_MODULE_26__.RectangleComponent,
        _dashboard_shapes_creator_buttons_triangle_component__WEBPACK_IMPORTED_MODULE_27__.TriangleComponent,
        _dashboard_shapes_creator_buttons_parallelogram_component__WEBPACK_IMPORTED_MODULE_28__.ParallelogramComponent,
        _dashboard_shapes_creator_buttons_kite_component__WEBPACK_IMPORTED_MODULE_29__.KiteComponent,
        _dashboard_shapes_creator_buttons_rhombus_component__WEBPACK_IMPORTED_MODULE_30__.RhombusComponent,
        _dashboard_shapes_creator_buttons_trapezoid_component__WEBPACK_IMPORTED_MODULE_31__.TrapezoidComponent,
        _dashboard_shapes_creator_buttons_divide_segment_component__WEBPACK_IMPORTED_MODULE_32__.DivideSegmentComponent,
        _dashboard_shapes_creator_buttons_divide_angle_component__WEBPACK_IMPORTED_MODULE_33__.DivideAngleComponent,
        _dashboard_shapes_creator_buttons_altitude_component__WEBPACK_IMPORTED_MODULE_34__.AltitudeComponent,
        _dashboard_shapes_creator_buttons_median_component__WEBPACK_IMPORTED_MODULE_35__.MedianComponent,
        _dashboard_shapes_creator_buttons_mid_segment_component__WEBPACK_IMPORTED_MODULE_36__.MidSegmentComponent,
        _dashboard_dependencies_presenter_dependencies_presenter_component__WEBPACK_IMPORTED_MODULE_37__.DependenciesPresenterComponent,
        _dashboard_shapes_creator_complex_shape_creator_complex_shape_creator_component__WEBPACK_IMPORTED_MODULE_38__.ComplexShapeCreatorComponent,
        _dashboard_shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_39__.ShapesCreatorComponent,
        _dashboard_shapes_creator_buttons_save_scheme_component__WEBPACK_IMPORTED_MODULE_40__.SaveSchemeComponent,
        _dashboard_shapes_creator_buttons_load_scheme_component__WEBPACK_IMPORTED_MODULE_41__.LoadSchemeComponent], imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_43__.BrowserModule, _angular_forms__WEBPACK_IMPORTED_MODULE_44__.FormsModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_45__.HttpClientModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_45__.HttpClientXsrfModule, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_46__.NgbModule, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_47__.BrowserAnimationsModule, ngx_toastr__WEBPACK_IMPORTED_MODULE_48__.ToastrModule] }); })();
_angular_core__WEBPACK_IMPORTED_MODULE_42__["ɵɵsetComponentScope"](_dashboard_shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_39__.ShapesCreatorComponent, [_angular_common__WEBPACK_IMPORTED_MODULE_49__.NgIf, _dashboard_shapes_creator_buttons_point_component__WEBPACK_IMPORTED_MODULE_5__.PointComponent,
    _dashboard_shapes_creator_buttons_segment_component__WEBPACK_IMPORTED_MODULE_7__.SegmentComponent,
    _dashboard_shapes_creator_buttons_line_component__WEBPACK_IMPORTED_MODULE_6__.LineComponent,
    _dashboard_shapes_creator_buttons_semiline_component__WEBPACK_IMPORTED_MODULE_9__.SemilineComponent,
    _dashboard_shapes_creator_buttons_circle_component__WEBPACK_IMPORTED_MODULE_8__.CircleComponent,
    _dashboard_shapes_creator_buttons_perpendicularity_component__WEBPACK_IMPORTED_MODULE_10__.PerpendicularityComponent,
    _dashboard_shapes_creator_buttons_parallelism_component__WEBPACK_IMPORTED_MODULE_11__.ParallelismComponent,
    _dashboard_shapes_creator_buttons_mid_perpendicular_component__WEBPACK_IMPORTED_MODULE_13__.MidPerpendicularComponent,
    _dashboard_shapes_creator_buttons_bisector_component__WEBPACK_IMPORTED_MODULE_12__.BisectorComponent,
    _dashboard_shapes_creator_buttons_set_length_component__WEBPACK_IMPORTED_MODULE_17__.SetLengthComponent,
    _dashboard_shapes_creator_buttons_set_angle_value_component__WEBPACK_IMPORTED_MODULE_18__.SetAngleValueComponent,
    _dashboard_shapes_creator_buttons_divide_segment_component__WEBPACK_IMPORTED_MODULE_32__.DivideSegmentComponent,
    _dashboard_shapes_creator_buttons_divide_angle_component__WEBPACK_IMPORTED_MODULE_33__.DivideAngleComponent,
    _dashboard_shapes_creator_buttons_tangent_circle_component__WEBPACK_IMPORTED_MODULE_14__.TangentCircleComponent,
    _dashboard_shapes_creator_buttons_equal_segments__WEBPACK_IMPORTED_MODULE_19__.EqualSegmentsComponent,
    _dashboard_shapes_creator_buttons_equal_angles__WEBPACK_IMPORTED_MODULE_20__.EqualAnglesComponent,
    _dashboard_shapes_creator_buttons_inscribed_circle_component__WEBPACK_IMPORTED_MODULE_22__.InscribedCircleComponent,
    _dashboard_shapes_creator_buttons_circumscribed_circle__WEBPACK_IMPORTED_MODULE_23__.CircumscribedCircleComponent,
    _dashboard_shapes_creator_buttons_escribed_circle_component__WEBPACK_IMPORTED_MODULE_21__.EscribedCircleComponent,
    _dashboard_shapes_creator_buttons_triangle_component__WEBPACK_IMPORTED_MODULE_27__.TriangleComponent,
    _dashboard_shapes_creator_buttons_square_component__WEBPACK_IMPORTED_MODULE_25__.SquareComponent,
    _dashboard_shapes_creator_buttons_rectangle_component__WEBPACK_IMPORTED_MODULE_26__.RectangleComponent,
    _dashboard_shapes_creator_buttons_polygon_component__WEBPACK_IMPORTED_MODULE_24__.PolygonComponent,
    _dashboard_shapes_creator_buttons_parallelogram_component__WEBPACK_IMPORTED_MODULE_28__.ParallelogramComponent,
    _dashboard_shapes_creator_buttons_kite_component__WEBPACK_IMPORTED_MODULE_29__.KiteComponent,
    _dashboard_shapes_creator_buttons_rhombus_component__WEBPACK_IMPORTED_MODULE_30__.RhombusComponent,
    _dashboard_shapes_creator_buttons_trapezoid_component__WEBPACK_IMPORTED_MODULE_31__.TrapezoidComponent,
    _dashboard_shapes_creator_buttons_median_component__WEBPACK_IMPORTED_MODULE_35__.MedianComponent,
    _dashboard_shapes_creator_buttons_altitude_component__WEBPACK_IMPORTED_MODULE_34__.AltitudeComponent,
    _dashboard_shapes_creator_buttons_mid_segment_component__WEBPACK_IMPORTED_MODULE_36__.MidSegmentComponent,
    _dashboard_shapes_creator_buttons_process_data_component__WEBPACK_IMPORTED_MODULE_15__.ProcessDataComponent,
    _dashboard_shapes_creator_buttons_save_scheme_component__WEBPACK_IMPORTED_MODULE_40__.SaveSchemeComponent,
    _dashboard_shapes_creator_buttons_load_scheme_component__WEBPACK_IMPORTED_MODULE_41__.LoadSchemeComponent,
    _dashboard_shapes_creator_buttons_clear_canvas_component__WEBPACK_IMPORTED_MODULE_16__.ClearCanvasComponent,
    _dashboard_shapes_creator_complex_shape_creator_complex_shape_creator_component__WEBPACK_IMPORTED_MODULE_38__.ComplexShapeCreatorComponent], []);


/***/ }),

/***/ 3661:
/*!*****************************************!*\
  !*** ./src/app/dashboard/appearance.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Appearance": () => (/* binding */ Appearance)
/* harmony export */ });
class Appearance {
}
/** Constant variable representing color in HEX of drawn shapes. */
Appearance.basicShapesColor = "#2C3C5B";
/** Constant variable representing shape color in HEX after mouseover on shape. */
Appearance.mouseoverShapesColor = "#0AC5A8";
/** Constant variable representing color in HEX of prompting shapes. */
Appearance.promptingShapesColor = "#ADADAD";
/** Constant variable representing color in HEX of acivated shape. Shape is activated when was chosen in {@link ComplexShapeCreator}. */
Appearance.activatedShapesColor = "#0AC5A8";
/** Constant variable representing color in HEX of guide lines. */
Appearance.guideLinesColor = "#ADADAD";
/** Constant variable representing radius of point. */
Appearance.pointRadius = 3;
/** Constant variable representing point radius after mouseover on point. */
Appearance.mouseoverPointRadius = 5;
/** Constant variable representing hit stroke width of point. */
Appearance.pointHitStrokeWidth = 6;
/** Constant variable representing radius of activated point. */
Appearance.activatedPointRadius = 4;
/** Constant variable representing stroke width of line. */
Appearance.linesStrokeWidth = 2;
/** Constant variable representing line stroke width after mouseover on line. */
Appearance.mouseoverLinesStrokeWidth = 5;
/** Constant variable representing hit stroke width of line. */
Appearance.linesHitStrokeWidth = 6;
/** Constant variable representing stroke width of activated line. */
Appearance.activatedLinesStrokeWidth = 4;
/** Constant variable representing stroke width of guide line. */
Appearance.guideLinesStrokeWidth = 2;
/** Constant variable representing type of line cap. */
Appearance.linesCap = "round";
/** Constant variable representing type of line join. */
Appearance.linesJoin = "round";
/** Constant variable representing alphabet used in points naming. */
Appearance.capitalLetters = "ABCDEFGHIJKLMNOPQRSTUWVXYZ";
/** Constant variable specifying whether the name of the point should appear next to the created points. */
Appearance.showPointLabels = true;
/** Constant variable representing text font. */
Appearance.textFont = "Cambria Math";
/** Constant variable representing text font style. */
Appearance.textFontStyle = "normal";
/** Constant variable representing text color. */
Appearance.textColor = "#000000";
/** Constant variable representing text size. */
Appearance.textSize = 15;
/** Constant variable representing offset used in finding guide lines. */
Appearance.guideLineOffset = 2;
Appearance.highlightColors = ["#006588", "#00909F", "#00B99A", "#8ADE83", "#F9F871"];


/***/ }),

/***/ 833:
/*!*******************************************************!*\
  !*** ./src/app/dashboard/canvas-manager-interface.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShapeToCreateEnum": () => (/* binding */ ShapeToCreateEnum),
/* harmony export */   "AngleTypeEnum": () => (/* binding */ AngleTypeEnum),
/* harmony export */   "PolygonTypeEnum": () => (/* binding */ PolygonTypeEnum),
/* harmony export */   "CanvasManagerInterface": () => (/* binding */ CanvasManagerInterface)
/* harmony export */ });
/* harmony import */ var _canvasManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../canvasManager */ 6854);

var ShapeToCreateEnum;

(function (ShapeToCreateEnum) {
  ShapeToCreateEnum[ShapeToCreateEnum["NONE"] = 0] = "NONE";
  ShapeToCreateEnum[ShapeToCreateEnum["POINT"] = 1] = "POINT";
  ShapeToCreateEnum[ShapeToCreateEnum["SEGMENT"] = 2] = "SEGMENT";
  ShapeToCreateEnum[ShapeToCreateEnum["LINE"] = 3] = "LINE";
  ShapeToCreateEnum[ShapeToCreateEnum["SEMILINE"] = 4] = "SEMILINE";
  ShapeToCreateEnum[ShapeToCreateEnum["CIRCLE"] = 5] = "CIRCLE";
  ShapeToCreateEnum[ShapeToCreateEnum["COMPLEX_SHAPE"] = 6] = "COMPLEX_SHAPE";
})(ShapeToCreateEnum || (ShapeToCreateEnum = {}));

function ShapeToCreateEnumToRaw(key) {
  switch (key) {
    case ShapeToCreateEnum.NONE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.ShapeToCreate.NONE;

    case ShapeToCreateEnum.POINT:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.ShapeToCreate.POINT;

    case ShapeToCreateEnum.SEGMENT:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.ShapeToCreate.SEGMENT;

    case ShapeToCreateEnum.LINE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.ShapeToCreate.LINE;

    case ShapeToCreateEnum.SEMILINE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.ShapeToCreate.SEMILINE;

    case ShapeToCreateEnum.CIRCLE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.ShapeToCreate.CIRCLE;

    case ShapeToCreateEnum.COMPLEX_SHAPE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.ShapeToCreate.COMPLEX_SHAPE;

    default:
      break;
  }
}

var AngleTypeEnum;

(function (AngleTypeEnum) {
  AngleTypeEnum[AngleTypeEnum["UNKNOWN"] = 0] = "UNKNOWN";
  AngleTypeEnum[AngleTypeEnum["CONVEX"] = 1] = "CONVEX";
  AngleTypeEnum[AngleTypeEnum["CONCAVE"] = 2] = "CONCAVE";
})(AngleTypeEnum || (AngleTypeEnum = {}));

function AngleTypeEnumToRaw(key) {
  switch (key) {
    case AngleTypeEnum.UNKNOWN:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.AngleType.UNKNOWN;

    case AngleTypeEnum.CONVEX:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.AngleType.CONVEX;

    case AngleTypeEnum.CONCAVE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.AngleType.CONCAVE;

    default:
      break;
  }
}

var PolygonTypeEnum;

(function (PolygonTypeEnum) {
  PolygonTypeEnum[PolygonTypeEnum["UNKNOWN"] = 0] = "UNKNOWN";
  PolygonTypeEnum[PolygonTypeEnum["ISOSCELES_ACUTE_TRIANGLE"] = 1] = "ISOSCELES_ACUTE_TRIANGLE";
  PolygonTypeEnum[PolygonTypeEnum["EQUILATERAL_TRIANGLE"] = 2] = "EQUILATERAL_TRIANGLE";
  PolygonTypeEnum[PolygonTypeEnum["SCALENE_RIGHT_TRIANGLE"] = 3] = "SCALENE_RIGHT_TRIANGLE";
  PolygonTypeEnum[PolygonTypeEnum["ISOSCELES_RIGHT_TRIANGLE"] = 4] = "ISOSCELES_RIGHT_TRIANGLE";
  PolygonTypeEnum[PolygonTypeEnum["OBTUSE_ISOSCELES_TRIANGLE"] = 5] = "OBTUSE_ISOSCELES_TRIANGLE";
  PolygonTypeEnum[PolygonTypeEnum["SQUARE"] = 6] = "SQUARE";
  PolygonTypeEnum[PolygonTypeEnum["RECTANGLE"] = 7] = "RECTANGLE";
  PolygonTypeEnum[PolygonTypeEnum["REGULAR_POLYGON"] = 8] = "REGULAR_POLYGON";
  PolygonTypeEnum[PolygonTypeEnum["PARALLELOGRAM"] = 9] = "PARALLELOGRAM";
  PolygonTypeEnum[PolygonTypeEnum["KITE"] = 10] = "KITE";
  PolygonTypeEnum[PolygonTypeEnum["RHOMBUS"] = 11] = "RHOMBUS";
  PolygonTypeEnum[PolygonTypeEnum["SCALENE_TRAPEZOID"] = 12] = "SCALENE_TRAPEZOID";
  PolygonTypeEnum[PolygonTypeEnum["ISOSCELES_TRAPEZOID"] = 13] = "ISOSCELES_TRAPEZOID";
  PolygonTypeEnum[PolygonTypeEnum["RIGHT_TRAPEZOID"] = 14] = "RIGHT_TRAPEZOID";
})(PolygonTypeEnum || (PolygonTypeEnum = {}));

function PolygonTypeEnumToRaw(key) {
  switch (key) {
    case PolygonTypeEnum.UNKNOWN:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.UNKNOWN;

    case PolygonTypeEnum.ISOSCELES_ACUTE_TRIANGLE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.ISOSCELES_ACUTE_TRIANGLE;

    case PolygonTypeEnum.EQUILATERAL_TRIANGLE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.EQUILATERAL_TRIANGLE;

    case PolygonTypeEnum.SCALENE_RIGHT_TRIANGLE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.SCALENE_RIGHT_TRIANGLE;

    case PolygonTypeEnum.ISOSCELES_RIGHT_TRIANGLE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.ISOSCELES_RIGHT_TRIANGLE;

    case PolygonTypeEnum.OBTUSE_ISOSCELES_TRIANGLE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.OBTUSE_ISOSCELES_TRIANGLE;

    case PolygonTypeEnum.SQUARE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.SQUARE;

    case PolygonTypeEnum.RECTANGLE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.RECTANGLE;

    case PolygonTypeEnum.REGULAR_POLYGON:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.REGULAR_POLYGON;

    case PolygonTypeEnum.PARALLELOGRAM:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.PARALLELOGRAM;

    case PolygonTypeEnum.KITE:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.KITE;

    case PolygonTypeEnum.RHOMBUS:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.RHOMBUS;

    case PolygonTypeEnum.SCALENE_TRAPEZOID:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.SCALENE_TRAPEZOID;

    case PolygonTypeEnum.ISOSCELES_TRAPEZOID:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.ISOSCELES_TRAPEZOID;

    case PolygonTypeEnum.RIGHT_TRAPEZOID:
      return _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.PolygonType.RIGHT_TRAPEZOID;

    default:
      break;
  }
}

class CanvasManagerInterface {
  static init(width, height, offset, drawPoint, drawSegment, drawCircle, deleteShape, setPromptingShapeStartPoint, lockInterface, unlockInterface, alert) {
    CanvasManagerInterface.lockUI = lockInterface;
    CanvasManagerInterface.unlockUI = unlockInterface;

    const alertParser = (type, contentAsInteger) => {
      alert(type, _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.UTF8ToString(contentAsInteger));
    };

    CanvasManagerInterface.lockUI(); //Module.onRuntimeInitialized = async function () {

    const referenceToDrawPointFunction = _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.addFunction(drawPoint, 'vidd');
    const referenceToDrawSegmentFunction = _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.addFunction(drawSegment, 'vidddd');
    const referenceToDrawCircleFunction = _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.addFunction(drawCircle, 'viddd');
    const referenceToDeleteShapeFunction = _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.addFunction(deleteShape, 'vi');
    const referenceToSetPromptingShapeStartPointFunction = _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.addFunction(setPromptingShapeStartPoint, 'vidd');
    const referenceToUnlockInterfaceFunction = _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.addFunction(unlockInterface, 'v');
    const referenceToAlertFunction = _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.addFunction(alertParser, 'vii');
    CanvasManagerInterface.manager = new _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.CanvasManager(width, height, offset, referenceToDrawPointFunction, referenceToDrawSegmentFunction, referenceToDrawCircleFunction, referenceToDeleteShapeFunction, referenceToSetPromptingShapeStartPointFunction, referenceToUnlockInterfaceFunction, referenceToAlertFunction);
    CanvasManagerInterface.unlockUI(); //}
  }

  static clearCanvas() {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.clearCanvas();
  }

  static setCurrentlyCreatedShape(shapeToCreate) {
    CanvasManagerInterface.manager.setCurrentlyCreatedShape(ShapeToCreateEnumToRaw(shapeToCreate));
  }

  static clickedOnCanvas(x, y) {
    CanvasManagerInterface.lockUI();
    return CanvasManagerInterface.manager.clickedOnCanvas(x, y);
  }

  static clickedOnPoint(id) {
    CanvasManagerInterface.lockUI();
    return CanvasManagerInterface.manager.clickedOnPoint(id);
  }

  static clickedOnSegment(id, x, y) {
    CanvasManagerInterface.lockUI();
    return CanvasManagerInterface.manager.clickedOnSegment(id, x, y);
  }

  static clickedOnCircle(id, x, y) {
    CanvasManagerInterface.lockUI();
    return CanvasManagerInterface.manager.clickedOnCircle(id, x, y);
  }

  static setPerpendicularityDependency(line1Id, line2Id) {
    CanvasManagerInterface.manager.setPerpendicularityDependency(line1Id, line2Id);
  }

  static setPerpendicularityDependencyBaseOnPoints(line1Point1Id, line1Point2Id, line2Point1Id, line2Point2Id) {
    CanvasManagerInterface.manager.setPerpendicularityDependencyBaseOnPoints(line1Point1Id, line1Point2Id, line2Point1Id, line2Point2Id);
  }

  static createPerpendicularLineToLine(lineId, pointId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createPerpendicularLineToLine(lineId, pointId);
  }

  static setParallelismDependency(line1Id, line2Id) {
    CanvasManagerInterface.manager.setParallelismDependency(line1Id, line2Id);
  }

  static setParallelismDependencyBaseOnPoints(line1Point1Id, line1Point2Id, line2Point1Id, line2Point2Id) {
    CanvasManagerInterface.manager.setParallelismDependencyBaseOnPoints(line1Point1Id, line1Point2Id, line2Point1Id, line2Point2Id);
  }

  static createParallelLineToLine(lineId, pointId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createParallelLineToLine(lineId, pointId);
  }

  static setEqualSegmentsDependencyWithEnds(segment1End1Id, segment1End2Id, segment2End1Id, segment2End2Id) {
    CanvasManagerInterface.manager.setEqualSegmentsDependencyWithEnds(segment1End1Id, segment1End2Id, segment2End1Id, segment2End2Id);
  }

  static setEqualSegmentsDependnecyWithIds(segment1Id, segment2Id) {
    CanvasManagerInterface.manager.setEqualSegmentsDependnecyWithIds(segment1Id, segment2Id);
  }

  static setEqualSegmentsDependencyWithMix(segment1Id, segment2End1Id, segment2End2Id) {
    CanvasManagerInterface.manager.setEqualSegmentsDependencyWithMix(segment1Id, segment2End1Id, segment2End2Id);
  }

  static setEqualAnglesDependency(angle1Point1Id, angle1VertexId, angle1Point2Id, angle2Point1Id, angle2VertexId, angle2Point2Id) {
    CanvasManagerInterface.manager.setEqualAnglesDependency(angle1Point1Id, angle1VertexId, angle1Point2Id, angle2Point1Id, angle2VertexId, angle2Point2Id);
  }

  static setLengthValue(end1Id, end2Id, value) {
    CanvasManagerInterface.manager.setLengthValue(end1Id, end2Id, value);
  }

  static setSegmentLengthValue(segmentId, value) {
    CanvasManagerInterface.manager.setSegmentLengthValue(segmentId, value);
  }

  static setAngleValue(end1Id, vertexId, end2Id, angleType, value) {
    CanvasManagerInterface.manager.setAngleValue(end1Id, vertexId, end2Id, AngleTypeEnumToRaw(angleType), value);
  }

  static divideSegmentWithId(segmentId, n) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.divideSegmentWithId(segmentId, n);
  }

  static divideSegmentWithEnds(end1Id, end2Id, n) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.divideSegmentWithEnds(end1Id, end2Id, n);
  }

  static divideAngle(end1Id, vertexId, end2Id, ofConvexAngle, n) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.divideAngle(end1Id, vertexId, end2Id, ofConvexAngle, n);
  }

  static createSegmentMidPerpendicularWithId(segmentId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createSegmentMidPerpendicularWithId(segmentId);
  }

  static createSegmentMidPerpendicularWithEnds(end1Id, end2Id) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createSegmentMidPerpendicularWithEnds(end1Id, end2Id);
  }

  static createTangentLine(circleId, pointId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createTangentLine(pointId, circleId);
  }

  static createTangentCircleToLine(pointId, segmentId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createTangentCircleToLine(pointId, segmentId);
  }

  static createTangentCircleToCircle(circleId, newCircleCenterId, externally) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createTangentCircleToCircle(circleId, newCircleCenterId, externally);
  }

  static createAltitudeWithBaseId(baseId, vertexId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createAltitudeWithBaseId(baseId, vertexId);
  }

  static createAltitudeWithBaseEnds(end1Id, end2Id, vertexId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createAltitudeWithBaseEnds(end1Id, end2Id, vertexId);
  }

  static createMedianWithBaseId(baseId, vertexId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createMedianWithBaseId(baseId, vertexId);
  }

  static createMedianwithBaseEnds(end1Id, end2Id, vertexId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createMedianwithBaseEnds(end1Id, end2Id, vertexId);
  }

  static createMidSegmentWithArmIds(arm1Id, arm2Id) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createMidSegmentWithArmIds(arm1Id, arm2Id);
  }

  static createMidSegmentWithArmEnds(arm1End1Id, arm1End2Id, arm2End1Id, arm2End2Id) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createMidSegmentWithArmEnds(arm1End1Id, arm1End2Id, arm2End1Id, arm2End2Id);
  }

  static createMidSegmentWithMix(arm1Id, arm2End1Id, arm2End2Id) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createMidSegmentWithMix(arm1Id, arm2End1Id, arm2End2Id);
  }

  static createBisectorLine(point1Id, vertexId, point2Id, ofConvexAngle) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createBisectorLine(point1Id, vertexId, point2Id, ofConvexAngle);
  }

  static createInscribedCircle(ids) {
    CanvasManagerInterface.lockUI();
    var vertexVector = new _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.vectorOfUnsignedInts();
    ids.forEach(id => {
      vertexVector.push_back(id);
    });
    CanvasManagerInterface.manager.createInscribedCircle(vertexVector);
  }

  static createCircumscribedCircle(ids) {
    CanvasManagerInterface.lockUI();
    var vertexVector = new _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.vectorOfUnsignedInts();
    ids.forEach(id => {
      vertexVector.push_back(id);
    });
    CanvasManagerInterface.manager.createCircumscribedCircle(vertexVector);
  }

  static createEscribedCircleWithSideId(sideId, vertexId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createEscribedCircleWithSideId(sideId, vertexId);
  }

  static createEscribedCircleWithSideEnds(end1Id, end2Id, vertexId) {
    CanvasManagerInterface.lockUI();
    CanvasManagerInterface.manager.createEscribedCircleWithSideEnds(end1Id, end2Id, vertexId);
  }

  static setPolygonType(polygon, type) {
    var vertexVector = new _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.vectorOfUnsignedInts();
    polygon.forEach(id => {
      vertexVector.push_back(id);
    });
    CanvasManagerInterface.manager.setPolygonType(vertexVector, PolygonTypeEnumToRaw(type));
  }

  static setPerpendicularLines(line1, line2) {
    CanvasManagerInterface.manager.setPerpendicularLines(line1, line2);
  }

  static setParallelLines(line1, line2) {
    CanvasManagerInterface.manager.setParallelLines(line1, line2);
  }

  static setEscribedCircle(circleId, polygon) {
    var vertexVector = new _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.vectorOfUnsignedInts();
    polygon.forEach(id => {
      vertexVector.push_back(id);
    });
    CanvasManagerInterface.manager.setEscribedCircle(circleId, vertexVector);
  }

  static setInscribedCircle(circleId, polygon) {
    var vertexVector = new _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.vectorOfUnsignedInts();
    polygon.forEach(id => {
      vertexVector.push_back(id);
    });
    CanvasManagerInterface.manager.setInscribedCircle(circleId, vertexVector);
  }

  static setCircumscribedCircle(circleId, polygon) {
    var vertexVector = new _canvasManager__WEBPACK_IMPORTED_MODULE_0__.Module.vectorOfUnsignedInts();
    polygon.forEach(id => {
      vertexVector.push_back(id);
    });
    CanvasManagerInterface.manager.setCircumscribedCircle(circleId, vertexVector);
  }

  static setTangentLineToCircle(lineId, circleId) {
    CanvasManagerInterface.manager.setTangentLineToCircle(lineId, circleId);
  }

  static setTangentCircles(circle1Id, circle2Id) {
    CanvasManagerInterface.manager.setTangentCircles(circle1Id, circle2Id);
  }

  static setAltitude(end1Id, end2Id, lineId) {
    CanvasManagerInterface.manager.setAltitude(end1Id, end2Id, lineId);
  }

  static setMedian(s1End1Id, s1End2Id, s2End1Id, s2End2Id) {
    CanvasManagerInterface.manager.setMedian(s1End1Id, s1End2Id, s2End1Id, s2End2Id);
  }

  static setMidSegment(a1End1Id, a1End2Id, a2End1Id, a2End2Id, sEnd1, sEnd2) {
    CanvasManagerInterface.manager.setMidSegment(a1End1Id, a1End2Id, a2End1Id, a2End2Id, sEnd1, sEnd2);
  }

  static getJsonData() {
    const JsonAsString = CanvasManagerInterface.manager.getJsonData();
    return JSON.parse(JsonAsString);
  }

}

/***/ }),

/***/ 7909:
/*!*************************************!*\
  !*** ./src/app/dashboard/canvas.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComplexShapeEnum": () => (/* binding */ ComplexShapeEnum),
/* harmony export */   "Canvas": () => (/* binding */ Canvas)
/* harmony export */ });
/* harmony import */ var C_Users_karol_Projects_MeetKunde_web_application_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 9369);
/* harmony import */ var konva__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! konva */ 6349);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 6491);
/* harmony import */ var _appearance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appearance */ 3661);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./canvas-manager-interface */ 833);
/* harmony import */ var _dependencies_presenter_dependencies_presenter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dependencies-presenter/dependencies-presenter */ 347);
/* harmony import */ var _shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shapes-creator/complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./shapes-creator/shapes-creator.component */ 5436);


/**
 * Module contains a static class Canvas for representating Konva.Stage - HTML Canvas - with some extentions,
 * managing functions, events and an enum ShapesEnum for selecting type of shapes to create.
 *
 * @module Canvas
 */







/**
 * Enum holds special types of complex shapes.
 */

var ComplexShapeEnum;

(function (ComplexShapeEnum) {
  ComplexShapeEnum[ComplexShapeEnum["NONE"] = 0] = "NONE";
  ComplexShapeEnum[ComplexShapeEnum["PERPENDICULAR_LINE"] = 1] = "PERPENDICULAR_LINE";
  ComplexShapeEnum[ComplexShapeEnum["PARALLEL_LINE"] = 2] = "PARALLEL_LINE";
})(ComplexShapeEnum || (ComplexShapeEnum = {}));
/**
 * Static class for representation of Konva.Stage - HTML5 Canvas. It extends Konva library objects by functions to easy draw basic geometry shapes,
 * to resolve clicks on created shapes, to prompt during creating new shapes and to make created shapes interactive.
 * Class contains many constant variables with shapes properties which are used in creating all shapes.
 */


class Canvas {
  /** Empty function: static class has no constructor. */
  constructor() {}
  /**
   * Canvas initialization to drawing. This has to be called before using this class.
   * @param width width of the creating canvas
   * @param height height of the creating canvas
   * @param container ID of the container in DOM where canva is to appear
   */


  static init(screenWidth, screenHeight, container, toastr) {
    Canvas.screenWidth = screenWidth;
    Canvas.screenHeight = screenHeight;
    Canvas.width = screenWidth * Canvas.DIMENSION_MULTIPIER;
    Canvas.height = screenHeight * Canvas.DIMENSION_MULTIPIER;
    Canvas.containerID = container;
    Canvas.toastrService = toastr;
    Canvas.currentlyCreatedShape = _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.NONE;
    Canvas.currentlyComplexShape = ComplexShapeEnum.NONE;
    Canvas.pointIdCounter = 0;
    Canvas.shapeIdCounter = 1;
    Canvas.drawPromptingShapes = true;
    Canvas.promptingShapeStartPoint = null;
    Canvas.baseToPromptingLine = null;
    Canvas.activatedShapes = [];
    Canvas.pointNames = [];
    Canvas.guideLineX = [];
    Canvas.guideLineY = [];
    Canvas.currentGuideLineX = null;
    Canvas.currentGuideLineY = null;
    Canvas.drawGuideLines = true;
    Canvas.blockInterface$.next(true);
    Canvas.lastCreatedPointId = 0;
    Canvas.lastCreatedSegmentId = 0;
    Canvas.lastCreatedCircleId = 0;
    _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_6__.ShapesCreatorComponent.displayShapesCreator$.next(true);
    _shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__.ComplexShapeCreator.displayComplexShapeCreator$.next(false);
    _dependencies_presenter_dependencies_presenter__WEBPACK_IMPORTED_MODULE_4__.DependenciesPresenter.displayDependenciesPresenter$.next(false);
    Canvas.currentScale = 1.0;
    Canvas.maximalScale = 2;
    Canvas.minimalScale = 1 / Canvas.DIMENSION_MULTIPIER; // stage creating

    Canvas.stage = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Stage({
      container: container,
      x: -((Canvas.DIMENSION_MULTIPIER - 1) / 2) * screenWidth,
      y: -((Canvas.DIMENSION_MULTIPIER - 1) / 2) * screenHeight,
      width: screenWidth,
      height: screenWidth,
      draggable: true,
      centeredScaling: true,
      scale: {
        x: Canvas.currentScale,
        y: Canvas.currentScale
      }
    }); // layers creating

    Canvas.shapesLayer = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Layer();
    Canvas.batchLayer = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Layer();
    Canvas.guideLayer = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Layer();
    Canvas.highlightLayer = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Layer(); // adding layers to stage

    Canvas.stage.add(Canvas.shapesLayer);
    Canvas.stage.add(Canvas.batchLayer);
    Canvas.stage.add(Canvas.guideLayer);
    Canvas.stage.add(Canvas.highlightLayer); // setting layers indexes - layer positions during drawing

    Canvas.highlightLayer.zIndex(0);
    Canvas.guideLayer.zIndex(0);
    Canvas.batchLayer.zIndex(1);
    Canvas.shapesLayer.zIndex(2); // start drawing layers

    Canvas.shapesLayer.draw();
    Canvas.batchLayer.batchDraw();
    Canvas.guideLayer.draw();
    Canvas.highlightLayer.draw(); // bind function for dragmoves for canvas

    Canvas.stage.on('dragmove', () => {
      let boundX = Canvas.screenWidth - Canvas.width * Canvas.currentScale;
      let boundY = Canvas.screenHeight - Canvas.height * Canvas.currentScale;

      if (Canvas.stage.x() > 0) {
        Canvas.stage.x(0);
      } else if (Canvas.stage.x() < boundX) {
        Canvas.stage.x(boundX);
      }

      if (Canvas.stage.y() > 0) {
        Canvas.stage.y(0);
      } else if (Canvas.stage.y() < boundY) {
        Canvas.stage.y(boundY);
      }
    }); // bind function for clicks on canvas

    Canvas.stage.on("click", () => {
      if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.NONE) {
        return;
      }

      let clickPosition = Canvas.shapesLayer.getRelativePointerPosition();
      let clickX;
      let clickY;

      if (Canvas.currentGuideLineX) {
        clickX = Canvas.currentGuideLineX;
      } else {
        clickX = clickPosition.x;
      }

      if (Canvas.currentGuideLineY) {
        clickY = Canvas.currentGuideLineY;
      } else {
        clickY = clickPosition.y;
      }

      if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.COMPLEX_SHAPE) {
        _shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__.ComplexShapeCreator.clickedOnCanvas(clickX, clickY, Canvas.shapeIdCounter);
      } else {
        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.CanvasManagerInterface.clickedOnCanvas(clickX, clickY);
      }
    }); // bind function for mouse move on canvas

    Canvas.stage.on("mousemove", () => {
      let click = Canvas.batchLayer.getRelativePointerPosition();
      Canvas.findGuideLines(click.x, click.y);

      if (Canvas.drawPromptingShapes) {
        if (Canvas.promptingShapeStartPoint !== null || Canvas.currentlyComplexShape == ComplexShapeEnum.PERPENDICULAR_LINE || Canvas.currentlyComplexShape == ComplexShapeEnum.PARALLEL_LINE) {
          Canvas.drawPromptingShape(click.x, click.y);
        }
      }
    });
    Canvas.stage.on('wheel', e => {
      e.evt.preventDefault();
      let direction = e.evt.deltaY > 0 ? 1 : -1;

      if (e.evt.ctrlKey) {
        direction = -direction;
      }

      let oldScale = Canvas.stage.scaleX();
      let newScale = Canvas.currentScale + Canvas.SCALING_INCREASE * direction;

      if (newScale < Canvas.minimalScale) {
        newScale = Canvas.minimalScale;
      } else if (newScale > Canvas.maximalScale) {
        newScale = Canvas.maximalScale;
      }

      Canvas.stage.scale({
        x: newScale,
        y: newScale
      });
      Canvas.currentScale = newScale;
      let newPos = {
        x: Canvas.stage.x() + (oldScale - newScale) * Canvas.width * 0.5,
        y: Canvas.stage.y() + (oldScale - newScale) * Canvas.height * 0.5
      };
      let boundX = Canvas.screenWidth - Canvas.width * newScale;
      let boundY = Canvas.screenHeight - Canvas.height * newScale;

      if (newPos.x > 0) {
        newPos.x = 0;
      } else if (newPos.x < boundX) {
        newPos.x = boundX;
      }

      if (newPos.y > 0) {
        newPos.y = 0;
      } else if (newPos.y < boundY) {
        newPos.y = boundY;
      }

      Canvas.stage.position(newPos);
    }); // clearing guiding lines when mouse leave the canvas

    let canvaObject = document.getElementById(Canvas.containerID);
    canvaObject.addEventListener("mouseleave", function (event) {
      Canvas.guideLayer.destroyChildren();

      if (!_shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__.ComplexShapeCreator.displayPolygonMovement$.value) {
        Canvas.batchLayer.destroyChildren();
      }
    }, false); // initializing new canvas

    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.CanvasManagerInterface.init(screenWidth * Canvas.DIMENSION_MULTIPIER, screenHeight * Canvas.DIMENSION_MULTIPIER, 7, this.drawPoint, this.drawLine, this.drawCircle, this.deleteShape, this.setPromptingShapeStartPoint, this.lockUI, this.unlockUI, this.resolveAlert);
    let greenLine = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Line({
      points: [0, 0, Canvas.DIMENSION_MULTIPIER * screenWidth, 0, Canvas.DIMENSION_MULTIPIER * screenWidth, Canvas.DIMENSION_MULTIPIER * screenHeight, 0, Canvas.DIMENSION_MULTIPIER * screenHeight],
      stroke: '#EBEBEB',
      strokeWidth: 2,
      lineJoin: 'round',
      closed: true
    });
    Canvas.shapesLayer.add(greenLine);
    greenLine.zIndex(Canvas.POINT_Z_INDEX);
  }

  static lockUI() {
    Canvas.blockInterface$.next(true);
    Canvas.lockTime = new Date().getTime(); //document.getElementById('block-ui')!.style.display = 'block';

    console.log("LOCKED...");
  }

  static unlockUI() {
    Canvas.blockInterface$.next(false);
    console.log("UNLOCKED..." + (new Date().getTime() - Canvas.lockTime));
  }

  static getLastCreatedPointId() {
    return Canvas.lastCreatedPointId;
  }

  static getLastCreatedSegmentId() {
    return Canvas.lastCreatedSegmentId;
  }

  static getLastCreatedCircleId() {
    return Canvas.lastCreatedCircleId;
  }

  static waitForCalculationsProcessed() {
    (function loopSearch() {
      if (Canvas.blockInterface$.value) {
        setTimeout(function () {
          loopSearch();
        }, 10);
      } else {
        return;
      }
    })();
  }

  static resolveAlert(alertType, content) {
    return (0,C_Users_karol_Projects_MeetKunde_web_application_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      switch (alertType) {
        case 1:
          Canvas.toastrService.success(content, "", {
            timeOut: 3000,
            progressBar: false
          });
          break;

        case 2:
          Canvas.toastrService.error(content, "", {
            timeOut: 3000,
            progressBar: false
          });
          break;

        case 3:
          Canvas.toastrService.info(content, "", {
            timeOut: 3000,
            progressBar: false
          });
          break;

        case 4:
          Canvas.reinit();
          alert(content);
          break;

        default:
          break;
      }
    })();
  }
  /**
   * Reinitialization of canva. All data are lost.
   */


  static reinit() {
    Canvas.init(Canvas.screenWidth, Canvas.screenHeight, Canvas.containerID, Canvas.toastrService);
    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.CanvasManagerInterface.clearCanvas();
  }
  /**
   * Getting width of canvas.
   * @returns width of canvas
   */


  static getWidth() {
    return Canvas.width;
  }

  static getScreenWidth() {
    return Canvas.screenWidth;
  }
  /**
   * Getting height of canvas.
   * @returns height of canvas
   */


  static getHeight() {
    return Canvas.height;
  }

  static getScreenHeight() {
    return Canvas.screenHeight;
  }
  /**
   * Setting type of currently created shape.
   * @param shape - shape type to set
   */


  static setCurrentyCreatedShape(shape) {
    Canvas.currentlyCreatedShape = shape;
    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.CanvasManagerInterface.setCurrentlyCreatedShape(shape);
  }
  /**
   * Getting type of currently created shape.
   * @returns type of currently created shape
   */


  static getCurrentyCreatedShape() {
    return Canvas.currentlyCreatedShape;
  }
  /**
   * Setting type of currently created complex shape.
   * @param shape - shape type to set
   */


  static setCurrentlyComplexShape(shape) {
    Canvas.currentlyComplexShape = shape;
  }
  /**
   * Getting type of currently created complex shape.
   * @returns type of currently created complex shape
   */


  static getCurrentlyComplexShape() {
    return Canvas.currentlyComplexShape;
  }
  /**
   * Getting currently shape ID counter.
   * @returns currently shape ID counter
   */


  static getShapeIdCounter() {
    return Canvas.shapeIdCounter;
  }
  /**
   * Getting currently point ID counter.
   * @returns currently point ID counter
   */


  static getPointIdCounter() {
    return Canvas.pointIdCounter;
  }
  /**
   * Setting start point of prompting shape.
   * @param x X coordinate of start point of prompting shape
   * @param y Y coordinate of start point of prompting shape
   */


  static setPromptingShapeStartPoint(set, x, y) {
    if (set) {
      Canvas.promptingShapeStartPoint = [x, y];
    } else {
      Canvas.promptingShapeStartPoint = null;
      Canvas.batchLayer.destroyChildren();
    }
  }
  /**
   * Reset of prompting shape start point. It set value of Canvas.promptingShapeStartPoint to null.
   */


  static resetPromptingStartPoint() {
    Canvas.promptingShapeStartPoint = null;
    Canvas.batchLayer.destroyChildren();
  }
  /**
   * Setting base of prompting line.
   * @param equation array with cooeficients of line equation
   */


  static setBaseToPromptingLine(equation) {
    Canvas.baseToPromptingLine = equation;
  }
  /**
   * Getting shape by ID
   * @param id ID of shape to get
   * @returns shape with given ID
   */


  static getShape(id) {
    return Canvas.stage.find('#id' + id)[0];
  }
  /**
   * Deletion of shape.
   * @param id ID of shape to delete
   */


  static deleteShape(id) {
    Canvas.shapesLayer.find('#id' + id)[0].destroy();
  }
  /**
   * Clearing batch layer.
   */


  static clearBatchLayer() {
    Canvas.batchLayer.destroyChildren();
    Canvas.promptingShapeStartPoint = null;
  }

  static getSegmentEnds(id) {
    let segment = Canvas.getShape(id);
    let endCoords = segment.getAttr('points');
    let end1 = [endCoords[0], endCoords[1]];
    let end2 = [endCoords[2], endCoords[3]];
    let result = [0, 0];

    for (let i = 1; i < Canvas.shapeIdCounter; i++) {
      try {
        let shape = Canvas.getShape(i);

        if (Math.abs(shape.getAttr('x') - end1[0]) < 1 && Math.abs(shape.getAttr('y') - end1[1]) < 1) {
          result[0] = i;
        } else if (Math.abs(shape.getAttr('x') - end2[0]) < 1 && Math.abs(shape.getAttr('y') - end2[1]) < 1) {
          result[1] = i;
        }
      } catch (error) {}
    }

    return result;
  }
  /**
   * Drawing point on canvas.
   * @param x_coordinate X coordinate of creating point
   * @param y_coordinate Y coordinate of creating point
   * @param id shape ID to set
   */


  static drawPoint(id, x_coordinate, y_coordinate) {
    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Circle({
      id: "id" + id,
      x: x_coordinate,
      y: y_coordinate,
      fill: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor,
      radius: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointRadius,
      hitStrokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointHitStrokeWidth
    }); // bind function for mouse over a point

    shape.on("mouseover", function () {
      Canvas.drawGuideLines = false;
      shape.radius(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverPointRadius);
      shape.fill(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverShapesColor);
      Canvas.drawPromptingShapes = false;

      if (!(Canvas.promptingShapeStartPoint === null)) {
        Canvas.drawPromptingShape(shape.getAttr('x'), shape.getAttr('y'));
      } else if (Canvas.currentlyComplexShape == ComplexShapeEnum.PERPENDICULAR_LINE) {
        Canvas.drawPromptingShape(shape.getAttr('x'), shape.getAttr('y'));
      } else if (Canvas.currentlyComplexShape == ComplexShapeEnum.PARALLEL_LINE) {
        Canvas.drawPromptingShape(shape.getAttr('x'), shape.getAttr('y'));
      }
    }); // bind function for mouse out a point

    shape.on("mouseout", function () {
      Canvas.drawGuideLines = true;

      if (!Canvas.activatedShapes.includes(shape.getAttr('id'))) {
        shape.radius(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointRadius);
        shape.fill(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor);
      } else {
        shape.radius(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedPointRadius);
        shape.fill(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedShapesColor);
      }

      Canvas.drawPromptingShapes = true;
    }); // bind function for mouse click on point

    shape.on("click", function (evt) {
      evt.cancelBubble = true;
      Canvas.drawPromptingShapes = true;

      if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.NONE) {
        return;
      } else if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.COMPLEX_SHAPE) {
        //ComplexShapeCreator.clickedOnPoint(shape.getAttr('id'));
        _shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__.ComplexShapeCreator.clickedOnPoint(parseInt(shape.getAttr('id').substr(2)));
      } else {
        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.CanvasManagerInterface.clickedOnPoint(parseInt(shape.getAttr('id').substr(2)));
      }
    }); // creating point name text if variable showPointLabels is true

    if (_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.showPointLabels) {
      let pointName = Canvas.createPointName();
      let nameText = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Text({
        id: "txt" + id,
        x: x_coordinate + 5,
        y: y_coordinate + 5,
        text: pointName,
        fontSize: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.textSize,
        fontFamily: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.textFont,
        fontStyle: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.textFontStyle,
        fill: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.textColor,
        draggable: true
      }); // bind funtion for mouse over a text

      nameText.on("mouseover", function () {
        nameText.fill(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverShapesColor);
        nameText.fontStyle("bold");
      }); // bind function for mouse out a text

      nameText.on("mouseout", function () {
        nameText.fill(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.textColor);
        nameText.fontStyle(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.textFontStyle);
      }); // add text to layer

      Canvas.shapesLayer.add(nameText);
      nameText.zIndex(Canvas.TEXT_Z_INDEX); // save point name in pointNames array

      Canvas.pointNames[id] = pointName;
    }

    if (x_coordinate >= 0 && x_coordinate <= Canvas.getWidth() && y_coordinate >= 0 && y_coordinate <= Canvas.getHeight()) {
      Canvas.guideLineX.push(x_coordinate);
      Canvas.guideLineY.push(y_coordinate);
    } // add shape to layer


    Canvas.shapesLayer.add(shape);
    shape.setAttr('objectType', 'POINT');
    shape.zIndex(Canvas.POINT_Z_INDEX);
    Canvas.pointIdCounter += 1;
    Canvas.shapeIdCounter += 1;
    Canvas.lastCreatedPointId = id;
    Canvas.shapesLayer.draw();
  }
  /**
   * Drawing segment on canvas.
   * @param x1_coordinate X coordinate of first segment end
   * @param y1_coordinate Y coordinate of first segment end
   * @param x2_coordinate X coordinate of second segment end
   * @param y2_coordinate Y coordinate of second segment end
   * @param id shape ID to set
   */


  static drawLine(id, x1_coordinate, y1_coordinate, x2_coordinate, y2_coordinate) {
    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Line({
      id: "id" + id,
      points: [x1_coordinate, y1_coordinate, x2_coordinate, y2_coordinate],
      stroke: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor,
      strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth,
      hitStrokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesHitStrokeWidth,
      lineCap: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesCap,
      lineJoin: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesJoin
    }); // bind funtion for mouse over a line

    shape.on("mouseover", function () {
      shape.strokeWidth(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverLinesStrokeWidth);
      shape.stroke(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverShapesColor);
      let clickPosition = Canvas.shapesLayer.getRelativePointerPosition();
      let clickX;
      let clickY;

      if (Canvas.currentGuideLineX) {
        clickX = Canvas.currentGuideLineX;
      } else {
        clickX = clickPosition.x;
      }

      if (Canvas.currentGuideLineY) {
        clickY = Canvas.currentGuideLineY;
      } else {
        clickY = clickPosition.y;
      }

      if (!(Canvas.promptingShapeStartPoint === null)) {
        Canvas.drawPromptingShape(clickX, clickY);
      }
    }); // bind funtion for mouse out a line

    shape.on("mouseout", function () {
      if (!Canvas.activatedShapes.includes(shape.getAttr('id'))) {
        shape.strokeWidth(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth);
        shape.stroke(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor);
      } else {
        shape.strokeWidth(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedLinesStrokeWidth);
        shape.stroke(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedShapesColor);
      }
    }); // bind function for mouse click on line

    shape.on("click", function (evt) {
      evt.cancelBubble = true;
      if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.NONE) return;
      let clickPosition = Canvas.shapesLayer.getRelativePointerPosition();
      let clickX;
      let clickY;

      if (Canvas.currentGuideLineX) {
        clickX = Canvas.currentGuideLineX;
      } else {
        clickX = clickPosition.x;
      }

      if (Canvas.currentGuideLineY) {
        clickY = Canvas.currentGuideLineY;
      } else {
        clickY = clickPosition.y;
      }

      if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.COMPLEX_SHAPE) {
        _shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__.ComplexShapeCreator.clickedOnLine(parseInt(shape.getAttr('id').substr(2)), clickX, clickY, Canvas.shapeIdCounter);
      } else {
        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.CanvasManagerInterface.clickedOnSegment(parseInt(shape.getAttr('id').substr(2)), clickX, clickY);
      }
    }); // add shape to layer

    Canvas.shapesLayer.add(shape);
    shape.setAttr('objectType', 'SEGMENT');
    shape.zIndex(Canvas.LINE_Z_INDEX);
    Canvas.shapeIdCounter += 1;
    Canvas.lastCreatedSegmentId = id;
    Canvas.shapesLayer.draw();
  }
  /**
   * Drawing circle on canvas.
   * @param x_coordinate X coordinate of circle center
   * @param y_coordinate Y coordinate of circle center
   * @param radius circle radius length
   * @param id shape ID to set
   */


  static drawCircle(id, x_coordinate, y_coordinate, radius) {
    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Arc({
      id: "id" + id,
      x: x_coordinate,
      y: y_coordinate,
      radius: radius,
      innerRadius: radius,
      outerRadius: radius,
      angle: 360,
      rotation: 0,
      strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth,
      stroke: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor,
      fillEnabled: false
    }); // bind funtion for mouse over a circle

    shape.on("mouseover", function () {
      shape.strokeWidth(4);
      shape.stroke(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverShapesColor);
      let clickPosition = Canvas.shapesLayer.getRelativePointerPosition();
      let clickX;
      let clickY;

      if (Canvas.currentGuideLineX) {
        clickX = Canvas.currentGuideLineX;
      } else {
        clickX = clickPosition.x;
      }

      if (Canvas.currentGuideLineY) {
        clickY = Canvas.currentGuideLineY;
      } else {
        clickY = clickPosition.y;
      }

      if (!(Canvas.promptingShapeStartPoint === null)) {
        Canvas.drawPromptingShape(clickX, clickY);
      }
    }); // bind funtion for mouse out a line

    shape.on("mouseout", function () {
      if (!Canvas.activatedShapes.includes(shape.getAttr('id'))) {
        shape.strokeWidth(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth);
        shape.stroke(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor);
      } else {
        shape.strokeWidth(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedLinesStrokeWidth);
        shape.stroke(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedShapesColor);
      }
    }); // bind funtion for mouse click on circle

    shape.on("click", function (evt) {
      evt.cancelBubble = true;
      if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.NONE) return;
      let clickPosition = Canvas.shapesLayer.getRelativePointerPosition();
      let clickX;
      let clickY;

      if (Canvas.currentGuideLineX) {
        clickX = Canvas.currentGuideLineX;
      } else {
        clickX = clickPosition.x;
      }

      if (Canvas.currentGuideLineY) {
        clickY = Canvas.currentGuideLineY;
      } else {
        clickY = clickPosition.y;
      }

      if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.COMPLEX_SHAPE) {
        _shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__.ComplexShapeCreator.clickedOnCircle(parseInt(shape.getAttr('id').substr(2)), clickX, clickY, Canvas.shapeIdCounter);
      } else {
        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.CanvasManagerInterface.clickedOnCircle(parseInt(shape.getAttr('id').substr(2)), clickX, clickY);
      }
    });
    Canvas.shapesLayer.add(shape);
    shape.setAttr('objectType', 'CIRCLE');
    shape.zIndex(Canvas.CIRCLE_Z_INDEX);
    Canvas.shapeIdCounter += 1;
    Canvas.lastCreatedCircleId = id;
    Canvas.shapesLayer.draw();
  }
  /**
   * Creating instance of moving point.
   * @param x_coordinate X coordinate of mpving point
   * @param y_coordinate Y coordinate of moving point
   * @param function_on_move function to apply when moving point is dragged
   */


  static createMovingPromptingPoint(x_coordinate, y_coordinate, function_on_move) {
    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Circle({
      id: 'mp',
      x: x_coordinate,
      y: y_coordinate,
      fill: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.promptingShapesColor,
      radius: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointRadius,
      hitStrokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointHitStrokeWidth,
      draggable: true
    });
    shape.on("mouseover", function () {
      shape.radius(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverPointRadius);
      shape.fill(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.mouseoverShapesColor);
    });
    shape.on("mouseout", function () {
      shape.radius(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointRadius);
      shape.fill(_appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.promptingShapesColor);
    });
    shape.on('dragstart', function () {
      this.moveToTop();
    });
    shape.on('dragmove', () => {
      let new_coord = function_on_move(shape.getAttr('x'), shape.getAttr('y'));
      shape.x(new_coord[0]);
      shape.y(new_coord[1]);
      Canvas.findGuideLines(new_coord[0], new_coord[1]);
    });
    shape.on('dragend', function () {
      Canvas.findGuideLines(shape.getAttr('x'), shape.getAttr('y'));
      Canvas.guideLayer.destroyChildren();

      if (Canvas.currentGuideLineX) {
        shape.x(Canvas.currentGuideLineX);
      }

      if (Canvas.currentGuideLineY) {
        shape.y(Canvas.currentGuideLineY);
      }

      _shapes_creator_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_5__.ComplexShapeCreator.setMovingPointCoordinate(shape.getAttr('x'), shape.getAttr('y'));
    });
    Canvas.shapesLayer.add(shape);
    shape.zIndex(Canvas.POINT_Z_INDEX);
    Canvas.movingPromptingPoint = shape;
  }
  /**
   * Deleting created instance of moving point.
   */


  static deleteMovingPromptingPoint() {
    try {
      Canvas.movingPromptingPoint.destroy();
    } catch (_a) {}
  }
  /**
   * Non-blocking waiting for the shape to appear .
   * @param id ID of shape to appear
   */


  static waitForShapeAppear(id) {
    (function loopSearch() {
      if (Canvas.stage.find('#id' + id)[0]) {
        return;
      } else {
        setTimeout(function () {
          loopSearch();
        }, 10);
      }
    })();
  }
  /**
   * Activate shapes.
   * @param shape_ids array with shape IDs to activate
   */


  static activateShapes(shape_ids) {
    Canvas.activatedShapes.forEach(element => {
      if (Canvas.shapesLayer.find('#' + element)[0].getAttr('objectType') == 'POINT') {
        Canvas.shapesLayer.find('#' + element)[0].setAttr('fill', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor);
        Canvas.shapesLayer.find('#' + element)[0].setAttr('radius', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointRadius);
      } else {
        Canvas.shapesLayer.find('#' + element)[0].setAttr('stroke', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.basicShapesColor);
        Canvas.shapesLayer.find('#' + element)[0].setAttr('strokeWidth', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth);
      }
    });
    shape_ids.forEach(element => {
      if (Canvas.shapesLayer.find('#id' + element)[0].getAttr('objectType') == 'POINT') {
        Canvas.shapesLayer.find('#id' + element)[0].setAttr('fill', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedShapesColor);
        Canvas.shapesLayer.find('#id' + element)[0].setAttr('radius', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedPointRadius);
      } else {
        Canvas.shapesLayer.find('#id' + element)[0].setAttr('stroke', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedShapesColor);
        Canvas.shapesLayer.find('#id' + element)[0].setAttr('strokeWidth', _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.activatedLinesStrokeWidth);
      }
    });
    Canvas.activatedShapes = shape_ids.map(element => {
      return 'id' + element;
    });
  }
  /**
   * Drawing prompting segment.
   * @param point1_x X coordinate of first segment end
   * @param point1_y Y coordinate of first segment end
   * @param point2_x X coordinate of second segment end
   * @param point2_y Y coordinate of second segment end
   */


  static drawPromptingSegment(point1_x, point1_y, point2_x, point2_y) {
    Canvas.batchLayer.destroyChildren();
    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Line({
      points: [point1_x, point1_y, point2_x, point2_y],
      stroke: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.promptingShapesColor,
      strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth,
      lineCap: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesCap,
      lineJoin: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesJoin
    });
    Canvas.batchLayer.add(shape);
  }
  /**
   * Drawing prompting shape on base currently mouse position.
   * @param mouse_x_position X coordinate of mouse position
   * @param mouse_y_position Y coordinate of mouse position
   */


  static drawPromptingShape(mouse_x_position, mouse_y_position) {
    if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.SEGMENT) {
      if (Canvas.currentGuideLineX) {
        Canvas.drawPromptingSegment(Canvas.promptingShapeStartPoint[0], Canvas.promptingShapeStartPoint[1], Canvas.currentGuideLineX, mouse_y_position);
      } else if (Canvas.currentGuideLineY) {
        Canvas.drawPromptingSegment(Canvas.promptingShapeStartPoint[0], Canvas.promptingShapeStartPoint[1], mouse_x_position, Canvas.currentGuideLineY);
      } else {
        Canvas.drawPromptingSegment(Canvas.promptingShapeStartPoint[0], Canvas.promptingShapeStartPoint[1], mouse_x_position, mouse_y_position);
      }
    } else if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.LINE) {
      if (Canvas.compareNumbers(Canvas.promptingShapeStartPoint[0], mouse_x_position, 0.1) && Canvas.compareNumbers(Canvas.promptingShapeStartPoint[1], mouse_y_position, 0.1)) {
        return;
      }

      if (Canvas.currentGuideLineX && Canvas.compareNumbers(Canvas.promptingShapeStartPoint[0], Canvas.currentGuideLineX, 0.1)) {
        Canvas.drawPromptingSegment(Canvas.currentGuideLineX, Canvas.height, Canvas.currentGuideLineX, 0);
      } else if (Canvas.currentGuideLineY && Canvas.compareNumbers(Canvas.promptingShapeStartPoint[1], Canvas.currentGuideLineY, 0.1)) {
        Canvas.drawPromptingSegment(Canvas.width, Canvas.currentGuideLineY, 0, Canvas.currentGuideLineY);
      } else {
        let x1, x2, y1, y2;

        if (Canvas.promptingShapeStartPoint[0] < mouse_x_position) {
          x1 = Canvas.promptingShapeStartPoint[0];
          y1 = Canvas.promptingShapeStartPoint[1];
          x2 = mouse_x_position;
          y2 = mouse_y_position;
        } else {
          x2 = Canvas.promptingShapeStartPoint[0];
          y2 = Canvas.promptingShapeStartPoint[1];
          x1 = mouse_x_position;
          y1 = mouse_y_position;
        }

        let a = (y1 - y2) / (x1 - x2);
        let b = y1 - a * x1;
        x1 = (Canvas.height - b) / a;
        x2 = -b / a;

        if (a > 0) {
          if (x1 < 0) x1 = 0;
          if (x2 > Canvas.width) x2 = Canvas.width;
        } else {
          if (x2 < 0) x2 = 0;
          if (x1 > Canvas.width) x1 = Canvas.width;
        }

        Canvas.drawPromptingSegment(x1, a * x1 + b, x2, a * x2 + b);
      }
    } else if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.SEMILINE) {
      if (Canvas.compareNumbers(Canvas.promptingShapeStartPoint[0], mouse_x_position, 0.1) && Canvas.compareNumbers(Canvas.promptingShapeStartPoint[1], mouse_y_position, 0.1)) {
        return;
      }

      if (Canvas.currentGuideLineX && Canvas.compareNumbers(Canvas.promptingShapeStartPoint[0], Canvas.currentGuideLineX, 0.1)) {
        if (Canvas.promptingShapeStartPoint[1] < mouse_y_position) Canvas.drawPromptingSegment(Canvas.currentGuideLineX, Canvas.height, Canvas.currentGuideLineX, Canvas.promptingShapeStartPoint[1]);else Canvas.drawPromptingSegment(Canvas.currentGuideLineX, Canvas.promptingShapeStartPoint[1], Canvas.currentGuideLineX, 0);
      } else if (Canvas.currentGuideLineY && Canvas.compareNumbers(Canvas.promptingShapeStartPoint[1], Canvas.currentGuideLineY, 0.1)) {
        if (Canvas.promptingShapeStartPoint[0] < mouse_x_position) Canvas.drawPromptingSegment(Canvas.width, Canvas.currentGuideLineY, Canvas.promptingShapeStartPoint[0], Canvas.currentGuideLineY);else Canvas.drawPromptingSegment(Canvas.promptingShapeStartPoint[0], Canvas.currentGuideLineY, 0, Canvas.currentGuideLineY);
      } else {
        let x1, x2, y1, y2;

        if (Canvas.promptingShapeStartPoint[0] < mouse_x_position) {
          x1 = Canvas.promptingShapeStartPoint[0];
          y1 = Canvas.promptingShapeStartPoint[1];
          x2 = mouse_x_position;
          y2 = mouse_y_position;
        } else {
          x2 = Canvas.promptingShapeStartPoint[0];
          y2 = Canvas.promptingShapeStartPoint[1];
          x1 = mouse_x_position;
          y1 = mouse_y_position;
        }

        let a = (y1 - y2) / (x1 - x2);
        let b = y1 - a * x1;
        x1 = (Canvas.height - b) / a;
        x2 = -b / a;

        if (a > 0) {
          if (x1 < 0) x1 = 0;
          if (x2 > Canvas.width) x2 = Canvas.width;
          if (Canvas.promptingShapeStartPoint[0] > mouse_x_position) x1 = Canvas.promptingShapeStartPoint[0];else x2 = Canvas.promptingShapeStartPoint[0];
        } else {
          if (x2 < 0) x2 = 0;
          if (x1 > Canvas.width) x1 = Canvas.width;
          if (Canvas.promptingShapeStartPoint[0] > mouse_x_position) x2 = Canvas.promptingShapeStartPoint[0];else x1 = Canvas.promptingShapeStartPoint[0];
        }

        Canvas.drawPromptingSegment(x1, a * x1 + b, x2, a * x2 + b);
      }
    } else if (Canvas.currentlyCreatedShape == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_3__.ShapeToCreateEnum.CIRCLE) {
      Canvas.batchLayer.destroyChildren();
      let xs = Canvas.promptingShapeStartPoint[0] - mouse_x_position;
      let ys = Canvas.promptingShapeStartPoint[1] - mouse_y_position;
      let r = Math.sqrt(xs * xs + ys * ys);
      let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Arc({
        x: Canvas.promptingShapeStartPoint[0],
        y: Canvas.promptingShapeStartPoint[1],
        innerRadius: r,
        outerRadius: r,
        angle: 360,
        strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth,
        stroke: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.promptingShapesColor,
        fillEnabled: false
      });
      Canvas.batchLayer.add(shape);
    } else if (Canvas.currentlyComplexShape == ComplexShapeEnum.PERPENDICULAR_LINE) {
      Canvas.batchLayer.destroyChildren();

      if (Canvas.baseToPromptingLine) {
        if (Canvas.baseToPromptingLine[0] === null) {
          // x = b
          Canvas.drawPromptingSegment(0, mouse_y_position, Canvas.getWidth(), mouse_y_position);
        } else if (Canvas.compareNumbers(Canvas.baseToPromptingLine[0], 0, 0.01)) {
          // y = b
          Canvas.drawPromptingSegment(mouse_x_position, 0, mouse_x_position, Canvas.getHeight());
        } else {
          // y = ax+b
          let a = -1 / Canvas.baseToPromptingLine[0];
          let b = mouse_y_position - a * mouse_x_position;
          Canvas.drawPromptingSegment(0, b, Canvas.getWidth(), a * Canvas.getWidth() + b);
        }
      }
    } else if (Canvas.currentlyComplexShape == ComplexShapeEnum.PARALLEL_LINE) {
      Canvas.batchLayer.destroyChildren();

      if (Canvas.baseToPromptingLine) {
        if (Canvas.baseToPromptingLine[0] === null) {
          // x = b
          Canvas.drawPromptingSegment(mouse_x_position, 0, mouse_x_position, Canvas.getHeight());
        } else {
          // y = ax+b
          let a = Canvas.baseToPromptingLine[0];
          let b = mouse_y_position - a * mouse_x_position;
          Canvas.drawPromptingSegment(0, b, Canvas.getWidth(), a * Canvas.getWidth() + b);
        }
      }
    }
  }
  /**
   * Drawing prompting polygon.
   * @param points array with arrays representing polygon vertices
   */


  static drawPromptingPolygon(points) {
    Canvas.batchLayer.destroyChildren();
    let polygonPoints = [];

    for (let i = 0; i < points.length; i++) {
      polygonPoints.push(points[i][0]);
      polygonPoints.push(points[i][1]);
    }

    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Line({
      points: polygonPoints,
      stroke: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.promptingShapesColor,
      strokeWidth: 2,
      lineCap: "round",
      lineJoin: "round",
      closed: true
    });
    Canvas.batchLayer.add(shape);
  }
  /**
   * Comparison of numbers in a certain predetermined accuracy
   * @param a first number to compare
   * @param b second number to compare
   * @param epsilon accuracy of comparation
   * @returns true if a is equal b with accuracy epsilon, otherwise false
   */


  static compareNumbers(a, b, epsilon) {
    return Math.abs(a - b) <= epsilon;
  }

  static highlightPoint(x, y, fillColor) {
    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Circle({
      x: x,
      y: y,
      fill: fillColor,
      radius: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.pointRadius
    });
    Canvas.highlightLayer.add(shape);
  }

  static highlightPolyLine(vertices, closed, outlineColor, fillColor) {
    let coordinates = [];
    vertices.forEach(element => {
      coordinates.push(element[0]);
      coordinates.push(element[1]);
    });
    var shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Line({
      points: coordinates,
      stroke: outlineColor,
      strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth,
      lineCap: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesCap,
      lineJoin: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesJoin,
      closed: closed
    });

    if (fillColor) {
      shape.fill(fillColor);
    }

    Canvas.highlightLayer.add(shape);
  }

  static highlightAngle(arm1Point, vertexPoint, arm2Point, isConvex, fillColor, ratio) {
    Canvas.highlightPolyLine([arm1Point, vertexPoint, arm2Point], false, fillColor, null);

    if (arm1Point[0] == arm2Point[0] && arm1Point[1] == arm2Point[1] && arm1Point[0] == vertexPoint[0] && arm1Point[1] == vertexPoint[1]) {
      if (!isConvex) {
        Canvas.highlightCircle(vertexPoint[0], vertexPoint[1], 25, fillColor, null);
      }
    } else if (arm1Point[0] != arm2Point[0] || arm1Point[1] != arm2Point[1]) {
      let ratioSum = ratio[0] + ratio[1];
      let end1X = (ratio[1] * arm1Point[0] + ratio[0] * vertexPoint[0]) / ratioSum;
      let end1Y = (ratio[1] * arm1Point[1] + ratio[0] * vertexPoint[1]) / ratioSum;
      let end2X = (ratio[1] * arm2Point[0] + ratio[0] * vertexPoint[0]) / ratioSum;
      let end2Y = (ratio[1] * arm2Point[1] + ratio[0] * vertexPoint[1]) / ratioSum;
      let controlX, controlY;

      if (isConvex) {
        controlX = (arm1Point[0] + arm2Point[0]) / 2;
        controlY = (arm1Point[1] + arm2Point[1]) / 2;
      } else {
        controlX = 2 * vertexPoint[0] - (arm1Point[0] + arm2Point[0]) / 2;
        controlY = 2 * vertexPoint[1] - (arm1Point[1] + arm2Point[1]) / 2;
      }

      var shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Shape({
        stroke: fillColor,
        strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesStrokeWidth,
        sceneFunc: (ctx, s) => {
          ctx.beginPath();
          ctx.moveTo(end1X, end1Y);
          ctx.quadraticCurveTo(controlX, controlY, end2X, end2Y);
          ctx.fillStrokeShape(s);
        }
      });
      Canvas.highlightLayer.add(shape);
    } else if (!isConvex) {
      let distance = Math.sqrt(Math.pow(arm1Point[0] - vertexPoint[0], 2) + Math.pow(arm1Point[1] - vertexPoint[1], 2));
      let distancePart = distance / (ratio[0] + ratio[1]);
      Canvas.highlightCircle(vertexPoint[0], vertexPoint[1], distancePart * ratio[0], fillColor, null);
    }
  }

  static highlightCircle(x, y, radius, outlineColor, fillColor) {
    let shape = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Circle({
      x: x,
      y: y,
      radius: radius,
      stroke: outlineColor
    });

    if (fillColor) {
      shape.fill(fillColor);
    }

    Canvas.highlightLayer.add(shape);
  }

  static clearHighlightedShapes() {
    Canvas.highlightLayer.destroyChildren();
  }
  /**
   * Creating point name on base current point id counter.
   * @returns point name of currently created point
   */


  static createPointName() {
    let n = Canvas.pointIdCounter;
    let name = _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.capitalLetters.charAt(n % _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.capitalLetters.length); // if there are more points than letters of the alphabet, add apostrophes 

    while (n > _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.capitalLetters.length - 1) {
      name += "'";
      n -= _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.capitalLetters.length;
    }

    return name;
  }
  /**
   * Finding and creating guide lines for specific mouse position
   * @param x X coordinate of mouse position
   * @param y Y coordinate of mouse position
   */


  static findGuideLines(x, y) {
    let minimalXdistance = Number.POSITIVE_INFINITY;
    let theBestX = 0;
    let minimalYdistance = Number.POSITIVE_INFINITY;
    let theBestY = 0;
    Canvas.guideLineX.forEach(val => {
      let distance = Math.abs(val - x);

      if (distance < minimalXdistance) {
        minimalXdistance = distance;
        theBestX = val;
      }
    });
    Canvas.guideLineY.forEach(val => {
      let distance = Math.abs(val - y);

      if (distance < minimalYdistance) {
        minimalYdistance = distance;
        theBestY = val;
      }
    });
    Canvas.guideLayer.destroyChildren();

    if (minimalXdistance > _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.guideLineOffset) {
      Canvas.currentGuideLineX = null;
    } else if (Canvas.drawGuideLines) {
      Canvas.currentGuideLineX = theBestX;
      let line = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Line({
        points: [theBestX, 0, theBestX, Canvas.getHeight()],
        stroke: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.guideLinesColor,
        strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.guideLinesStrokeWidth,
        dash: [4, 6],
        lineCap: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesCap,
        lineJoin: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesJoin
      });
      Canvas.guideLayer.add(line);
    }

    if (minimalYdistance > _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.guideLineOffset) {
      Canvas.currentGuideLineY = null;
    } else if (Canvas.drawGuideLines) {
      Canvas.currentGuideLineY = theBestY;
      let line = new konva__WEBPACK_IMPORTED_MODULE_1__.default.Line({
        points: [0, theBestY, Canvas.getWidth(), theBestY],
        stroke: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.guideLinesColor,
        strokeWidth: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.guideLinesStrokeWidth,
        dash: [4, 6],
        lineCap: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesCap,
        lineJoin: _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.linesJoin
      });
      Canvas.guideLayer.add(line);
    }
  }

}
Canvas.blockInterface$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.BehaviorSubject(true);
Canvas.POINT_Z_INDEX = 3;
Canvas.LINE_Z_INDEX = 2;
Canvas.CIRCLE_Z_INDEX = 1;
Canvas.TEXT_Z_INDEX = 4;
Canvas.DIMENSION_MULTIPIER = 3;
Canvas.SCALING_INCREASE = 0.01;
Canvas.lockTime = 0;

/***/ }),

/***/ 7528:
/*!**************************************************!*\
  !*** ./src/app/dashboard/dashboard.component.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DashboardComponent": () => (/* binding */ DashboardComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas */ 7909);
/* harmony import */ var _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shapes-creator/shapes-creator.component */ 5436);
/* harmony import */ var _dependencies_presenter_dependencies_presenter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependencies-presenter/dependencies-presenter */ 347);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ 4101);
/* harmony import */ var _services_scheme_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/scheme.service */ 4604);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/user.service */ 3071);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 4364);
/* harmony import */ var _dependencies_presenter_dependencies_presenter_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dependencies-presenter/dependencies-presenter.component */ 3950);










function DashboardComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "div", 13);
} }
function DashboardComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](1, "app-shapes-creator");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function DashboardComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](1, "app-dependencies-presenter");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
class DashboardComponent {
    /**
     * Subscribing BehaviorSubjects from {@link ComplexShapeCreator}.
     * Adding listeners for messages from backend and linking them to functions from {@link Canvas}.
     * Binding ToastrService to alert-messages(alert types: positive, neutral, negative) from backend.
     * @param toastr instance of ToastrService
     */
    constructor(toastr, _schemeService, _userService) {
        this.toastr = toastr;
        this._schemeService = _schemeService;
        this._userService = _userService;
        this.displayShapesCreator = true;
        this.displayDependenciesPresenter = false;
        this.uiIsBlocked = true;
        _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_1__.ShapesCreatorComponent.displayShapesCreator$.subscribe(value => {
            this.displayShapesCreator = value;
        });
        _dependencies_presenter_dependencies_presenter__WEBPACK_IMPORTED_MODULE_2__.DependenciesPresenter.displayDependenciesPresenter$.subscribe(value => {
            this.displayDependenciesPresenter = value;
        });
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.blockInterface$.subscribe(value => {
            this.uiIsBlocked = value;
        });
    }
    /**
     * Initializng Canvas.
     * Adding window event listener to resize window event - reinitialization of Canvas.
     */
    ngOnInit() {
        // initializing canvas
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.init(document.getElementById('canvas').clientWidth, document.getElementById('canvas').clientHeight, 'canvas', this.toastr);
        _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_1__.ShapesCreatorComponent.displayShapesCreator$.next(true);
        // avoid resizing the window to avoid problems with canva 
        // when the window size is changed, the new canva is loaded - current data are lost
        window.addEventListener('resize', () => _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.reinit(), true);
    }
    logout() {
        this._userService.logout();
    }
}
DashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_7__.ToastrService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_services_scheme_service__WEBPACK_IMPORTED_MODULE_3__.SchemeService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_services_user_service__WEBPACK_IMPORTED_MODULE_4__.UserService)); };
DashboardComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: DashboardComponent, selectors: [["app-dashboard"]], decls: 16, vars: 4, consts: [["class", "ui-blocker", 4, "ngIf"], [1, "d-flex", "flex-row", 2, "height", "100%", "width", "100%"], [1, "d-flex", "flex-column", "justify-content-center", 2, "height", "100%", "width", "25%", "background-color", "#EBEBEB"], [2, "height", "15%", "margin-top", "5%", "margin-bottom", "5%", "width", "100%"], [1, "d-flex", "flex-row", 2, "height", "100%"], [1, "d-flex", "flex-column", 2, "height", "100%", "width", "50%"], ["src", "/static/imgs/MeetKundeLogoGray.svg", "alt", "MeetKunde Logo", "height", "100%", "width", "100%", 2, "height", "100%", "margin-left", "7%", "margin-right", "7%"], [1, "container", "h-100", 2, "width", "50%"], [1, "d-flex", "flex-row", "h-100", "justify-content-center", "align-items-center"], ["style", "height: 75%; width: 100%;", 4, "ngIf"], [1, "d-flex", "justify-content-center", 2, "height", "10%"], [1, "btn", "my-btn", 2, "width", "50%", "margin-bottom", "10%", 3, "click"], ["id", "canvas", 1, "d-flex", "flex-column"], [1, "ui-blocker"], [2, "height", "75%", "width", "100%"]], template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](0, DashboardComponent_div_0_Template, 1, 0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](6, "img", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](10, DashboardComponent_div_10_Template, 2, 0, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](11, DashboardComponent_div_11_Template, 2, 0, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](12, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](13, "button", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function DashboardComponent_Template_button_click_13_listener() { return ctx.logout(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](14, "Log Out");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](15, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.uiIsBlocked);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"](" You are logged in as ", ctx._userService.username, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.displayShapesCreator);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.displayDependenciesPresenter);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_1__.ShapesCreatorComponent, _dependencies_presenter_dependencies_presenter_component__WEBPACK_IMPORTED_MODULE_5__.DependenciesPresenterComponent], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 3950:
/*!**************************************************************************************!*\
  !*** ./src/app/dashboard/dependencies-presenter/dependencies-presenter.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DependenciesPresenterComponent": () => (/* binding */ DependenciesPresenterComponent)
/* harmony export */ });
/* harmony import */ var _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependencies-presenter */ 347);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 4364);



function DependenciesPresenterComponent_div_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "input", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("change", function DependenciesPresenterComponent_div_6_div_1_Template_input_change_2_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r17); const item_r15 = restoredCtx.$implicit; const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2); return ctx_r16.onChange($event.target, item_r15); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "label", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r15 = ctx.$implicit;
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("checked", ctx_r14.checked(item_r15));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", item_r15, " ");
} }
function DependenciesPresenterComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DependenciesPresenterComponent_div_6_div_1_Template, 5, 2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r0.dependencyTypes);
} }
function DependenciesPresenterComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function DependenciesPresenterComponent_h6_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r2.dependencyTitle);
} }
function DependenciesPresenterComponent_p_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r3.dependencyDescription);
} }
function DependenciesPresenterComponent_p_13_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r4.dependenciesReason);
} }
function DependenciesPresenterComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function DependenciesPresenterComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "button", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function DependenciesPresenterComponent_div_15_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r18.nextDependency(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Next");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function DependenciesPresenterComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function DependenciesPresenterComponent_div_17_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "button", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function DependenciesPresenterComponent_div_17_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r20.toggle(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Choose Types");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function DependenciesPresenterComponent_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function DependenciesPresenterComponent_div_19_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "button", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function DependenciesPresenterComponent_div_19_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r22.toggle(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Close Types");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function DependenciesPresenterComponent_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function DependenciesPresenterComponent_div_21_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "button", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function DependenciesPresenterComponent_div_21_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r24.cancelPresenting(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Cancel");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function DependenciesPresenterComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
class DependenciesPresenterComponent {
    constructor() {
        this.dependencyTitle = "";
        this.dependencyDescription = "";
        this.dependenciesReason = "";
        this.choosingTypes = false;
        this.dependencyTypes = _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.dependencyTypes;
        this.selectedDependencyTypes = [...this.dependencyTypes];
        _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.selectedTypes$.next(this.selectedDependencyTypes);
        _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.dependencyTitle$.subscribe(value => {
            this.dependencyTitle = value;
        });
        _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.dependencyDescription$.subscribe(value => {
            this.dependencyDescription = value;
        });
        _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.dependencyReason$.subscribe(value => {
            this.dependenciesReason = value;
        });
    }
    toggle() {
        this.choosingTypes = !this.choosingTypes;
    }
    checked(item) {
        if (this.selectedDependencyTypes.indexOf(item) != -1) {
            return true;
        }
        else {
            return false;
        }
    }
    onChange(target, item) {
        if (target.checked) {
            this.selectedDependencyTypes.push(item);
        }
        else {
            this.selectedDependencyTypes.splice(this.selectedDependencyTypes.indexOf(item), 1);
        }
        _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.selectedTypes$.next(this.selectedDependencyTypes);
    }
    ngOnInit() { }
    nextDependency() {
        _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.nextDependency();
    }
    cancelPresenting() {
        _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependenciesPresenter.cancelPresenting();
    }
}
DependenciesPresenterComponent.ɵfac = function DependenciesPresenterComponent_Factory(t) { return new (t || DependenciesPresenterComponent)(); };
DependenciesPresenterComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DependenciesPresenterComponent, selectors: [["app-dependencies-presenter"]], decls: 23, vars: 14, consts: [[1, "d-flex", "justify-content-center", 2, "height", "100%", "width", "100%"], [1, "d-flex", "flex-column", "justify-content-center", 2, "text-align", "left", "height", "100%", "width", "100%"], [1, "d-flex", "justify-content-center"], [1, "spacer"], ["style", "overflow-y: scroll;", 4, "ngIf"], ["class", "spacer", 4, "ngIf"], [4, "ngIf"], ["class", "d-flex justify-content-center", 4, "ngIf"], [2, "overflow-y", "scroll"], [4, "ngFor", "ngForOf"], [1, "form-check"], ["type", "checkbox", 1, "form-check-input", 3, "checked", "change"], [1, "form-check-label", 2, "font-size", "75%"], [1, "btn", "my-btn", 2, "width", "50%", 3, "click"]], template: function DependenciesPresenterComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "h5");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, "Dependencies Presenter");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](5, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](6, DependenciesPresenterComponent_div_6_Template, 2, 1, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](7, DependenciesPresenterComponent_div_7_Template, 1, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, DependenciesPresenterComponent_h6_9_Template, 2, 1, "h6", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](11, DependenciesPresenterComponent_p_11_Template, 2, 1, "p", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](13, DependenciesPresenterComponent_p_13_Template, 2, 1, "p", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](14, DependenciesPresenterComponent_div_14_Template, 1, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, DependenciesPresenterComponent_div_15_Template, 3, 0, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, DependenciesPresenterComponent_div_16_Template, 1, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](17, DependenciesPresenterComponent_div_17_Template, 3, 0, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, DependenciesPresenterComponent_div_18_Template, 1, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](19, DependenciesPresenterComponent_div_19_Template, 3, 0, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](20, DependenciesPresenterComponent_div_20_Template, 1, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](21, DependenciesPresenterComponent_div_21_Template, 3, 0, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](22, DependenciesPresenterComponent_div_22_Template, 1, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.choosingTypes);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgForOf], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 347:
/*!****************************************************************************!*\
  !*** ./src/app/dashboard/dependencies-presenter/dependencies-presenter.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AngleTypeEnum": () => (/* binding */ AngleTypeEnum),
/* harmony export */   "LineTypeEnum": () => (/* binding */ LineTypeEnum),
/* harmony export */   "PolygonTypeEnum": () => (/* binding */ PolygonTypeEnum),
/* harmony export */   "DependencyCategoryEnum": () => (/* binding */ DependencyCategoryEnum),
/* harmony export */   "DependencyTypeEnum": () => (/* binding */ DependencyTypeEnum),
/* harmony export */   "DependencyReasonEnum": () => (/* binding */ DependencyReasonEnum),
/* harmony export */   "UsefullnessLevel": () => (/* binding */ UsefullnessLevel),
/* harmony export */   "createPointName": () => (/* binding */ createPointName),
/* harmony export */   "createLineName": () => (/* binding */ createLineName),
/* harmony export */   "createCircleName": () => (/* binding */ createCircleName),
/* harmony export */   "createSegmentName": () => (/* binding */ createSegmentName),
/* harmony export */   "createAngleName": () => (/* binding */ createAngleName),
/* harmony export */   "createPolygonName": () => (/* binding */ createPolygonName),
/* harmony export */   "DependenciesPresenter": () => (/* binding */ DependenciesPresenter)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../canvas */ 7909);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 6491);
/* harmony import */ var _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shapes-creator/shapes-creator.component */ 5436);
/* harmony import */ var _appearance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../appearance */ 3661);




/**
 * Enum defined in: compute-service/brain/models.py
 */
var AngleTypeEnum;
(function (AngleTypeEnum) {
    AngleTypeEnum[AngleTypeEnum["UNKNOWN"] = 0] = "UNKNOWN";
    AngleTypeEnum[AngleTypeEnum["CONVEX"] = 1] = "CONVEX";
    AngleTypeEnum[AngleTypeEnum["CONCAVE"] = 2] = "CONCAVE";
})(AngleTypeEnum || (AngleTypeEnum = {}));
var LineTypeEnum;
(function (LineTypeEnum) {
    LineTypeEnum[LineTypeEnum["VERTICAL"] = 0] = "VERTICAL";
    LineTypeEnum[LineTypeEnum["HORIZONTAL"] = 1] = "HORIZONTAL";
    LineTypeEnum[LineTypeEnum["SLANTED"] = 2] = "SLANTED";
})(LineTypeEnum || (LineTypeEnum = {}));
var PolygonTypeEnum;
(function (PolygonTypeEnum) {
    PolygonTypeEnum[PolygonTypeEnum["UNKNOWN"] = 0] = "UNKNOWN";
    PolygonTypeEnum[PolygonTypeEnum["ISOSCELES_ACUTE_TRIANGLE"] = 1] = "ISOSCELES_ACUTE_TRIANGLE";
    PolygonTypeEnum[PolygonTypeEnum["EQUILATERAL_TRIANGLE"] = 2] = "EQUILATERAL_TRIANGLE";
    PolygonTypeEnum[PolygonTypeEnum["SCALENE_RIGHT_TRIANGLE"] = 3] = "SCALENE_RIGHT_TRIANGLE";
    PolygonTypeEnum[PolygonTypeEnum["ISOSCELES_RIGHT_TRIANGLE"] = 4] = "ISOSCELES_RIGHT_TRIANGLE";
    PolygonTypeEnum[PolygonTypeEnum["OBTUSE_ISOSCELES_TRIANGLE"] = 5] = "OBTUSE_ISOSCELES_TRIANGLE";
    PolygonTypeEnum[PolygonTypeEnum["SQUARE"] = 6] = "SQUARE";
    PolygonTypeEnum[PolygonTypeEnum["RECTANGLE"] = 7] = "RECTANGLE";
    PolygonTypeEnum[PolygonTypeEnum["REGULAR_POLYGON"] = 8] = "REGULAR_POLYGON";
    PolygonTypeEnum[PolygonTypeEnum["PARALLELOGRAM"] = 9] = "PARALLELOGRAM";
    PolygonTypeEnum[PolygonTypeEnum["KITE"] = 10] = "KITE";
    PolygonTypeEnum[PolygonTypeEnum["RHOMBUS"] = 11] = "RHOMBUS";
    PolygonTypeEnum[PolygonTypeEnum["SCALENE_TRAPEZOID"] = 12] = "SCALENE_TRAPEZOID";
    PolygonTypeEnum[PolygonTypeEnum["ISOSCELES_TRAPEZOID"] = 13] = "ISOSCELES_TRAPEZOID";
    PolygonTypeEnum[PolygonTypeEnum["RIGHT_TRAPEZOID"] = 14] = "RIGHT_TRAPEZOID";
})(PolygonTypeEnum || (PolygonTypeEnum = {}));
/**
 * Enum defined in: compute-service/brain/models.py
 */
var DependencyCategoryEnum;
(function (DependencyCategoryEnum) {
    DependencyCategoryEnum[DependencyCategoryEnum["FORMULA"] = 0] = "FORMULA";
    DependencyCategoryEnum[DependencyCategoryEnum["POLYGON_TYPE"] = 1] = "POLYGON_TYPE";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_POINTS_PAIRS"] = 2] = "OF_POINTS_PAIRS";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_LINES"] = 3] = "OF_LINES";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_CIRCLES"] = 4] = "OF_CIRCLES";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_ANGLES"] = 5] = "OF_ANGLES";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_LINE_AND_ANGLE"] = 6] = "OF_LINE_AND_ANGLE";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_LINE_AND_CIRCLE"] = 7] = "OF_LINE_AND_CIRCLE";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_LINE_AND_POINTS_PAIR"] = 8] = "OF_LINE_AND_POINTS_PAIR";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_CIRCLE_AND_POLYGON"] = 9] = "OF_CIRCLE_AND_POLYGON";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_POINTS_PAIRS_PAIR_AND_POINTS_PAIR"] = 10] = "OF_POINTS_PAIRS_PAIR_AND_POINTS_PAIR";
    DependencyCategoryEnum[DependencyCategoryEnum["OF_POLYGONS"] = 11] = "OF_POLYGONS";
})(DependencyCategoryEnum || (DependencyCategoryEnum = {}));
var DependencyTypeEnum;
(function (DependencyTypeEnum) {
    DependencyTypeEnum[DependencyTypeEnum["SEGMENT_LENGTH"] = 0] = "SEGMENT_LENGTH";
    DependencyTypeEnum[DependencyTypeEnum["ANGLE_VALUE"] = 1] = "ANGLE_VALUE";
    DependencyTypeEnum[DependencyTypeEnum["EQUATION"] = 2] = "EQUATION";
    DependencyTypeEnum[DependencyTypeEnum["POLYGON_TYPE"] = 3] = "POLYGON_TYPE";
    DependencyTypeEnum[DependencyTypeEnum["EQUAL_SEGMENTS"] = 4] = "EQUAL_SEGMENTS";
    DependencyTypeEnum[DependencyTypeEnum["EQUAL_ANGLES"] = 5] = "EQUAL_ANGLES";
    DependencyTypeEnum[DependencyTypeEnum["PERPENDICULAR_LINES"] = 6] = "PERPENDICULAR_LINES";
    DependencyTypeEnum[DependencyTypeEnum["PARALLEL_LINES"] = 7] = "PARALLEL_LINES";
    DependencyTypeEnum[DependencyTypeEnum["TANGENT_LINE_TO_CIRCLE"] = 8] = "TANGENT_LINE_TO_CIRCLE";
    DependencyTypeEnum[DependencyTypeEnum["TANGENT_CIRCLE_TO_CIRCLE"] = 9] = "TANGENT_CIRCLE_TO_CIRCLE";
    DependencyTypeEnum[DependencyTypeEnum["BISECTOR_LINE"] = 10] = "BISECTOR_LINE";
    DependencyTypeEnum[DependencyTypeEnum["MID_PERPENDICULAR_LINE"] = 11] = "MID_PERPENDICULAR_LINE";
    DependencyTypeEnum[DependencyTypeEnum["INSCRIBED_CIRCLE"] = 12] = "INSCRIBED_CIRCLE";
    DependencyTypeEnum[DependencyTypeEnum["CIRCUMSCRIBED_CIRCLE"] = 13] = "CIRCUMSCRIBED_CIRCLE";
    DependencyTypeEnum[DependencyTypeEnum["ESCRIBED_CIRCLE"] = 14] = "ESCRIBED_CIRCLE";
    DependencyTypeEnum[DependencyTypeEnum["MEDIAN"] = 15] = "MEDIAN";
    DependencyTypeEnum[DependencyTypeEnum["ALTITUDE"] = 16] = "ALTITUDE";
    DependencyTypeEnum[DependencyTypeEnum["MID_SEGMENT"] = 17] = "MID_SEGMENT";
    DependencyTypeEnum[DependencyTypeEnum["SIMILAR_TRIANGLES"] = 18] = "SIMILAR_TRIANGLES";
    DependencyTypeEnum[DependencyTypeEnum["CONGRUENT_TRIANGLES"] = 19] = "CONGRUENT_TRIANGLES";
})(DependencyTypeEnum || (DependencyTypeEnum = {}));
/**
 * Enum defined in: compute-service/brain/models.py
 */
var DependencyReasonEnum;
(function (DependencyReasonEnum) {
    DependencyReasonEnum[DependencyReasonEnum["NONE"] = 0] = "NONE";
    DependencyReasonEnum[DependencyReasonEnum["USER_DEFINED"] = 1] = "USER_DEFINED";
    DependencyReasonEnum[DependencyReasonEnum["DIVIDED_SEGMENT"] = 2] = "DIVIDED_SEGMENT";
    DependencyReasonEnum[DependencyReasonEnum["MID_PERPENDICULAR"] = 3] = "MID_PERPENDICULAR";
    DependencyReasonEnum[DependencyReasonEnum["TANGENT_TO_CIRCLE"] = 4] = "TANGENT_TO_CIRCLE";
    DependencyReasonEnum[DependencyReasonEnum["TANGENT_TO_LINE"] = 5] = "TANGENT_TO_LINE";
    DependencyReasonEnum[DependencyReasonEnum["ALTITUDE"] = 6] = "ALTITUDE";
    DependencyReasonEnum[DependencyReasonEnum["MEDIAN"] = 7] = "MEDIAN";
    DependencyReasonEnum[DependencyReasonEnum["MID_SEGMENT"] = 8] = "MID_SEGMENT";
    DependencyReasonEnum[DependencyReasonEnum["BISECTOR"] = 9] = "BISECTOR";
    DependencyReasonEnum[DependencyReasonEnum["INSCRIBED_CIRCLE"] = 10] = "INSCRIBED_CIRCLE";
    DependencyReasonEnum[DependencyReasonEnum["CIRCUMSCRIBED_CIRCLE"] = 11] = "CIRCUMSCRIBED_CIRCLE";
    DependencyReasonEnum[DependencyReasonEnum["ESCRIBED_CIRCLE"] = 12] = "ESCRIBED_CIRCLE";
    DependencyReasonEnum[DependencyReasonEnum["SQUARE"] = 13] = "SQUARE";
    DependencyReasonEnum[DependencyReasonEnum["SQUARE_DIAGONAL"] = 14] = "SQUARE_DIAGONAL";
    DependencyReasonEnum[DependencyReasonEnum["RECTANGLE"] = 15] = "RECTANGLE";
    DependencyReasonEnum[DependencyReasonEnum["RECTANGLE_DIAGONAL"] = 16] = "RECTANGLE_DIAGONAL";
    DependencyReasonEnum[DependencyReasonEnum["REGULAR_POLYGON"] = 17] = "REGULAR_POLYGON";
    DependencyReasonEnum[DependencyReasonEnum["PARALLELOGRAM"] = 18] = "PARALLELOGRAM";
    DependencyReasonEnum[DependencyReasonEnum["PARALLELOGRAM_DIAGONAL"] = 19] = "PARALLELOGRAM_DIAGONAL";
    DependencyReasonEnum[DependencyReasonEnum["KITE"] = 20] = "KITE";
    DependencyReasonEnum[DependencyReasonEnum["KITE_DIAGONAL"] = 21] = "KITE_DIAGONAL";
    DependencyReasonEnum[DependencyReasonEnum["RHOMBUS"] = 22] = "RHOMBUS";
    DependencyReasonEnum[DependencyReasonEnum["RHOMBUS_DIAGONAL"] = 23] = "RHOMBUS_DIAGONAL";
    DependencyReasonEnum[DependencyReasonEnum["ISOSCELES_ACUTE_TRIANGLE"] = 24] = "ISOSCELES_ACUTE_TRIANGLE";
    DependencyReasonEnum[DependencyReasonEnum["EQUILATERAL_TRIANGLE"] = 25] = "EQUILATERAL_TRIANGLE";
    DependencyReasonEnum[DependencyReasonEnum["SCALENE_RIGHT_TRIANGLE"] = 26] = "SCALENE_RIGHT_TRIANGLE";
    DependencyReasonEnum[DependencyReasonEnum["ISOSCELES_RIGHT_TRIANGLE"] = 27] = "ISOSCELES_RIGHT_TRIANGLE";
    DependencyReasonEnum[DependencyReasonEnum["OBTUSE_ISOSCELES_TRIANGLE"] = 28] = "OBTUSE_ISOSCELES_TRIANGLE";
    DependencyReasonEnum[DependencyReasonEnum["SCALENE_TRAPEZOID"] = 29] = "SCALENE_TRAPEZOID";
    DependencyReasonEnum[DependencyReasonEnum["ISOSCELES_TRAPEZOID"] = 30] = "ISOSCELES_TRAPEZOID";
    DependencyReasonEnum[DependencyReasonEnum["ISOSCELES_TRAPEZOID_DIAGONAL"] = 31] = "ISOSCELES_TRAPEZOID_DIAGONAL";
    DependencyReasonEnum[DependencyReasonEnum["RIGHT_TRAPEZOID"] = 32] = "RIGHT_TRAPEZOID";
    DependencyReasonEnum[DependencyReasonEnum["POINTS_ARE_THE_SAME"] = 33] = "POINTS_ARE_THE_SAME";
    DependencyReasonEnum[DependencyReasonEnum["ARMS_ARE_THE_SAME"] = 34] = "ARMS_ARE_THE_SAME";
    DependencyReasonEnum[DependencyReasonEnum["VERTICAL_ANGLES"] = 35] = "VERTICAL_ANGLES";
    DependencyReasonEnum[DependencyReasonEnum["SUPPLEMENTARY_ANGLES"] = 36] = "SUPPLEMENTARY_ANGLES";
    DependencyReasonEnum[DependencyReasonEnum["ALTERNATE_ANGLES"] = 37] = "ALTERNATE_ANGLES";
    DependencyReasonEnum[DependencyReasonEnum["CORRESPONDING_ANGLES"] = 38] = "CORRESPONDING_ANGLES";
    DependencyReasonEnum[DependencyReasonEnum["PERPENDICULAR_LINES"] = 39] = "PERPENDICULAR_LINES";
    DependencyReasonEnum[DependencyReasonEnum["PARALLEL_LINES"] = 40] = "PARALLEL_LINES";
    DependencyReasonEnum[DependencyReasonEnum["PARALLELISM_TRANSITIVITY"] = 41] = "PARALLELISM_TRANSITIVITY";
    DependencyReasonEnum[DependencyReasonEnum["PERPENDICULARITIES_COMPOSITION"] = 42] = "PERPENDICULARITIES_COMPOSITION";
    DependencyReasonEnum[DependencyReasonEnum["PERPENDICULARITY_AND_PARALLELISM_COMPOSITION"] = 43] = "PERPENDICULARITY_AND_PARALLELISM_COMPOSITION";
    DependencyReasonEnum[DependencyReasonEnum["RIGHT_ANGLE"] = 44] = "RIGHT_ANGLE";
    DependencyReasonEnum[DependencyReasonEnum["SUM_OF_ANGLES_IN_TRIANGLE"] = 45] = "SUM_OF_ANGLES_IN_TRIANGLE";
    DependencyReasonEnum[DependencyReasonEnum["SIMILAR_TRIANGLES"] = 46] = "SIMILAR_TRIANGLES";
    DependencyReasonEnum[DependencyReasonEnum["SIDE_SIDE_SIDE"] = 47] = "SIDE_SIDE_SIDE";
    DependencyReasonEnum[DependencyReasonEnum["ANGLE_ANGLE_ANGLE"] = 48] = "ANGLE_ANGLE_ANGLE";
    DependencyReasonEnum[DependencyReasonEnum["CONGRUENT_TRIANGLES"] = 49] = "CONGRUENT_TRIANGLES";
    DependencyReasonEnum[DependencyReasonEnum["SIDE_ANGLE_SIDE"] = 50] = "SIDE_ANGLE_SIDE";
    DependencyReasonEnum[DependencyReasonEnum["ANGLE_SIDE_ANGLE"] = 51] = "ANGLE_SIDE_ANGLE";
    DependencyReasonEnum[DependencyReasonEnum["SAME_ARMS"] = 52] = "SAME_ARMS";
    DependencyReasonEnum[DependencyReasonEnum["FUNDAMENTAL_THEORY_OF_GEOMETRY"] = 53] = "FUNDAMENTAL_THEORY_OF_GEOMETRY";
})(DependencyReasonEnum || (DependencyReasonEnum = {}));
var UsefullnessLevel;
(function (UsefullnessLevel) {
    UsefullnessLevel[UsefullnessLevel["LOW"] = 0] = "LOW";
    UsefullnessLevel[UsefullnessLevel["MEDIUM"] = 1] = "MEDIUM";
    UsefullnessLevel[UsefullnessLevel["HIGH"] = 2] = "HIGH";
})(UsefullnessLevel || (UsefullnessLevel = {}));
function createPointName(id) {
    let letters = "ABCDEFGHIJKLMNOPQRSTUWVXYZ";
    let name = letters.charAt(id % letters.length);
    // if there are more points than letters of the alphabet, add apostrophes 
    while (id > (letters.length - 1)) {
        name += "'";
        id -= letters.length;
    }
    return name;
}
function createLineName(id) {
    let letters = "abcdefghijklmnopqrstuwvxyz";
    let name = letters.charAt(id % letters.length);
    // if there are more points than letters of the alphabet, add apostrophes 
    while (id > (letters.length - 1)) {
        name += "'";
        id -= letters.length;
    }
    return name;
}
function createCircleName(id) {
    return "circle with id = " + id;
}
function createSegmentName(end1Id, end2Id) {
    return createPointName(end1Id) + createPointName(end2Id);
}
function createAngleName(point1Id, vertexId, point2Id, type) {
    return createPointName(point1Id) + createPointName(vertexId) + createPointName(point2Id) + "[" + AngleTypeEnum[type] + "]";
}
function createPolygonName(polygon) {
    let name = "";
    for (let i = 0; i < polygon.length; i++) {
        name += createPointName(polygon[i]);
    }
    return name;
}
class DependenciesPresenter {
    static getRandomInt(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
    }
    static getRandomColors(colorsNumber) {
        let variousIndexes = [];
        let result = [];
        let index;
        let n = DependenciesPresenter.highlightColors.length - 1;
        for (let i = 0; i < colorsNumber; i++) {
            do {
                index = DependenciesPresenter.getRandomInt(0, n);
            } while (variousIndexes.includes(index));
            variousIndexes.push(index);
        }
        for (let i = 0; i < colorsNumber; i++) {
            result.push(DependenciesPresenter.highlightColors[variousIndexes[i]]);
        }
        return result;
    }
    static presentDependencies(data) {
        DependenciesPresenter.dataModel = data;
        DependenciesPresenter.points = data.points;
        DependenciesPresenter.lines = data.lines;
        DependenciesPresenter.circles = data.circles;
        DependenciesPresenter.selectedTypes$.next(DependenciesPresenter.dependencyTypes);
        _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_1__.ShapesCreatorComponent.displayShapesCreator$.next(false);
        DependenciesPresenter.displayDependenciesPresenter$.next(true);
        DependenciesPresenter.dependencyTitle$.next("");
        DependenciesPresenter.dependencyDescription$.next("");
        DependenciesPresenter.dependencyReason$.next("");
        DependenciesPresenter.highlightColors = _appearance__WEBPACK_IMPORTED_MODULE_2__.Appearance.highlightColors;
        DependenciesPresenter.targetUsefullness = [/*UsefullnessLevel.LOW,*/ UsefullnessLevel.MEDIUM, UsefullnessLevel.HIGH];
        DependenciesPresenter.variableToIndexes = {};
        if (data.indexes_of_variables != null) {
            data.indexes_of_variables.forEach(el => {
                DependenciesPresenter.variableToIndexes[el.name] = el.ids;
            });
        }
        DependenciesPresenter.selectedTypes$.subscribe(newSelectedTypes => {
            let dependencies = DependenciesPresenter.dataModel.dependencies;
            DependenciesPresenter.dependenciesArray = [];
            dependencies.forEach(e1 => {
                let d = e1.dependencies;
                if (d != null) {
                    d.forEach(e2 => {
                        if (newSelectedTypes.includes(DependencyTypeEnum[e2.type])) {
                            if (DependenciesPresenter.targetUsefullness.includes(e2.usefullness)) {
                                DependenciesPresenter.dependenciesArray.push(e2);
                            }
                        }
                    });
                }
            });
            DependenciesPresenter.dependenciesArrayLength = DependenciesPresenter.dependenciesArray.length;
            DependenciesPresenter.currentIndex = 0;
            DependenciesPresenter.nextDependency();
        });
    }
    static highlightVariables(variables) {
        variables.forEach(v => {
            let obj = DependenciesPresenter.variableToIndexes[v];
            if (obj.length == 2) {
                let lineend1 = DependenciesPresenter.points[obj[0]].object;
                let lineend2 = DependenciesPresenter.points[obj[1]].object;
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[lineend1.x, lineend1.y], [lineend2.x, lineend2.y]], false, DependenciesPresenter.getRandomColors(1)[0], null);
            }
            else { // obj.length == 4
                let angleend1 = DependenciesPresenter.points[obj[0]].object;
                let anglevertex = DependenciesPresenter.points[obj[1]].object;
                let angleend2 = DependenciesPresenter.points[obj[2]].object;
                let angleisConvex = (obj[3] == 0);
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightAngle([angleend1.x, angleend1.y], [anglevertex.x, anglevertex.y], [angleend2.x, angleend2.y], angleisConvex, DependenciesPresenter.getRandomColors(1)[0], [1, 2]);
            }
        });
    }
    static nextDependency() {
        if (DependenciesPresenter.dependenciesArray.length == 0) {
            DependenciesPresenter.dependencyTitle$.next("");
            DependenciesPresenter.dependencyDescription$.next("");
            DependenciesPresenter.dependencyReason$.next("");
        }
        else {
            let dependency = DependenciesPresenter.dependenciesArray[DependenciesPresenter.currentIndex];
            let line1end1, line1end2, line2end1, line2end2, line3end1, line3end2;
            let angle1end1, angle1vertex, angle1end2, angle1isConvex;
            let angle2end1, angle2vertex, angle2end2, angle2isConvex;
            let polygon1, polygon2, circle1, circle2;
            let colors;
            if (dependency != null) {
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearHighlightedShapes();
                DependenciesPresenter.dependencyTitle$.next(DependencyTypeEnum[dependency.type]);
                DependenciesPresenter.dependencyReason$.next('because ' + DependencyReasonEnum[dependency.reason]);
                switch (dependency.category) {
                    case DependencyCategoryEnum.FORMULA:
                        switch (dependency.type) {
                            case DependencyTypeEnum.SEGMENT_LENGTH:
                                dependency = dependency;
                                DependenciesPresenter.highlightVariables(dependency.object1.variables);
                                DependenciesPresenter.highlightVariables(dependency.object2.variables);
                                DependenciesPresenter.dependencyDescription$.next(dependency.object1.value + " = " + dependency.object2.value);
                                break;
                            case DependencyTypeEnum.ANGLE_VALUE:
                                dependency = dependency;
                                DependenciesPresenter.highlightVariables(dependency.object1.variables);
                                DependenciesPresenter.highlightVariables(dependency.object2.variables);
                                DependenciesPresenter.dependencyDescription$.next(dependency.object1.value + " = " + dependency.object2.value);
                                break;
                            case DependencyTypeEnum.EQUATION:
                                dependency = dependency;
                                DependenciesPresenter.highlightVariables(dependency.object1.variables);
                                DependenciesPresenter.highlightVariables(dependency.object2.variables);
                                DependenciesPresenter.dependencyDescription$.next(dependency.object1.value + " = " + dependency.object2.value);
                                break;
                            default:
                                alert("NIEUWZGLEDNIONA MOZLIWOSC!");
                                break;
                        }
                        break;
                    case DependencyCategoryEnum.POLYGON_TYPE:
                        dependency = dependency;
                        polygon1 = dependency.object2.verticesIds.map((id) => [DependenciesPresenter.points[id].object.x, DependenciesPresenter.points[id].object.y]);
                        colors = DependenciesPresenter.getRandomColors(1);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine(polygon1, true, colors[0], null);
                        DependenciesPresenter.dependencyDescription$.next(createPolygonName(dependency.object2.verticesIds) + ' is ' + PolygonTypeEnum[dependency.object1.id]);
                        break;
                    case DependencyCategoryEnum.OF_POINTS_PAIRS:
                        dependency = dependency;
                        line1end1 = DependenciesPresenter.points[dependency.object1.end1Id].object;
                        line1end2 = DependenciesPresenter.points[dependency.object1.end2Id].object;
                        line2end1 = DependenciesPresenter.points[dependency.object2.end1Id].object;
                        line2end2 = DependenciesPresenter.points[dependency.object2.end2Id].object;
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line1end1.x, line1end1.y], [line1end2.x, line1end2.y]], false, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line2end1.x, line2end1.y], [line2end2.x, line2end2.y]], false, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createSegmentName(dependency.object1.end1Id, dependency.object1.end2Id) + ' and ' + createSegmentName(dependency.object2.end1Id, dependency.object2.end2Id));
                        break;
                    case DependencyCategoryEnum.OF_LINES:
                        dependency = dependency;
                        line1end1 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end1ID].object;
                        line1end2 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end2ID].object;
                        line2end1 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object2.id].object.end1ID].object;
                        line2end2 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object2.id].object.end2ID].object;
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line1end1.x, line1end1.y], [line1end2.x, line1end2.y]], false, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line2end1.x, line2end1.y], [line2end2.x, line2end2.y]], false, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createLineName(dependency.object1.id) + ' and ' + createLineName(dependency.object2.id));
                        break;
                    case DependencyCategoryEnum.OF_CIRCLES:
                        dependency = dependency;
                        circle1 = DependenciesPresenter.circles[dependency.object1.id].object;
                        circle2 = DependenciesPresenter.circles[dependency.object2.id].object;
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightCircle(circle1.centerX, circle1.centerY, circle1.radius, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightCircle(circle2.centerX, circle2.centerY, circle2.radius, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createCircleName(dependency.object1.id) + ' and ' + createCircleName(dependency.object2.id));
                        break;
                    case DependencyCategoryEnum.OF_ANGLES:
                        dependency = dependency;
                        angle1end1 = DependenciesPresenter.points[dependency.object1.point1Id].object;
                        angle1vertex = DependenciesPresenter.points[dependency.object1.vertexId].object;
                        angle1end2 = DependenciesPresenter.points[dependency.object1.point2Id].object;
                        angle1isConvex = (dependency.object1.type == AngleTypeEnum.CONVEX);
                        angle2end1 = DependenciesPresenter.points[dependency.object2.point1Id].object;
                        angle2vertex = DependenciesPresenter.points[dependency.object2.vertexId].object;
                        angle2end2 = DependenciesPresenter.points[dependency.object2.point2Id].object;
                        angle2isConvex = (dependency.object2.type == AngleTypeEnum.CONVEX);
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightAngle([angle1end1.x, angle1end1.y], [angle1vertex.x, angle1vertex.y], [angle1end2.x, angle1end2.y], angle1isConvex, colors[0], [1, 2]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightAngle([angle2end1.x, angle2end1.y], [angle2vertex.x, angle2vertex.y], [angle2end2.x, angle2end2.y], angle2isConvex, colors[1], [2, 3]);
                        DependenciesPresenter.dependencyDescription$.next(createAngleName(dependency.object1.point1Id, dependency.object1.vertexId, dependency.object1.point2Id, dependency.object1.type) + ' and ' + createAngleName(dependency.object2.point1Id, dependency.object2.vertexId, dependency.object2.point2Id, dependency.object2.type));
                        break;
                    case DependencyCategoryEnum.OF_LINE_AND_ANGLE:
                        dependency = dependency;
                        line1end1 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end1ID].object;
                        line1end2 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end2ID].object;
                        angle2end1 = DependenciesPresenter.points[dependency.object2.point1Id].object;
                        angle2vertex = DependenciesPresenter.points[dependency.object2.vertexId].object;
                        angle2end2 = DependenciesPresenter.points[dependency.object2.point2Id].object;
                        angle2isConvex = (dependency.object2.type == AngleTypeEnum.CONVEX);
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line1end1.x, line1end1.y], [line1end2.x, line1end2.y]], false, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightAngle([angle2end1.x, angle2end1.y], [angle2vertex.x, angle2vertex.y], [angle2end2.x, angle2end2.y], angle2isConvex, colors[1], [2, 3]);
                        DependenciesPresenter.dependencyDescription$.next(createLineName(dependency.object1.id) + ' and ' + createAngleName(dependency.object2.point1Id, dependency.object2.vertexId, dependency.object2.point2Id, dependency.object2.type));
                        break;
                    case DependencyCategoryEnum.OF_LINE_AND_CIRCLE:
                        dependency = dependency;
                        line1end1 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end1ID].object;
                        line1end2 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end2ID].object;
                        circle2 = DependenciesPresenter.circles[dependency.object2.id].object;
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line1end1.x, line1end1.y], [line1end2.x, line1end2.y]], false, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightCircle(circle2.centerX, circle2.centerY, circle2.radius, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createLineName(dependency.object1.id) + ' and ' + createCircleName(dependency.object2.id));
                        break;
                    case DependencyCategoryEnum.OF_LINE_AND_POINTS_PAIR:
                        dependency = dependency;
                        line1end1 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end1ID].object;
                        line1end2 = DependenciesPresenter.points[DependenciesPresenter.lines[dependency.object1.id].object.end2ID].object;
                        line2end1 = DependenciesPresenter.points[dependency.object2.end1Id].object;
                        line2end2 = DependenciesPresenter.points[dependency.object2.end2Id].object;
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line1end1.x, line1end1.y], [line1end2.x, line1end2.y]], false, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line2end1.x, line2end1.y], [line2end2.x, line2end2.y]], false, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createLineName(dependency.object1.id) + ' and ' + createSegmentName(dependency.object2.end1Id, dependency.object2.end2Id));
                        break;
                    case DependencyCategoryEnum.OF_CIRCLE_AND_POLYGON:
                        dependency = dependency;
                        circle1 = DependenciesPresenter.circles[dependency.object1.id].object;
                        polygon2 = dependency.object2.verticesIds.map((id) => [DependenciesPresenter.points[id].object.x, DependenciesPresenter.points[id].object.y]);
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightCircle(circle1.centerX, circle1.centerY, circle1.radius, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine(polygon2, true, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createCircleName(dependency.object1.id) + ' and ' + createPolygonName(dependency.object2.verticesIds));
                        break;
                    case DependencyCategoryEnum.OF_POINTS_PAIRS_PAIR_AND_POINTS_PAIR:
                        dependency = dependency;
                        line1end1 = DependenciesPresenter.points[dependency.object1.first.end1Id].object;
                        line1end2 = DependenciesPresenter.points[dependency.object1.first.end2Id].object;
                        line2end1 = DependenciesPresenter.points[dependency.object1.second.end1Id].object;
                        line2end2 = DependenciesPresenter.points[dependency.object1.second.end2Id].object;
                        line3end1 = DependenciesPresenter.points[dependency.object2.end1Id].object;
                        line3end2 = DependenciesPresenter.points[dependency.object2.end2Id].object;
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line1end1.x, line1end1.y], [line1end2.x, line1end2.y]], false, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line2end1.x, line2end1.y], [line2end2.x, line2end2.y]], false, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine([[line3end1.x, line3end1.y], [line3end2.x, line3end2.y]], false, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createSegmentName(dependency.object1.first.end1Id, dependency.object1.first.end2Id) + ' with ' + createSegmentName(dependency.object1.second.end1Id, dependency.object1.second.end2Id) + ' and ' + createSegmentName(dependency.object2.end1Id, dependency.object2.end2Id));
                        break;
                    case DependencyCategoryEnum.OF_POLYGONS:
                        dependency = dependency;
                        polygon1 = dependency.object1.verticesIds.map((id) => [DependenciesPresenter.points[id].object.x, DependenciesPresenter.points[id].object.y]);
                        polygon2 = dependency.object2.verticesIds.map((id) => [DependenciesPresenter.points[id].object.x, DependenciesPresenter.points[id].object.y]);
                        colors = DependenciesPresenter.getRandomColors(2);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine(polygon1, true, colors[0], null);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.highlightPolyLine(polygon2, true, colors[1], null);
                        DependenciesPresenter.dependencyDescription$.next(createPolygonName(dependency.object1.verticesIds) + ' and ' + createPolygonName(dependency.object2.verticesIds));
                        break;
                    default:
                        alert("NIEUWZGLEDNIONA MOZLIWOSC!!!");
                        break;
                }
            }
            DependenciesPresenter.currentIndex = (DependenciesPresenter.currentIndex + 1) % DependenciesPresenter.dependenciesArrayLength;
        }
    }
    static cancelPresenting() {
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearHighlightedShapes();
        DependenciesPresenter.displayDependenciesPresenter$.next(false);
        _shapes_creator_shapes_creator_component__WEBPACK_IMPORTED_MODULE_1__.ShapesCreatorComponent.displayShapesCreator$.next(true);
    }
}
DependenciesPresenter.displayDependenciesPresenter$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(false);
DependenciesPresenter.dependencyTitle$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject("");
DependenciesPresenter.dependencyDescription$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject("");
DependenciesPresenter.dependencyReason$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject("");
DependenciesPresenter.dependencyTypes = Object.keys(DependencyTypeEnum).filter((v) => isNaN(Number(v)));
DependenciesPresenter.selectedTypes$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(DependenciesPresenter.dependencyTypes);


/***/ }),

/***/ 7743:
/*!****************************************************************************!*\
  !*** ./src/app/dashboard/dependencies-presenter/display_processed_data.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "display_processed_data": () => (/* binding */ display_processed_data)
/* harmony export */ });
/* harmony import */ var _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependencies-presenter */ 347);
/**
 * Module contains a function to display raw data from compute-service as a basic HTML page.
 *
 * @module Display Processed Data
 */

/**
 * Creating HTML page with raw data from compute-service
 * @param data information from compute-service
 * @param pointNames array representing names of points: pointNames[i] is name of point with "i" ID
 * @returns HTML code representing created page
 */
function display_processed_data(data, pointNames) {
    let newPointNames = {};
    let points_html_string = "";
    if (data['points'] != null) {
        for (var point of data['points']) {
            newPointNames[point['ID']] = point.object['id'];
            points_html_string += `
                <h4>ID ${point['ID']} = ${pointNames[point.object['id']]}:</h4> 
                <p>id = ${point.object['id']}</p>
                <p>(${point.object['x']}, ${point.object['y']})</p><br>`;
        }
    }
    let lines_html_string = "";
    if (data['lines'] != null) {
        for (var line of data['lines']) {
            lines_html_string += `
                <h4>ID ${line['ID']} = ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createLineName)(line.object['id'])}:</h4>
                <p>id = ${line.object['id']}</p>`;
            if (line.object['type'] == _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.LineTypeEnum.VERTICAL) {
                lines_html_string += `<p>x = ${line.object['b']}</p>`;
            }
            else if (line.object['type'] == _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.LineTypeEnum.HORIZONTAL) {
                lines_html_string += `<p>y = ${line.object['b']}</p>`;
            }
            else if (line.object['type'] == _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.LineTypeEnum.SLANTED) {
                lines_html_string += `<p>y = ${line.object['a']}x + ${line.object['b']}</p>`;
            }
            lines_html_string += `<p>included points = {${line.object['pointsOn'].map((id) => pointNames[newPointNames[id]])}}</p><br>`;
        }
    }
    let circles_html_string = "";
    if (data['circles'] != null) {
        for (var circle of data['circles']) {
            circles_html_string += `
                <h4>ID = ${circle['ID']}:</h4> 
                <p>id = ${circle.object['id']}</p>
                <p>center id = ${circle.object['centerId']}(${pointNames[newPointNames[circle.object['centerId']]]})<p>
                <p>equation (x - ${circle.object['centerX']})^2 + (y - ${circle.object['centerY']})^2 = ${circle.object['radius']}^2
                </p> <p>included points = {${circle.object['pointsOn'].map((id) => pointNames[newPointNames[id]])}}</p><br>
                `;
        }
    }
    let basic_info = '<h2>P O I N T S</h2>' + points_html_string +
        '<br> <h2>L I N E S</h2>' + lines_html_string +
        '<br> <h2>C I R C L E S</h2>' + circles_html_string;
    let extended_info = `<h2>I N T E R S E C T I O N S<h2>`;
    let intersection_points = data['intersections'];
    let line_line = intersection_points['line_line'];
    let circle_cirlce = intersection_points['circle_circle'];
    let line_circle = intersection_points['line_circle'];
    let linesNumber = line_line.length;
    let circlesNumber = circle_cirlce.length;
    extended_info += '<h3>O F _ L I N E _ A N D _ L I N E</h3> <table class = "ip"><tr class = "ipe"> <th class = "ipe"></th>';
    for (let i = 0; i < linesNumber; i++) {
        extended_info += `<th class = "ipe">${i}</th>`;
    }
    extended_info += '</tr>';
    for (let i = 0; i < linesNumber; i++) {
        extended_info += '<tr class = "ipe">';
        extended_info += `<th class = "ipe">${i}</th>`;
        for (let j = 0; j < line_line[i].length; j++) {
            extended_info += `<th class = "ipe">${line_line[i][j].map((id) => pointNames[newPointNames[id]])}</th>`;
        }
        extended_info += '</tr>';
    }
    extended_info += '</table> <br>';
    extended_info += '<h3>O F _ C I R C L E _ A N D _ C I R C L E</h3> <table class = "ip"><tr class = "ipe"> <th class = "ipe"></th>';
    for (let i = 0; i < circlesNumber; i++) {
        extended_info += `<th class = "ipe">${i}</th>`;
    }
    extended_info += '</tr>';
    for (let i = 0; i < circlesNumber; i++) {
        extended_info += '<tr class = "ipe">';
        extended_info += `<th class = "ipe">${i}</th>`;
        for (let j = 0; j < circlesNumber; j++) {
            extended_info += `<th class = "ipe">${circle_cirlce[i][j].map((id) => pointNames[newPointNames[id]])}</th>`;
        }
        extended_info += '</tr>';
    }
    extended_info += '</table> <br>';
    extended_info += '<h3>O F _ L I N E _ A N D _ C I R C L E</h3> <table class = "ip"><tr class = "ipe"> <th class = "ipe"></th>';
    for (let i = 0; i < linesNumber; i++) {
        extended_info += `<th class = "ipe">${i}</th>`;
    }
    extended_info += '</tr>';
    for (let i = 0; i < circlesNumber; i++) {
        extended_info += '<tr class = "ipe">';
        extended_info += `<th class = "ipe">${i}</th>`;
        for (let j = 0; j < linesNumber; j++) {
            extended_info += `<th class = "ipe">${line_circle[j][i].map((id) => pointNames[newPointNames[id]])}</th>`;
        }
        extended_info += '</tr>';
    }
    extended_info += '</table> <br>';
    extended_info += '<h2>S H A P E S _ O N _ W H I C H _ L I E S _ I N T E R S E C T I O N _ P O I N T S</h2>';
    let points_on_line_line = intersection_points['points_on_line_line'];
    let points_on_circle_circle = intersection_points['points_on_circle_circle'];
    let points_on_line_circle = intersection_points['points_on_line_circle'];
    let k = points_on_line_line.length;
    extended_info += '<table class = "ip"><tr class = "ipe"> <th class = "ipe"></th>';
    extended_info += '<th class = "ipe">line - line</th><th class = "ipe">circle - circle</th><th class = "ipe">line - circle</th></tr>';
    for (let i = 0; i < k; i++) {
        extended_info += `<th class = "ipe">${i}(${pointNames[newPointNames[i]]})</th>
                          <th class = "ipe">${points_on_line_line[i].map((pair) => "<" + pair + ">")}</th>
                          <th class = "ipe">${points_on_circle_circle[i].map((pair) => "<" + pair + ">")}</th>
                          <th class = "ipe">${points_on_line_circle[i].map((pair) => "<" + pair + ">")}</th></tr>`;
    }
    extended_info += '</table> <br>';
    extended_info += '<h2>D E P E N D E N C I E S</h2>';
    for (var group of data['dependencies']) {
        if (group['dependencies'] == null) {
            continue;
        }
        extended_info += `<h3>${_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyTypeEnum[group.type]}</h3>`;
        for (var dependency of group.dependencies) {
            extended_info += `<p>dependency ID = ${dependency.id}: `;
            switch (dependency.category) {
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.FORMULA:
                    switch (dependency.type) {
                        case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyTypeEnum.SEGMENT_LENGTH:
                            dependency = dependency;
                            //extended_info += `${createSegmentName(dependency.object1.end1Id, dependency.object1.end2Id)} and ${dependency.object2.variableName} = ${dependency.object2.value}`
                            extended_info += `${dependency.object1.value} = ${dependency.object2.value}`;
                            break;
                        case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyTypeEnum.ANGLE_VALUE:
                            dependency = dependency;
                            //extended_info += `${createAngleName(dependency.object1.point1Id, dependency.object1.vertexId, dependency.object1.point2Id, dependency.object1.type)} and ${dependency.object2.variableName} = ${dependency.object2.value}`
                            extended_info += `${dependency.object1.value.replace("<", "&lt")} = ${dependency.object2.value.replace("<", "&lt")}`;
                            break;
                        case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyTypeEnum.EQUATION:
                            dependency = dependency;
                            extended_info += `${dependency.object1.value.replace("<", "&lt")} = ${dependency.object2.value.replace("<", "&lt")}`;
                            break;
                        default:
                            alert("NIEUWZGLEDNIONA MOZLIWOSC!");
                            break;
                    }
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.POLYGON_TYPE:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createPolygonName)(dependency.object2.verticesIds)} is ${_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.PolygonTypeEnum[dependency.object1.id]}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_POINTS_PAIRS:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createSegmentName)(dependency.object1.end1Id, dependency.object1.end2Id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createSegmentName)(dependency.object2.end1Id, dependency.object2.end2Id)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_LINES:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createLineName)(dependency.object1.id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createLineName)(dependency.object2.id)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_CIRCLES:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createCircleName)(dependency.object1.id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createCircleName)(dependency.object2.id)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_ANGLES:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createAngleName)(dependency.object1.point1Id, dependency.object1.vertexId, dependency.object1.point2Id, dependency.object1.type)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createAngleName)(dependency.object2.point1Id, dependency.object2.vertexId, dependency.object2.point2Id, dependency.object2.type)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_LINE_AND_ANGLE:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createLineName)(dependency.object1.id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createAngleName)(dependency.object2.point1Id, dependency.object2.vertexId, dependency.object2.point2Id, dependency.object2.type)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_LINE_AND_CIRCLE:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createLineName)(dependency.object1.id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createCircleName)(dependency.object2.id)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_LINE_AND_POINTS_PAIR:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createLineName)(dependency.object1.id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createSegmentName)(dependency.object2.end1Id, dependency.object2.end2Id)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_CIRCLE_AND_POLYGON:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createCircleName)(dependency.object1.id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createPolygonName)(dependency.object2.verticesIds)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_POINTS_PAIRS_PAIR_AND_POINTS_PAIR:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createSegmentName)(dependency.object1.first.end1Id, dependency.object1.first.end2Id)} with ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createSegmentName)(dependency.object1.second.end1Id, dependency.object1.second.end2Id)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createSegmentName)(dependency.object2.end1Id, dependency.object2.end2Id)}`;
                    break;
                case _dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyCategoryEnum.OF_POLYGONS:
                    dependency = dependency;
                    extended_info += `${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createPolygonName)(dependency.object1.verticesIds)} and ${(0,_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.createPolygonName)(dependency.object2.verticesIds)}`;
                    break;
                default:
                    alert("NIEUWZGLEDNIONA MOZLIWOSC!!!");
                    break;
            }
            extended_info += `, because ${_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.DependencyReasonEnum[dependency.reason]} and based on {${dependency.basedOn}}; usefullness = ${_dependencies_presenter__WEBPACK_IMPORTED_MODULE_0__.UsefullnessLevel[dependency.usefullness]}</p>`;
        }
        extended_info += `<br>`;
    }
    let result_html = `
        <html>
        <head>
            <style>
                table { width: 100%; }
                th { text-align: left; font-weight: normal;}
                tr { vertical-align: top; font-weight: normal; }

                .ip { width:100% table-layout:fixed; overflow: hidden; border: 1px solid black; border-collapse: collapse;}
                .ipe { border: 1px solid black; border-collapse: collapse; text-align: center;}

            </style>
        </head>
        <body>
            <table>
                <tr>
                    <th>` + basic_info + `</th>
                    <th>` + extended_info + `</th>
                </tr>
            </table>
        </body>
        </html>
    `;
    return result_html;
}


/***/ }),

/***/ 6280:
/*!************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/altitude.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AltitudeComponent": () => (/* binding */ AltitudeComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);




class AltitudeComponent {
    /** Empty function */
    constructor() { }
    /**
     * Function used in altitude.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segment or segment ends.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Altitude", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
            let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            if (ids[0].length == 2) {
                let ends = ids[0];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createAltitudeWithBaseEnds(ends[0], ends[1], ids[1][0]);
            }
            else {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createAltitudeWithBaseId(ids[0][0], ids[1][0]);
            }
        });
    }
}
AltitudeComponent.ɵfac = function AltitudeComponent_Factory(t) { return new (t || AltitudeComponent)(); };
AltitudeComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: AltitudeComponent, selectors: [["app-altitude"]], decls: 1, vars: 0, consts: [["type", "image", "src", "/static/imgs/AltitudeIcon.svg", "alt", "Altitude Creating", 1, "icon-button", 3, "click"]], template: function AltitudeComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function AltitudeComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 699:
/*!************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/bisector.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BisectorComponent": () => (/* binding */ BisectorComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





const _c0 = ["modalData"];
function BisectorComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function BisectorComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Bisector Of Convex Angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function BisectorComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Bisector Of Concave Angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class BisectorComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in bisector.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select 3 points.
     */
    onClick() {
        //let pointTypes = [ShapeToSelect.EXISTING_POINT, ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS, ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT, ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE]
        let pointTypes = [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.EXISTING_POINT];
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.chooseShapes("Creatig Bisector Line", [pointTypes, pointTypes, pointTypes], () => {
            this.points = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.getChosenShapes();
            this.triggerModal(this.content);
        });
    }
    /**
     * Function called after selecting given shapes.
     * Question about the type of bisector created: bisector of a convex angle or bisector of a concave angle.
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.getChosenShapes();
            if (res == "dec1") {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.createBisectorLine(ids[0][0], ids[1][0], ids[2][0], true);
            }
            else if (res == "dec2") {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.createBisectorLine(ids[0][0], ids[1][0], ids[2][0], false);
            }
        });
    }
}
BisectorComponent.ɵfac = function BisectorComponent_Factory(t) { return new (t || BisectorComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
BisectorComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: BisectorComponent, selectors: [["app-bisector"]], viewQuery: function BisectorComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    } }, decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/BisectorIcon.svg", "alt", "Bisector Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function BisectorComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function BisectorComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, BisectorComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 2520:
/*!**********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/circle.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CircleComponent": () => (/* binding */ CircleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 4364);




const _c0 = function (a0) { return { "icon-button-clicked": a0 }; };
class CircleComponent {
    /** Empty function */
    constructor() {
        /**
         * Variable used to save state of this button.
         * @ignore */
        this.toggle = false;
    }
    /**
     * Function called after clicked on this component(button).
     * Enable or disable drawing circles on {@link Canvas}.
     */
    onClick() {
        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.CIRCLE);
            this.toggle = !this.toggle;
        }
        else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.CIRCLE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearBatchLayer();
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
            this.toggle = !this.toggle;
        }
    }
}
CircleComponent.ɵfac = function CircleComponent_Factory(t) { return new (t || CircleComponent)(); };
CircleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: CircleComponent, selectors: [["app-circle"]], decls: 1, vars: 3, consts: [["type", "image", "src", "/static/imgs/CircleIcon.svg", "alt", "Circle Creating", 1, "icon-button", 3, "ngClass", "click"]], template: function CircleComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function CircleComponent_Template_input_click_0_listener() { return ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction1"](1, _c0, ctx.toggle));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgClass], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 9083:
/*!**************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/circumscribed-circle.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CircumscribedCircleComponent": () => (/* binding */ CircumscribedCircleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 1707);






function CircumscribedCircleComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Number Of Polygon Vertices");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function CircumscribedCircleComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r3.vertices = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "button", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function CircumscribedCircleComponent_ng_template_1_Template_button_click_5_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, "Create Circumscribed Circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.vertices);
} }
class CircumscribedCircleComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
        /**
         * Variable used to get information from modal.
         * @ignore */
        this.vertices = "";
    }
    /**
     * Function used in inscribed-circle.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Question about number of polygon vertices in which we inscribe a circle
     * Start function {@link ComplexShapeCreator.chooseShapes} to select N points.
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                let n = parseInt(this.vertices);
                if (n > 2) {
                    let shapesToSelect = [];
                    for (let i = 0; i < n; i++) {
                        shapesToSelect.push([_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]);
                    }
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Circumscribed Circle on Polygon", shapesToSelect, () => {
                        let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createCircumscribedCircle(ids.map((element) => { return element[0]; }));
                    });
                }
            }
        });
    }
}
CircumscribedCircleComponent.ɵfac = function CircumscribedCircleComponent_Factory(t) { return new (t || CircumscribedCircleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
CircumscribedCircleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: CircumscribedCircleComponent, selectors: [["app-circumscribed-circle"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/CircumscribedCircleIcon.svg", "alt", "Circumscribed Circle Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "number", "id", "vertices-number", "placeholder", "Enter Vertices Number", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function CircumscribedCircleComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function CircumscribedCircleComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, CircumscribedCircleComponent_ng_template_1_Template, 7, 1, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgModel], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 9726:
/*!****************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/clear-canvas.component.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClearCanvasComponent": () => (/* binding */ ClearCanvasComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);




function ClearCanvasComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1, "Are You Sure To Remove All?");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function ClearCanvasComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](5, "Yes. Remove All");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](6, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function ClearCanvasComponent_ng_template_1_Template_button_click_6_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](7, "No");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} }
class ClearCanvasComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in clear-canvas.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Requesting confirmation to remove everything from {@link Canvas}
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.reinit();
            }
            else if (res == "dec2") { }
        });
    }
}
ClearCanvasComponent.ɵfac = function ClearCanvasComponent_Factory(t) { return new (t || ClearCanvasComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbModal)); };
ClearCanvasComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: ClearCanvasComponent, selectors: [["app-clear-canvas"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/DeleteIcon.svg", "alt", "Clear Canvas", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function ClearCanvasComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function ClearCanvasComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](1, ClearCanvasComponent_ng_template_1_Template, 8, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 3296:
/*!****************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/divide-angle.component.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DivideAngleComponent": () => (/* binding */ DivideAngleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 1707);






const _c0 = ["modalData"];
function DivideAngleComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Number Of Parts");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function DivideAngleComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r3.n = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "input", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function DivideAngleComponent_ng_template_1_Template_input_ngModelChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r5.angleType = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "label", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](8, "Convex Angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](9, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](10, "input", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function DivideAngleComponent_ng_template_1_Template_input_ngModelChange_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r6.angleType = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](11, "label", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](12, "Concave Angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](13, "button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function DivideAngleComponent_ng_template_1_Template_button_click_13_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](14, "Divide Angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.n);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.angleType);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.angleType);
} }
class DivideAngleComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
        /**
         * Variable used in divide-angle.component template.
         * @ignore */
        this.n = "";
        this.angleType = "option1";
    }
    /**
     * Function used in divide-angle.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select angle points.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Dividing Angle", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
            this.triggerModal(this.modalData);
        });
    }
    /**
      * Function called after selecting given shapes.
      * Question about the number of parts to create.
      * @param content element with a question to display
      */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                let N = parseInt(this.n);
                if (N > 1) {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.divideAngle(ids[0][0], ids[1][0], ids[2][0], this.angleType == "option1", N);
                }
            }
        });
    }
}
DivideAngleComponent.ɵfac = function DivideAngleComponent_Factory(t) { return new (t || DivideAngleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
DivideAngleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: DivideAngleComponent, selectors: [["app-divide-angle"]], viewQuery: function DivideAngleComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.modalData = _t.first);
    } }, decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/DivideAngleIcon.svg", "alt", "Divide Angle", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "number", "id", "parts-number", "placeholder", "Enter Parts Number", 1, "form-control", 3, "ngModel", "ngModelChange"], [1, "form-check", "form-check-inline"], ["type", "radio", "id", "angleType1", "value", "option1", "name", "angleType", "checked", "", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "inlineCheckbox1", 1, "form-check-label"], ["type", "radio", "id", "angleType2", "value", "option2", "name", "angleType", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "inlineCheckbox2", 1, "form-check-label"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function DivideAngleComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function DivideAngleComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, DivideAngleComponent_ng_template_1_Template, 15, 3, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgModel, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.RadioControlValueAccessor], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 6882:
/*!******************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/divide-segment.component.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DivideSegmentComponent": () => (/* binding */ DivideSegmentComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 1707);






const _c0 = ["modalData"];
function DivideSegmentComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Number Of Parts");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function DivideSegmentComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r3.n = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "button", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function DivideSegmentComponent_ng_template_1_Template_button_click_5_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, "Divide Segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.n);
} }
class DivideSegmentComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
        /**
         * Variable used in divide-segment.component template.
         * @ignore */
        this.n = "";
    }
    /**
     * Function used in divide-segment.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segment or segment ends.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Dividing Segment", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
            this.triggerModal(this.modalData);
        });
    }
    /**
      * Function called after selecting given shapes.
      * Question about the number of parts to create.
      * @param content element with a question to display
      */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                let N = parseInt(this.n);
                if (N > 1) {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    if (ids[0].length == 2) {
                        let ends = ids[0];
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.divideSegmentWithEnds(ends[0], ends[1], N);
                    }
                    else {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.divideSegmentWithId(ids[0][0], N);
                    }
                }
            }
        });
    }
}
DivideSegmentComponent.ɵfac = function DivideSegmentComponent_Factory(t) { return new (t || DivideSegmentComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
DivideSegmentComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: DivideSegmentComponent, selectors: [["app-divide-segment"]], viewQuery: function DivideSegmentComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.modalData = _t.first);
    } }, decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/DivideSegmentIcon.svg", "alt", "Divide Segment", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "number", "id", "parts-number", "placeholder", "Enter Parts Number", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function DivideSegmentComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function DivideSegmentComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, DivideSegmentComponent_ng_template_1_Template, 7, 1, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgModel], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 4597:
/*!******************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/equal-angles.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EqualAnglesComponent": () => (/* binding */ EqualAnglesComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);




class EqualAnglesComponent {
    /** Empty function */
    constructor() { }
    /**
     * Function used in equal-angles.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select angle points.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choose First Angle", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
            let angle1 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choose Second Angle", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
                let angle2 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEqualAnglesDependency(angle1[0][0], angle1[1][0], angle1[2][0], angle2[0][0], angle2[1][0], angle2[2][0]);
            });
        });
    }
}
EqualAnglesComponent.ɵfac = function EqualAnglesComponent_Factory(t) { return new (t || EqualAnglesComponent)(); };
EqualAnglesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: EqualAnglesComponent, selectors: [["app-equal-angles"]], decls: 1, vars: 0, consts: [["type", "image", "src", "/static/imgs/EqualAnglesIcon.svg", "alt", "Equal Angles", 1, "icon-button", 3, "click"]], template: function EqualAnglesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function EqualAnglesComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 3393:
/*!********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/equal-segments.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EqualSegmentsComponent": () => (/* binding */ EqualSegmentsComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);




class EqualSegmentsComponent {
    /** Empty function */
    constructor() { }
    /**
     * Function used in equal-segments.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segments ends.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Setting Equal Segments", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT]], () => {
            let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            if (ids[0].length == 2 && ids[1].length == 2) {
                let ends1 = ids[0];
                let ends2 = ids[1];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEqualSegmentsDependencyWithEnds(ends1[0], ends1[1], ends2[0], ends2[1]);
            }
            else if (ids[0].length == 2) {
                let ends = ids[0];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEqualSegmentsDependencyWithMix(ids[1][0], ends[0], ends[1]);
            }
            else if (ids[1].length == 2) {
                let ends = ids[1];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEqualSegmentsDependencyWithMix(ids[0][0], ends[0], ends[1]);
            }
            else {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEqualSegmentsDependnecyWithIds(ids[0][0], ids[1][0]);
            }
        });
    }
}
EqualSegmentsComponent.ɵfac = function EqualSegmentsComponent_Factory(t) { return new (t || EqualSegmentsComponent)(); };
EqualSegmentsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: EqualSegmentsComponent, selectors: [["app-equal-segments"]], decls: 1, vars: 0, consts: [["type", "image", "src", "/static/imgs/EqualLengthsIcon.svg", "alt", "Equal Segments", 1, "icon-button", 3, "click"]], template: function EqualSegmentsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function EqualSegmentsComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 2549:
/*!*******************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/escribed-circle.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EscribedCircleComponent": () => (/* binding */ EscribedCircleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);




class EscribedCircleComponent {
    /** Empty function */
    constructor() { }
    /**
     * Function used in escribed-circle.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segment or segment ends.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Escribed Circle", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
            let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            if (ids[0].length == 2) {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createEscribedCircleWithSideEnds(ids[0][0], ids[0][1], ids[1][0]);
            }
            else {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createEscribedCircleWithSideId(ids[0][0], ids[1][0]);
            }
        });
    }
}
EscribedCircleComponent.ɵfac = function EscribedCircleComponent_Factory(t) { return new (t || EscribedCircleComponent)(); };
EscribedCircleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: EscribedCircleComponent, selectors: [["app-escribed-circle"]], decls: 1, vars: 0, consts: [["type", "image", "src", "/static/imgs/EscribedCircleIcon.svg", "alt", "Escribed Circle Creating", 1, "icon-button", 3, "click"]], template: function EscribedCircleComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function EscribedCircleComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 8512:
/*!********************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/inscribed-circle.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InscribedCircleComponent": () => (/* binding */ InscribedCircleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 1707);






function InscribedCircleComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Number Of Polygon Vertices");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function InscribedCircleComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r3.vertices = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "button", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function InscribedCircleComponent_ng_template_1_Template_button_click_5_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, "Create Inscribed Circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.vertices);
} }
class InscribedCircleComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
        /**
         * Variable used to get information from modal.
         * @ignore */
        this.vertices = "";
    }
    /**
     * Function used in inscribed-circle.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Question about number of polygon vertices in which we inscribe a circle
     * Start function {@link ComplexShapeCreator.chooseShapes} to select N points.
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                let n = parseInt(this.vertices);
                if (n > 2) {
                    let shapesToSelect = [];
                    for (let i = 0; i < n; i++) {
                        shapesToSelect.push([_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]);
                    }
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Inscribed Circle on Polygon", shapesToSelect, () => {
                        let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createInscribedCircle(ids.map((element) => { return element[0]; }));
                    });
                }
            }
        });
    }
}
InscribedCircleComponent.ɵfac = function InscribedCircleComponent_Factory(t) { return new (t || InscribedCircleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
InscribedCircleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: InscribedCircleComponent, selectors: [["app-inscribed-circle"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/InscribedCircleIcon.svg", "alt", "Inscribed Circle Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "number", "id", "vertices-number", "placeholder", "Enter Vertices Number", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function InscribedCircleComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function InscribedCircleComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InscribedCircleComponent_ng_template_1_Template, 7, 1, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgModel], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 2799:
/*!********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/kite.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KiteComponent": () => (/* binding */ KiteComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





const _c0 = ["modalData2"];
function KiteComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function KiteComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Kite");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function KiteComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Kite");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function KiteComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function KiteComponent_ng_template_3_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec3"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Based On Segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function KiteComponent_ng_template_3_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec4"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Based On 3 Points");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class KiteComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in kite.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * or to ask for a type of base shape
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[0, -6.342], [-3.2, 0], [0, 4.342], [3.2, 0]], [], [], [1, 3], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ALL_BASIC], [[1, 3, 2, 0]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.KITE);
            }
            else if (res == "dec2") {
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec3") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Kite Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
                    let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    let fixedPointsIds = [];
                    let fixedSidePoints = [];
                    if (point_ids[0].length == 2) {
                        let ends = point_ids[0];
                        let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                        let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                        fixedPointsIds = ends;
                        fixedSidePoints = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
                    }
                    else {
                        let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                        fixedPointsIds = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getSegmentEnds(point_ids[0][0]);
                        fixedSidePoints = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
                    }
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[0, -6.342], [-3.2, 0], [0, 4.342], [3.2, 0]], fixedPointsIds, fixedSidePoints, [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.KITE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.KITE);
                });
            }
            else if (res == "dec4") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing Three Of Kite Vertices", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
                    let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    let p1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]);
                    p1 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.toUnit([p1.getAttr('x'), p1.getAttr('y')]);
                    let p2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[1][0]);
                    p2 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.toUnit([p2.getAttr('x'), p2.getAttr('y')]);
                    let p3 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[2][0]);
                    p3 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.toUnit([p3.getAttr('x'), p3.getAttr('y')]);
                    if (_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.angleIsObtuse(p1, p2, p3)) {
                        let p4;
                        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[0] - p3[0], 0, 0.1)) {
                            p4 = [2 * p1[0] - p2[0], p2[1]];
                        }
                        else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[1] - p3[1], 0, 0.1)) {
                            p4 = [p2[0], 2 * p1[1] - p2[1]];
                        }
                        else {
                            let a1 = (p3[1] - p1[1]) / (p3[0] - p1[0]);
                            let b1 = p3[1] - a1 * p3[0];
                            let a2 = (p3[0] - p1[0]) / (p1[1] - p3[1]);
                            let b2 = p2[1] - a2 * p2[0];
                            let midx = (b2 - b1) / (a1 - a2);
                            let midy = a1 * midx + b1;
                            p4 = [2 * midx - p2[0], 2 * midy - p2[1]];
                        }
                        let fixedPointsIds = [point_ids[0][0], point_ids[1][0], point_ids[2][0]];
                        let fixedSidePoints = [p1, p2, p3];
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([p1, p2, p3, p4], 
                        //[p2, p3, p4, p1],
                        [], [], 
                        //fixedPointsIds,
                        //fixedSidePoints,
                        [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.NONE], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.KITE);
                    }
                    else {
                        alert("Bad Input! Points should represent obtuse angle of kite!");
                    }
                });
            }
        });
    }
}
KiteComponent.ɵfac = function KiteComponent_Factory(t) { return new (t || KiteComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
KiteComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: KiteComponent, selectors: [["app-kite"]], viewQuery: function KiteComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.modalData2 = _t.first);
    } }, decls: 5, vars: 0, consts: [["type", "image", "src", "/static/imgs/KiteIcon.svg", "alt", "Kite Creating", 1, "icon-button", 3, "click"], ["modalData1", ""], ["modalData2", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function KiteComponent_Template(rf, ctx) { if (rf & 1) {
        const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function KiteComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r12); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, KiteComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, KiteComponent_ng_template_3_Template, 6, 0, "ng-template", null, 2, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 9674:
/*!********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/line.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LineComponent": () => (/* binding */ LineComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 4364);




const _c0 = function (a0) { return { "icon-button-clicked": a0 }; };
class LineComponent {
    /** Empty function */
    constructor() {
        /**
         * Variable used to save state of this button.
         * @ignore */
        this.toggle = false;
    }
    /**
     * Function called after clicked on this component(button).
     * Enable or disable drawing lines on {@link Canvas}.
     */
    onClick() {
        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.LINE);
            this.toggle = !this.toggle;
        }
        else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.LINE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearBatchLayer();
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
            this.toggle = !this.toggle;
        }
    }
}
LineComponent.ɵfac = function LineComponent_Factory(t) { return new (t || LineComponent)(); };
LineComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: LineComponent, selectors: [["app-line"]], decls: 1, vars: 3, consts: [["type", "image", "src", "/static/imgs/LineIcon.svg", "alt", "Line Creating", 1, "icon-button", 3, "ngClass", "click"]], template: function LineComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function LineComponent_Template_input_click_0_listener() { return ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction1"](1, _c0, ctx.toggle));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgClass], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 5597:
/*!***************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/load-scheme.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LoadSchemeComponent": () => (/* binding */ LoadSchemeComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ 4101);
/* harmony import */ var src_app_services_scheme_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/scheme.service */ 4604);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 4364);







const _c0 = ["modalData"];
function LoadSchemeComponent_ng_template_1_div_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "label", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "input", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("change", function LoadSchemeComponent_ng_template_1_div_7_Template_input_change_2_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r8); const item_r6 = restoredCtx.$implicit; const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2); return ctx_r7.titlesOnChange($event.target, item_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r6 = ctx.$implicit;
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("checked", ctx_r3.isTitleChecked(item_r6));
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", item_r6, " ");
} }
function LoadSchemeComponent_ng_template_1_div_11_Template(rf, ctx) { if (rf & 1) {
    const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "label", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "input", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("change", function LoadSchemeComponent_ng_template_1_div_11_Template_input_change_2_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r11); const item_r9 = restoredCtx.$implicit; const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2); return ctx_r10.authorsOnChange($event.target, item_r9); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r9 = ctx.$implicit;
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("checked", ctx_r4.isAuthorChecked(item_r9));
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", item_r9, " ");
} }
function LoadSchemeComponent_ng_template_1_div_15_Template(rf, ctx) { if (rf & 1) {
    const _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "label", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "input", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("change", function LoadSchemeComponent_ng_template_1_div_15_Template_input_change_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r14); const item_r12 = restoredCtx.$implicit; const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2); return ctx_r13.setScheme(item_r12); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r12 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate3"](" ", item_r12["title"], " - ", item_r12["user"], " - ", item_r12["date"].substring(0, 10), " ");
} }
function LoadSchemeComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Loading Saved Scheme");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, " Scheme Name ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](7, LoadSchemeComponent_ng_template_1_div_7_Template, 4, 2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](8, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](9, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](10, " Scheme Author ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](11, LoadSchemeComponent_ng_template_1_div_11_Template, 4, 2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](12, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](13, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](14, " Matching Schemes ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](15, LoadSchemeComponent_ng_template_1_div_15_Template, 4, 3, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](16, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](17, "button", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function LoadSchemeComponent_ng_template_1_Template_button_click_17_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r16); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](18, "Load Scheme");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r1.titles);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r1.authors);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r1.chosenSchemes);
} }
class LoadSchemeComponent {
    constructor(modalService, toastrService, schemeService) {
        this.modalService = modalService;
        this.toastrService = toastrService;
        this.schemeService = schemeService;
        this.schemes = [];
        this.chosenSchemes = [];
        this.chosenScheme = null;
        this.titles = [];
        this.chosenTitles = [];
        this.authors = [];
        this.chosenAuthors = [];
    }
    /**
     * Function used in save-scheme.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    ngOnInit() { }
    setChosenSchemes() {
        this.chosenSchemes = [];
        this.schemes.forEach(item => {
            if (this.chosenAuthors.includes(item['user']) && this.chosenTitles.includes(item['title'])) {
                this.chosenSchemes.push(item);
            }
        });
    }
    isTitleChecked(item) {
        if (this.chosenTitles.includes(item)) {
            return true;
        }
        else {
            return false;
        }
    }
    titlesOnChange(target, item) {
        if (target.checked) {
            this.chosenTitles.push(item);
        }
        else {
            this.chosenTitles.splice(this.chosenTitles.indexOf(item), 1);
        }
        this.setChosenSchemes();
    }
    isAuthorChecked(item) {
        if (this.chosenAuthors.includes(item)) {
            return true;
        }
        else {
            return false;
        }
    }
    authorsOnChange(target, item) {
        if (target.checked) {
            this.chosenAuthors.push(item);
        }
        else {
            this.chosenAuthors.splice(this.chosenAuthors.indexOf(item), 1);
        }
        this.setChosenSchemes();
    }
    setScheme(scheme) {
        this.chosenScheme = scheme;
    }
    /**
     * Function called after clicked on this component(button).
     */
    onClick() {
        this.schemeService.list().subscribe(data => {
            this.toastrService.success("Successfully pulled the data!", "", { timeOut: 3000, progressBar: false });
            this.schemes = data;
            this.schemes.forEach(element => {
                let t = element['title'];
                if (!(this.titles.includes(t))) {
                    this.titles.push(t);
                }
                let a = element['user'];
                if (!(this.authors.includes(a))) {
                    this.authors.push(a);
                }
            });
            this.titles.sort();
            this.authors.sort();
            this.triggerModal(this.content);
        }, error => {
            this.toastrService.success("Failed to pull the data", "", { timeOut: 3000, progressBar: false });
        });
    }
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                if (this.chosenScheme == null) {
                    return;
                }
                const body = JSON.parse(this.chosenScheme['body']);
                const points = body['points'];
                const segments = body['segments'];
                const circles = body['circles'];
                const lines = body['lines'];
                const lengths = body['lengths'];
                const angleValues = body['angleValues'];
                const perpendicular = body['perpendicular'];
                const parallel = body['parallel'];
                const equalSegments = body['equalSegments'];
                const equalAngles = body['equalAngles'];
                const bisectorLines = body['bisectorLines'];
                const escribedCircles = body['escribedCircles'];
                const inscribedCircles = body['inscribedCircles'];
                const circumscribedCircles = body['circumscribedCircles'];
                const tangentCircles = body['tangentCircles'];
                const tangentLines = body['tangentLines'];
                const polygonTypes = body['polygonTypes'];
                const altitudes = body['altitudes'];
                const medians = body['medians'];
                const midPerpendicularLines = body['midPerpendicularLines'];
                const midSegments = body['midSegments'];
                let idsConverter = {};
                let lineIdsConverter = {};
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.reinit();
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                if (points != null) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setCurrentlyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.POINT);
                    points.forEach((point) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnCanvas(point['x'], point['y']);
                        idsConverter[point['id']] = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getLastCreatedPointId();
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setCurrentlyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
                }
                if (segments != null) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setCurrentlyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.SEGMENT);
                    segments.forEach((segment) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(idsConverter[segment['end1Id']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(idsConverter[segment['end2Id']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                        idsConverter[segment['id']] = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getLastCreatedSegmentId();
                    });
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setCurrentlyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
                }
                if (circles != null) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setCurrentlyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.CIRCLE);
                    circles.forEach((circle) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(idsConverter[circle['centerId']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(idsConverter[circle['pointsOn'][0]]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                        idsConverter[circle['id']] = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getLastCreatedCircleId();
                    });
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setCurrentlyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
                }
                const currentSchemeJson = _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.getJsonData();
                const newLines = currentSchemeJson['lines'];
                if (lines != null) {
                    lines.forEach((line) => {
                        lineIdsConverter[line['id']] = newLines.filter(item => { return item['string'] == line['string']; })[0]['id'];
                    });
                }
                if (lengths != null) {
                    lengths.forEach((length) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setLengthValue(idsConverter[length['end1Id']], idsConverter[length['end2Id']], length['value']);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (angleValues != null) {
                    angleValues.forEach((angleValue) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setAngleValue(idsConverter[angleValue['end1Id']], idsConverter[angleValue['vertexId']], idsConverter[angleValue['end2Id']], angleValue['type'], angleValue['value']);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (perpendicular != null) {
                    perpendicular.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPerpendicularLines(lineIdsConverter[dependency['id1']], lineIdsConverter[dependency['id2']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (parallel != null) {
                    parallel.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setParallelLines(lineIdsConverter[dependency['id1']], lineIdsConverter[dependency['id2']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (equalSegments != null) {
                    equalSegments.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEqualSegmentsDependencyWithEnds(idsConverter[dependency['s1End1Id']], idsConverter[dependency['s1End2Id']], idsConverter[dependency['s2End1Id']], idsConverter[dependency['s2End2Id']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (equalAngles != null) {
                    equalAngles.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEqualAnglesDependency(idsConverter[dependency['a1End1Id']], idsConverter[dependency['a1VertexId']], idsConverter[dependency['a1End2Id']], idsConverter[dependency['a2End1Id']], idsConverter[dependency['a2VertexId']], idsConverter[dependency['a2End2Id']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (midPerpendicularLines != null) {
                    midPerpendicularLines.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createSegmentMidPerpendicularWithEnds(idsConverter[dependency['end1Id']], idsConverter[dependency['end2Id']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (bisectorLines != null) {
                    bisectorLines.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createBisectorLine(idsConverter[dependency['point1Id']], idsConverter[dependency['vertexId']], idsConverter[dependency['point2Id']], dependency['angleType'] == 1);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (escribedCircles != null) {
                    escribedCircles.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setEscribedCircle(idsConverter[dependency['circleId']], dependency['polygon'].map(id => idsConverter[id]));
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (inscribedCircles != null) {
                    inscribedCircles.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setInscribedCircle(idsConverter[dependency['circleId']], dependency['polygon'].map(id => idsConverter[id]));
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (circumscribedCircles != null) {
                    circumscribedCircles.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setCircumscribedCircle(idsConverter[dependency['circleId']], dependency['polygon'].map(id => idsConverter[id]));
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (tangentCircles != null) {
                    tangentCircles.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setTangentCircles(idsConverter[dependency['id1']], idsConverter[dependency['id2']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (tangentLines != null) {
                    tangentLines.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setTangentLineToCircle(lineIdsConverter[dependency['lineId']], idsConverter[dependency['circleId']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (polygonTypes != null) {
                    polygonTypes.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(dependency['polygon'].map(id => idsConverter[id]), dependency['type']);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (altitudes != null) {
                    altitudes.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setAltitude(idsConverter[dependency['end1Id']], idsConverter[dependency['end2Id']], lineIdsConverter[dependency['lineId']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (medians != null) {
                    medians.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setMedian(idsConverter[dependency['s1End1Id']], idsConverter[dependency['s1End2Id']], idsConverter[dependency['s2End1Id']], idsConverter[dependency['s2End2Id']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
                if (midSegments != null) {
                    midSegments.forEach((dependency) => {
                        _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setMidSegment(idsConverter[dependency['a1End1Id']], idsConverter[dependency['a1End2Id']], idsConverter[dependency['a2End1Id']], idsConverter[dependency['a2End2Id']], idsConverter[dependency['sEnd1']], idsConverter[dependency['sEnd2']]);
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForCalculationsProcessed();
                    });
                }
            }
        });
    }
}
LoadSchemeComponent.ɵfac = function LoadSchemeComponent_Factory(t) { return new (t || LoadSchemeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_5__.ToastrService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_app_services_scheme_service__WEBPACK_IMPORTED_MODULE_2__.SchemeService)); };
LoadSchemeComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: LoadSchemeComponent, selectors: [["app-load-scheme"]], viewQuery: function LoadSchemeComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    } }, decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/LoadIcon.svg", "alt", "Load Scheme", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], [1, "col"], [4, "ngFor", "ngForOf"], [1, "modal-footer", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], ["type", "button", 1, "btn", "modal-btn", 3, "click"], [1, "form-check-label"], ["type", "checkbox", 1, "form-check-input", 3, "checked", "change"], ["type", "radio", "name", "optradio", 1, "form-check-input", 3, "change"]], template: function LoadSchemeComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function LoadSchemeComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, LoadSchemeComponent_ng_template_1_Template, 19, 3, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.NgForOf], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 9332:
/*!**********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/median.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MedianComponent": () => (/* binding */ MedianComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);




class MedianComponent {
    /** Empty function */
    constructor() { }
    /**
     * Function used in median.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segment or segment ends.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Median", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
            let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            if (ids[0].length == 2) {
                let ends = ids[0];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createMedianwithBaseEnds(ends[0], ends[1], ids[1][0]);
            }
            else {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createMedianWithBaseId(ids[0][0], ids[1][0]);
            }
        });
    }
}
MedianComponent.ɵfac = function MedianComponent_Factory(t) { return new (t || MedianComponent)(); };
MedianComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: MedianComponent, selectors: [["app-median"]], decls: 1, vars: 0, consts: [["type", "image", "src", "/static/imgs/MedianIcon.svg", "alt", "Median Creating", 1, "icon-button", 3, "click"]], template: function MedianComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function MedianComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 7212:
/*!*********************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/mid-perpendicular.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MidPerpendicularComponent": () => (/* binding */ MidPerpendicularComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);




class MidPerpendicularComponent {
    /** Empty function */
    constructor() { }
    /**
     * Function used in mid-perpendicular.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segment or segment ends.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Mid Perpendicular", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
            let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            if (ids[0].length == 2) {
                let ends = ids[0];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createSegmentMidPerpendicularWithEnds(ends[0], ends[1]);
            }
            else {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createSegmentMidPerpendicularWithId(ids[0][0]);
            }
        });
    }
}
MidPerpendicularComponent.ɵfac = function MidPerpendicularComponent_Factory(t) { return new (t || MidPerpendicularComponent)(); };
MidPerpendicularComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: MidPerpendicularComponent, selectors: [["app-mid-perpendicular"]], decls: 1, vars: 0, consts: [["type", "image", "src", "/static/imgs/MidPerpendicularIcon.svg", "alt", "MidPerpendicular Creating", 1, "icon-button", 3, "click"]], template: function MidPerpendicularComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function MidPerpendicularComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 9181:
/*!***************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/mid-segment.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MidSegmentComponent": () => (/* binding */ MidSegmentComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);




class MidSegmentComponent {
    /** Empty function */
    constructor() { }
    /**
     * Function used in mid-segment.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segments ends.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Mid Segment", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT]], () => {
            let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            if (ids[0].length == 2 && ids[1].length == 2) {
                let ends1 = ids[0];
                let ends2 = ids[1];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createMidSegmentWithArmEnds(ends1[0], ends1[1], ends2[0], ends2[1]);
            }
            else if (ids[0].length == 2) {
                let ends = ids[0];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createMidSegmentWithMix(ids[1][0], ends[0], ends[1]);
            }
            else if (ids[1].length == 2) {
                let ends = ids[1];
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createMidSegmentWithMix(ids[0][0], ends[0], ends[1]);
            }
            else {
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createMidSegmentWithArmIds(ids[0][0], ids[1][0]);
            }
        });
    }
}
MidSegmentComponent.ɵfac = function MidSegmentComponent_Factory(t) { return new (t || MidSegmentComponent)(); };
MidSegmentComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: MidSegmentComponent, selectors: [["app-mid-segment"]], decls: 1, vars: 0, consts: [["type", "image", "src", "/static/imgs/MidSegmentIcon.svg", "alt", "Mid Segment Creating", 1, "icon-button", 3, "click"]], template: function MidSegmentComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function MidSegmentComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 3694:
/*!***************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/parallelism.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ParallelismComponent": () => (/* binding */ ParallelismComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);






function ParallelismComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelismComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Parallel Line");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelismComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Set Parallelism Dependency");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class ParallelismComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in parallelism.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Question about the type of action: create new parallel line or set parallelism dependency.
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segment and point or 2 segments.
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentlyComplexShape(_canvas__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeEnum.PARALLEL_LINE);
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.chooseShapes("Creating Parallel Line", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.EXISTING_POINT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.createParallelLineToLine(ids[0][0], ids[1][0]);
                });
            }
            else if (res == "dec2") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.chooseShapes("Setting Parallelism Dependency", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.setParallelismDependency(ids[0][0], ids[1][0]);
                });
            }
        });
    }
}
ParallelismComponent.ɵfac = function ParallelismComponent_Factory(t) { return new (t || ParallelismComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
ParallelismComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: ParallelismComponent, selectors: [["app-parallelism"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/ParallelismIcon.svg", "alt", "Parallelism Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function ParallelismComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelismComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, ParallelismComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 3415:
/*!*****************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/parallelogram.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ParallelogramComponent": () => (/* binding */ ParallelogramComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





const _c0 = ["modalData2"];
function ParallelogramComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelogramComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Parallelogram");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelogramComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Parallelogram");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function ParallelogramComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelogramComponent_ng_template_3_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec3"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Based On Segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelogramComponent_ng_template_3_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec4"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Based On 3 Points");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class ParallelogramComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in parallelogram.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * or to ask for a type of base shape
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-2.4, -2.4], [4.4, -2.4], [2.4, 2.4], [-4.4, 2.4]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.REVERSE], [[0, 1]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.PARALLELOGRAM);
            }
            else if (res == "dec2") {
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec3") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Parallelogram Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
                    let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    let fixedPointsIds = [];
                    let fixedSidePoints = [];
                    if (point_ids[0].length == 2) {
                        let ends = point_ids[0];
                        let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                        let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                        fixedPointsIds = [ends[0], ends[1]];
                        fixedSidePoints = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
                    }
                    else {
                        fixedPointsIds = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getSegmentEnds(point_ids[0][0]);
                        let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                        fixedSidePoints = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
                    }
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-2.4, -2.4], [4.4, -2.4], [2.4, 2.4], [-4.4, 2.4]], fixedPointsIds, fixedSidePoints, [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.PARALLELOGRAM], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.PARALLELOGRAM);
                });
            }
            else if (res == "dec4") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing Three Of Parallelogram Vertices", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT]], () => {
                    let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    let p1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]);
                    p1 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.toUnit([p1.getAttr('x'), p1.getAttr('y')]);
                    let p2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[1][0]);
                    p2 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.toUnit([p2.getAttr('x'), p2.getAttr('y')]);
                    let p3 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[2][0]);
                    p3 = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.toUnit([p3.getAttr('x'), p3.getAttr('y')]);
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([p1, p2, p3, [p1[0] + p3[0] - p2[0], p1[1] + p3[1] - p2[1]]], [point_ids[0][0], point_ids[1][0], point_ids[2][0]], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.NONE], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.PARALLELOGRAM);
                });
            }
        });
    }
}
ParallelogramComponent.ɵfac = function ParallelogramComponent_Factory(t) { return new (t || ParallelogramComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
ParallelogramComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: ParallelogramComponent, selectors: [["app-parallelogram"]], viewQuery: function ParallelogramComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.modalData2 = _t.first);
    } }, decls: 5, vars: 0, consts: [["type", "image", "src", "/static/imgs/ParallelogramIcon.svg", "alt", "Parallelogram Creating", 1, "icon-button", 3, "click"], ["modalData1", ""], ["modalData2", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function ParallelogramComponent_Template(rf, ctx) { if (rf & 1) {
        const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ParallelogramComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r12); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, ParallelogramComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, ParallelogramComponent_ng_template_3_Template, 6, 0, "ng-template", null, 2, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 6507:
/*!********************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/perpendicularity.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PerpendicularityComponent": () => (/* binding */ PerpendicularityComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);






function PerpendicularityComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function PerpendicularityComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Perpendicular Line");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function PerpendicularityComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Set Perpendicularity Dependency");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class PerpendicularityComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
       * Function used in perpendicularity.component template.
       * Check if it is currently not possible drawing some shape.
       * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Question about the type of action: create new perpendicular line or set perpendicularity dependency.
     * Start function {@link ComplexShapeCreator.chooseShapes} to select segment and point or 2 segments.
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentlyComplexShape(_canvas__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeEnum.PERPENDICULAR_LINE);
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.chooseShapes("Creating Perpendicular Line", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.EXISTING_POINT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.createPerpendicularLineToLine(ids[0][0], ids[1][0]);
                });
            }
            else if (res == "dec2") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.chooseShapes("Setting Perpendicularity Dependency", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.setPerpendicularityDependency(ids[0][0], ids[1][0]);
                });
            }
        });
    }
}
PerpendicularityComponent.ɵfac = function PerpendicularityComponent_Factory(t) { return new (t || PerpendicularityComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
PerpendicularityComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: PerpendicularityComponent, selectors: [["app-perpendicularity"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/PerpendicularityIcon.svg", "alt", "Perpendicularity Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function PerpendicularityComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function PerpendicularityComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, PerpendicularityComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 2694:
/*!*********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/point.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PointComponent": () => (/* binding */ PointComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 4364);




const _c0 = function (a0) { return { "icon-button-clicked": a0 }; };
class PointComponent {
    /** Empty function */
    constructor() {
        /**
         * Variable used to save state of this button.
         * @ignore */
        this.toggle = false;
    }
    /**
     * Function called after clicked on this component(button).
     * Enable or disable drawing points on {@link Canvas}.
     */
    onClick() {
        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.POINT);
            this.toggle = !this.toggle;
        }
        else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.POINT) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
            this.toggle = !this.toggle;
        }
    }
}
PointComponent.ɵfac = function PointComponent_Factory(t) { return new (t || PointComponent)(); };
PointComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: PointComponent, selectors: [["app-point"]], decls: 1, vars: 3, consts: [["type", "image", "src", "/static/imgs/PointIcon.svg", "alt", "Point Creating", 1, "icon-button", 3, "ngClass", "click"]], template: function PointComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function PointComponent_Template_input_click_0_listener() { return ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction1"](1, _c0, ctx.toggle));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgClass], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 949:
/*!***********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/polygon.component.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PolygonComponent": () => (/* binding */ PolygonComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 1707);






const _c0 = ["modalData2"];
function PolygonComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function PolygonComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Regular Polygon");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function PolygonComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Regular Polygon");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function PolygonComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Number Of Sides");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function PolygonComponent_ng_template_3_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r9.sides = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function PolygonComponent_ng_template_3_Template_button_click_5_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec3"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, "Create Regular Polygon");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r3.sides);
} }
class PolygonComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
        /**
         * Variable used in polygon.component template.
         * @ignore */
        this.sides = "";
    }
    /**
     * Function used in polygon.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * or to ask for a number of polygon sides
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                this.unfetteredShape = true;
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec2") {
                this.unfetteredShape = false;
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec3") {
                let n = parseInt(this.sides);
                if (n >= 3) {
                    // generating vertices of polygon, first and second vertex create segment parallel to OX axis
                    let vertices = [];
                    let radius = 4;
                    let angle, cosAngle, sinAngle;
                    for (let i = 0; i < n; i++) {
                        angle = 2 * Math.PI * i / n - Math.PI / 2 - Math.PI / n;
                        cosAngle = Math.cos(angle);
                        sinAngle = Math.sin(angle);
                        vertices.push([radius * cosAngle, radius * sinAngle]);
                    }
                    if (this.unfetteredShape) {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon(vertices, [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE_XY | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.REGULAR_POLYGON);
                    }
                    else {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Polygon Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
                            let fixedPointsIds = [];
                            let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                            let fixedSidePoints = [];
                            if (point_ids[0].length == 2) {
                                let ends = point_ids[0];
                                let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                                let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                                fixedPointsIds = [ends[0], ends[1]];
                                fixedSidePoints = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
                            }
                            else {
                                fixedPointsIds = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getSegmentEnds(point_ids[0][0]);
                                let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                                fixedSidePoints = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
                            }
                            _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon(vertices, fixedPointsIds, fixedSidePoints, [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR_X], [Array.from(Array(n).keys())], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.REGULAR_POLYGON);
                        });
                    }
                }
            }
        });
    }
}
PolygonComponent.ɵfac = function PolygonComponent_Factory(t) { return new (t || PolygonComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
PolygonComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: PolygonComponent, selectors: [["app-polygon"]], viewQuery: function PolygonComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.modalData2 = _t.first);
    } }, decls: 5, vars: 0, consts: [["type", "image", "src", "/static/imgs/RegularPolygonIcon.svg", "alt", "Regular Polygon Creating", 1, "icon-button", 3, "click"], ["modalData1", ""], ["modalData2", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"], [1, "modal-header", "modal-title"], ["type", "number", "id", "sides-number", "placeholder", "Enter Sides Number", 1, "form-control", 3, "ngModel", "ngModelChange"]], template: function PolygonComponent_Template(rf, ctx) { if (rf & 1) {
        const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function PolygonComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r12); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, PolygonComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, PolygonComponent_ng_template_3_Template, 7, 1, "ng-template", null, 2, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgModel], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 8869:
/*!****************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/process-data.component.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProcessDataComponent": () => (/* binding */ ProcessDataComponent)
/* harmony export */ });
/* harmony import */ var C_Users_karol_Projects_MeetKunde_web_application_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 9369);
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _dependencies_presenter_dependencies_presenter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../dependencies-presenter/dependencies-presenter */ 347);
/* harmony import */ var _dependencies_presenter_display_processed_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../dependencies-presenter/display_processed_data */ 7743);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);







const _c0 = ["modalData"];

function ProcessDataComponent_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1, "Waiting For Answear");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
}

class ProcessDataComponent {
  /**
   * Initializing ModalService.
   * @param modalService instance of ModalService
   */
  constructor(modalService) {
    this.modalService = modalService;
  }
  /**
   * Function used in process-data.component template.
   * Check if it is currently not possible drawing some shape.
   * @ignore */


  isTrue() {
    return _canvas__WEBPACK_IMPORTED_MODULE_1__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.ShapeToCreateEnum.NONE;
  }
  /**
   * Function called after clicked on this component(button).
   * Start processing data and call triggerModal.
   */


  onClick() {
    var _this = this;

    this.triggerModal(this.content);
    _canvas__WEBPACK_IMPORTED_MODULE_1__.Canvas.lockUI();
    const json = _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.getJsonData(); //console.log(json);

    (0,C_Users_karol_Projects_MeetKunde_web_application_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      try {
        const rawResponse = yield fetch('http://localhost:8787/compute', {
          method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'text/plain'
          },
          body: JSON.stringify({
            json
          })
        });
        const content = yield rawResponse.json(); //console.log(content);

        _dependencies_presenter_dependencies_presenter__WEBPACK_IMPORTED_MODULE_3__.DependenciesPresenter.presentDependencies(content);
        let new_window = window.open('', '_blank');
        new_window.document.write((0,_dependencies_presenter_display_processed_data__WEBPACK_IMPORTED_MODULE_4__.display_processed_data)(content, _canvas__WEBPACK_IMPORTED_MODULE_1__.Canvas.pointNames));
      } catch (_a) {
        alert("PROCESSING FAILED!");
      } finally {
        _this.closeModal();

        _canvas__WEBPACK_IMPORTED_MODULE_1__.Canvas.unlockUI();
      }
    })();
  }
  /**
   * Function called after start processing data.
   * Information about process of processing data.
   * @param content element with a information to display
   */


  triggerModal(content) {
    this.modalService.open(content, {
      centered: true,
      keyboard: false,
      backdrop: 'static'
    }).result.then(res => {}, res => {});
  }

  closeModal() {
    this.modalService.dismissAll();
  }

}

ProcessDataComponent.ɵfac = function ProcessDataComponent_Factory(t) {
  return new (t || ProcessDataComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__.NgbModal));
};

ProcessDataComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: ProcessDataComponent,
  selectors: [["app-process-data"]],
  viewQuery: function ProcessDataComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c0, 5);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    }
  },
  decls: 3,
  vars: 0,
  consts: [["type", "image", "src", "/static/imgs/ProcessIcon.svg", "alt", "Process Sketch", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "loader"]],
  template: function ProcessDataComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "input", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ProcessDataComponent_Template_input_click_0_listener() {
        return ctx.isTrue() && ctx.onClick();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, ProcessDataComponent_ng_template_1_Template, 4, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplateRefExtractor"]);
    }
  },
  styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"]
});

/***/ }),

/***/ 1326:
/*!*************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/rectangle.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RectangleComponent": () => (/* binding */ RectangleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





function RectangleComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function RectangleComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Rectangle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function RectangleComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Rectangle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class RectangleComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in rectangle.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-4, -3], [4, -3], [4, 3], [-4, 3]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ALL_BASIC], [[0, 1]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.RECTANGLE);
            }
            else if (res == "dec2") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Rectangle Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
                    let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    let fixedPointsIds = [];
                    let fixedSidePoints = [];
                    if (point_ids[0].length == 2) {
                        let ends = point_ids[0];
                        let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                        let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                        fixedPointsIds = [ends[0], ends[1]];
                        fixedSidePoints = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
                    }
                    else {
                        fixedPointsIds = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getSegmentEnds(point_ids[0][0]);
                        let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                        fixedSidePoints = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
                    }
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-3, -3], [3, -3], [3, 3], [-3, 3]], fixedPointsIds, fixedSidePoints, [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.RECTANGLE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.RECTANGLE);
                });
            }
        });
    }
}
RectangleComponent.ɵfac = function RectangleComponent_Factory(t) { return new (t || RectangleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
RectangleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: RectangleComponent, selectors: [["app-rectangle"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/RectangleIcon.svg", "alt", "Rectangle Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function RectangleComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function RectangleComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, RectangleComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 9872:
/*!***********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/rhombus.component.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RhombusComponent": () => (/* binding */ RhombusComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





function RhombusComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function RhombusComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Rhombus");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function RhombusComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Rhombus");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class RhombusComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in rhombus.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[0, -5.542], [-3.2, 0], [0, 5.542], [3.2, 0]], [], [], [1, 3], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.RHOMBUS);
            }
            else if (res == "dec2") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Rhombus Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
                    let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    let fixedPointsIds = [];
                    let fixedSidePoints = [];
                    if (point_ids[0].length == 2) {
                        let ends = point_ids[0];
                        let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                        let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                        fixedPointsIds = ends;
                        fixedSidePoints = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
                    }
                    else {
                        let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                        fixedPointsIds = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getSegmentEnds(point_ids[0][0]);
                        fixedSidePoints = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
                    }
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-3.2, 0], [0, 5.542], [3.2, 0], [0, -5.542]], fixedPointsIds, fixedSidePoints, [3, 0], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.RHOMBUS], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.RHOMBUS);
                });
            }
        });
    }
}
RhombusComponent.ɵfac = function RhombusComponent_Factory(t) { return new (t || RhombusComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
RhombusComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: RhombusComponent, selectors: [["app-rhombus"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/RhombusIcon.svg", "alt", "Rhombus Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function RhombusComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function RhombusComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, RhombusComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 1080:
/*!***************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/save-scheme.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SaveSchemeComponent": () => (/* binding */ SaveSchemeComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ 4101);
/* harmony import */ var src_app_services_scheme_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/scheme.service */ 4604);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 1707);







const _c0 = ["modalData"];
function SaveSchemeComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Saving Scheme Name");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function SaveSchemeComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r3.schemeTitle = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "button", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SaveSchemeComponent_ng_template_1_Template_button_click_5_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, "Save Scheme");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.schemeTitle);
} }
class SaveSchemeComponent {
    constructor(modalService, toastrService, schemeService) {
        this.modalService = modalService;
        this.toastrService = toastrService;
        this.schemeService = schemeService;
        /**
         * Variable used to get information from modal.
         * @ignore */
        this.schemeTitle = "";
    }
    /**
     * Function used in save-scheme.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     */
    onClick() {
        this.triggerModal(this.content);
    }
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                this.schemeService.create({ title: this.schemeTitle, body: JSON.stringify(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.getJsonData()) }).subscribe(() => { this.toastrService.success("Successfully saved the scheme!", "", { timeOut: 3000, progressBar: false }); }, () => { this.toastrService.success("Failed to save the scheme", "", { timeOut: 3000, progressBar: false }); });
            }
        });
    }
}
SaveSchemeComponent.ɵfac = function SaveSchemeComponent_Factory(t) { return new (t || SaveSchemeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_5__.ToastrService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_app_services_scheme_service__WEBPACK_IMPORTED_MODULE_2__.SchemeService)); };
SaveSchemeComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: SaveSchemeComponent, selectors: [["app-save-scheme"]], viewQuery: function SaveSchemeComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    } }, decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/SaveIcon.svg", "alt", "Save Scheme", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["id", "scheme-title", "placeholder", "Enter Scheme Name", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function SaveSchemeComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SaveSchemeComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, SaveSchemeComponent_ng_template_1_Template, 7, 1, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_6__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgModel], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 3970:
/*!***********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/segment.component.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SegmentComponent": () => (/* binding */ SegmentComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 4364);




const _c0 = function (a0) { return { "icon-button-clicked": a0 }; };
class SegmentComponent {
    /** Empty function */
    constructor() {
        /**
         * Variable used to save state of this button.
         * @ignore */
        this.toggle = false;
    }
    /**
     * Function called after clicked on this component(button).
     * Enable or disable drawing segments on {@link Canvas}.
     */
    onClick() {
        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.SEGMENT);
            this.toggle = !this.toggle;
        }
        else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.SEGMENT) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearBatchLayer();
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
            this.toggle = !this.toggle;
        }
    }
}
SegmentComponent.ɵfac = function SegmentComponent_Factory(t) { return new (t || SegmentComponent)(); };
SegmentComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: SegmentComponent, selectors: [["app-segment"]], decls: 1, vars: 3, consts: [["type", "image", "src", "/static/imgs/SegmentIcon.svg", "alt", "Segment Creating", 1, "icon-button", 3, "ngClass", "click"]], template: function SegmentComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function SegmentComponent_Template_input_click_0_listener() { return ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction1"](1, _c0, ctx.toggle));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgClass], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 7525:
/*!************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/semiline.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SemilineComponent": () => (/* binding */ SemilineComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 4364);




const _c0 = function (a0) { return { "icon-button-clicked": a0 }; };
class SemilineComponent {
    /** Empty function */
    constructor() {
        /**
         * Variable used to save state of this button.
         * @ignore */
        this.toggle = false;
    }
    /**
     * Function called after clicked on this component(button).
     * Enable or disable drawing semi-lines on {@link Canvas}.
     */
    onClick() {
        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.SEMILINE);
            this.toggle = !this.toggle;
        }
        else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.SEMILINE) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearBatchLayer();
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
            this.toggle = !this.toggle;
        }
    }
}
SemilineComponent.ɵfac = function SemilineComponent_Factory(t) { return new (t || SemilineComponent)(); };
SemilineComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: SemilineComponent, selectors: [["app-semiline"]], decls: 1, vars: 3, consts: [["type", "image", "src", "/static/imgs/SemiLineIcon.svg", "alt", "Semiline Creating", 1, "icon-button", 3, "ngClass", "click"]], template: function SemilineComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function SemilineComponent_Template_input_click_0_listener() { return ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction1"](1, _c0, ctx.toggle));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgClass], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 6063:
/*!*******************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/set-angle-value.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetAngleValueComponent": () => (/* binding */ SetAngleValueComponent)
/* harmony export */ });
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 1707);






const _c0 = ["modalData"];
function SetAngleValueComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Angle Value");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function SetAngleValueComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r3.value = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "input", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function SetAngleValueComponent_ng_template_1_Template_input_ngModelChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r5.angleType = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "label", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](8, "Convex Angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](9, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](10, "input", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function SetAngleValueComponent_ng_template_1_Template_input_ngModelChange_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r6.angleType = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](11, "label", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](12, "Concave Angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](13, "button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SetAngleValueComponent_ng_template_1_Template_button_click_13_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](14, "Enter Angle Value");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.angleType);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.angleType);
} }
class SetAngleValueComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
        /**
         * Variable used to get information from modal.
         * @ignore */
        this.value = "";
        this.angleType = "option1";
    }
    /**
     * Function used in set-angle-value.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_1__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select 3 points.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.chooseShapes("Setting Angle Value", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ShapeToSelect.EXISTING_POINT], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ShapeToSelect.EXISTING_POINT]], () => {
            this.triggerModal(this.content);
        });
    }
    /**
     * Function called to get value of angle and ask whether angle is concave or convex.
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                let t;
                if (this.angleType == "option1") {
                    t = _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.AngleTypeEnum.CONVEX;
                }
                else {
                    t = _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.AngleTypeEnum.CONCAVE;
                }
                let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.getChosenShapes();
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.setAngleValue(ids[0][0], ids[1][0], ids[2][0], t, this.value);
            }
        });
    }
}
SetAngleValueComponent.ɵfac = function SetAngleValueComponent_Factory(t) { return new (t || SetAngleValueComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
SetAngleValueComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: SetAngleValueComponent, selectors: [["app-set-angle-value"]], viewQuery: function SetAngleValueComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    } }, decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/AngleValueIcon.svg", "alt", "Angle Value", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["id", "angle-value", "placeholder", "Enter Angle Value", 1, "form-control", 3, "ngModel", "ngModelChange"], [1, "form-check", "form-check-inline"], ["type", "radio", "id", "angleType1", "value", "option1", "name", "angleType", "checked", "", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "inlineCheckbox1", 1, "form-check-label"], ["type", "radio", "id", "angleType2", "value", "option2", "name", "angleType", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "inlineCheckbox2", 1, "form-check-label"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function SetAngleValueComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SetAngleValueComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, SetAngleValueComponent_ng_template_1_Template, 15, 3, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgModel, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.RadioControlValueAccessor], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 4103:
/*!**************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/set-length.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetLengthComponent": () => (/* binding */ SetLengthComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 1707);






const _c0 = ["modalData"];
function SetLengthComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Enter Segment Length");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "input", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function SetLengthComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return ctx_r3.length = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "button", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SetLengthComponent_ng_template_1_Template_button_click_5_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, "Enter Segment Length");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx_r1.length);
} }
class SetLengthComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
        /**
         * Variable used to get information from modal.
         * @ignore */
        this.length = "";
    }
    /**
     * Function used in set-length.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select 2 points.
     */
    onClick() {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.chooseShapes("Setting Segment Length", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ShapeToSelect.SEGMENT_ENDS]], () => {
            this.triggerModal(this.content);
        });
    }
    /**
     * Function called to get value of length.
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_1__.ComplexShapeCreator.getChosenShapes();
                if (ids[0].length == 2) {
                    let ends = ids[0];
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.setLengthValue(ends[0], ends[1], this.length);
                }
                else {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_2__.CanvasManagerInterface.setSegmentLengthValue(ids[0][0], this.length);
                }
            }
        });
    }
}
SetLengthComponent.ɵfac = function SetLengthComponent_Factory(t) { return new (t || SetLengthComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
SetLengthComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: SetLengthComponent, selectors: [["app-set-length"]], viewQuery: function SetLengthComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    } }, decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/SegmentLengthIcon.svg", "alt", "Segment Length", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-header", "modal-title"], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["id", "segment-length", "placeholder", "Enter Segment Length", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function SetLengthComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SetLengthComponent_Template_input_click_0_listener() { return ctx.isTrue() && ctx.onClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, SetLengthComponent_ng_template_1_Template, 7, 1, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_5__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgModel], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 1916:
/*!**********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/square.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SquareComponent": () => (/* binding */ SquareComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





function SquareComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SquareComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Square");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SquareComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Square");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class SquareComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in square.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-3, -3], [3, -3], [3, 3], [-3, 3]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE_XY | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.SQUARE);
            }
            else if (res == "dec2") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Square Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
                    let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    let fixedPointsIds = [];
                    let fixedSidePoints = [];
                    if (point_ids[0].length == 2) {
                        let ends = point_ids[0];
                        let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                        let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                        fixedPointsIds = [ends[0], ends[1]];
                        fixedSidePoints = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
                    }
                    else {
                        fixedPointsIds = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getSegmentEnds(point_ids[0][0]);
                        let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                        fixedSidePoints = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
                    }
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-3, -3], [3, -3], [3, 3], [-3, 3]], fixedPointsIds, fixedSidePoints, [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR_X], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.SQUARE);
                });
            }
        });
    }
}
SquareComponent.ɵfac = function SquareComponent_Factory(t) { return new (t || SquareComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
SquareComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: SquareComponent, selectors: [["app-square"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/SquareIcon.svg", "alt", "Square Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function SquareComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function SquareComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, SquareComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 231:
/*!******************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/tangent-circle.component.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TangentCircleComponent": () => (/* binding */ TangentCircleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





function TangentCircleComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TangentCircleComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Line Tangent To Circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TangentCircleComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Circle Tangent To Line");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TangentCircleComponent_ng_template_1_Template_button_click_6_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec3"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](7, "Create Circle Tangent To Circle Externally");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](8, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TangentCircleComponent_ng_template_1_Template_button_click_8_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4); const modal_r2 = restoredCtx.$implicit; return modal_r2.dismiss("dec4"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](9, "Create Circle Tangent To Circle Internally");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class TangentCircleComponent {
    /**
    * Initializing ModalService.
    * @param modalService instance of ModalService
    */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in tangent-circle.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called after clicked on this component(button).
     * Start function {@link ComplexShapeCreator.chooseShapes} to select point and segment.
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Tangent Line To Circle", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.CIRCLE]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createTangentLine(ids[1][0], ids[0][0]);
                });
            }
            else if (res == "dec2") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creating Tangent Circle To Line", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createTangentCircleToLine(ids[0][0], ids[1][0]);
                });
            }
            else if (res == "dec3") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creatig Tangent Circle To Circle", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.CIRCLE], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createTangentCircleToCircle(ids[0][0], ids[1][0], true);
                });
            }
            else if (res == "dec4") {
                _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Creatig Tangent Circle To Circle", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.CIRCLE], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.EXISTING_POINT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT]], () => {
                    let ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.createTangentCircleToCircle(ids[0][0], ids[1][0], false);
                });
            }
        });
    }
}
TangentCircleComponent.ɵfac = function TangentCircleComponent_Factory(t) { return new (t || TangentCircleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
TangentCircleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: TangentCircleComponent, selectors: [["app-tangent-circle"]], decls: 3, vars: 0, consts: [["type", "image", "src", "/static/imgs/TangentCircleToLineIcon.svg", "alt", "Tangent Circle Creating", 1, "icon-button", 3, "click"], ["modalData", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"]], template: function TangentCircleComponent_Template(rf, ctx) { if (rf & 1) {
        const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TangentCircleComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r8); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, TangentCircleComponent_ng_template_1_Template, 10, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 8564:
/*!*************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/trapezoid.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TrapezoidComponent": () => (/* binding */ TrapezoidComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





const _c0 = ["modalData2"];
function TrapezoidComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TrapezoidComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Trapezoid");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TrapezoidComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Trapezoid");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function TrapezoidComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Choose Trapezoid Type");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TrapezoidComponent_ng_template_3_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec3"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Scalene Trapezoid");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TrapezoidComponent_ng_template_3_Template_button_click_6_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec4"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](7, "Isosceles Trapezoid");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](8, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TrapezoidComponent_ng_template_3_Template_button_click_8_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec5"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](9, "Right Trapezoid");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class TrapezoidComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in trapezoid.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * or to ask for a type of trapezeoid to create
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                this.unfetteredShape = true;
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec2") {
                this.unfetteredShape = false;
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec3") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[6.4, -2.8], [-6.4, -2.8], [-2.8, 2.8], [4.4, 2.8]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ALL_BASIC], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.SCALENE_TRAPEZOID);
                }
                else {
                    alert("Currently Unavailable Function!");
                    //this.getPoints((points: number[][]) => {
                    //  ComplexShapeCreator.fullConfigurePolygon(vertices, [], [0, 1], [AvailableTransformation.ALL_BASIC], [[0, 1, 2, 3]], [null], [DragRangeType.NONE]);
                    //});
                }
            }
            else if (res == "dec4") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[6.4, -2.8], [-6.4, -2.8], [-2.8, 2.8], [2.8, 2.8]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ALL_BASIC], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.ISOSCELES_TRAPEZOID);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[6.4, -2.8], [-6.4, -2.8], [-2.8, 2.8], [2.8, 2.8]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.ISOSCELES_TRAPEZOID_BASE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.ISOSCELES_TRAPEZOID);
                    });
                }
            }
            else if (res == "dec5") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[6.4, -2.8], [-6.4, -2.8], [-2.8, 2.8], [6.4, 2.8]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.RIGHT_TRAPEZOID);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[6.4, -2.8], [-6.4, -2.8], [-2.8, 2.8], [6.4, 2.8]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT], [[0, 1, 2, 3]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.RIGHT_TRAPEZOID_BASE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.RIGHT_TRAPEZOID);
                    });
                }
            }
        });
    }
    /**
     * Function used in choosing fixed side points
     * @param function_to_do_with_points function to apply after points choosing
     * @ignore */
    getFixedSidePoints(function_to_do_with_points) {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Trapezoid Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
            let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            let points = [];
            if (point_ids[0].length == 2) {
                let ends = point_ids[0];
                let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                points = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
            }
            else {
                let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                points = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
            }
            function_to_do_with_points.call(null, points);
        });
    }
}
TrapezoidComponent.ɵfac = function TrapezoidComponent_Factory(t) { return new (t || TrapezoidComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
TrapezoidComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: TrapezoidComponent, selectors: [["app-trapezoid"]], viewQuery: function TrapezoidComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.modalData2 = _t.first);
    } }, decls: 5, vars: 0, consts: [["type", "image", "src", "/static/imgs/TrapezoidIcon.svg", "alt", "Trapezoid Creating", 1, "icon-button", 3, "click"], ["modalData1", ""], ["modalData2", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"], ["type", "button", "disabled", "", 1, "btn", "modal-btn", 3, "click"], [1, "modal-header", "modal-title"]], template: function TrapezoidComponent_Template(rf, ctx) { if (rf & 1) {
        const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TrapezoidComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r13); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, TrapezoidComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, TrapezoidComponent_ng_template_3_Template, 10, 0, "ng-template", null, 2, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 9149:
/*!************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/buttons/triangle.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TriangleComponent": () => (/* binding */ TriangleComponent)
/* harmony export */ });
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);





const _c0 = ["modalData2"];
function TriangleComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_1_Template_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec1"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "Create Unfettered Triangle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_1_Template_button_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r6); const modal_r4 = restoredCtx.$implicit; return modal_r4.dismiss("dec2"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Create Dependent Triangle");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function TriangleComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "Choose Triangle Type");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "table", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "thead");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](5, "th", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "th", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](7, "Scalene");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](8, "th", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](9, "Isosceles");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](10, "th", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](11, "Equilateral");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](12, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](13, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](14, "th", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](15, "Acute");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](16, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](17, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_3_Template_button_click_17_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec3"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](18, "Choose");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](19, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](20, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_3_Template_button_click_20_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec4"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](21, "Choose");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](22, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](23, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_3_Template_button_click_23_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec5"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](24, "Choose");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](25, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](26, "th", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](27, "Right");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](28, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](29, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_3_Template_button_click_29_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec6"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](30, "Choose");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](31, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](32, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_3_Template_button_click_32_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec7"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](33, "Choose");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](34, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](35, "X");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](36, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](37, "th", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](38, "Obtuse");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](39, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](40, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_3_Template_button_click_40_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec8"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](41, "Choose");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](42, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](43, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_ng_template_3_Template_button_click_43_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r10); const modal_r8 = restoredCtx.$implicit; return modal_r8.dismiss("dec9"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](44, "Choose");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](45, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](46, "X");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
class TriangleComponent {
    /**
     * Initializing ModalService.
     * @param modalService instance of ModalService
     */
    constructor(modalService) {
        this.modalService = modalService;
    }
    /**
     * Function used in triangle.component template.
     * Check if it is currently not possible drawing some shape.
     * @ignore */
    isTrue() {
        return _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentyCreatedShape() == _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE;
    }
    /**
     * Function called to ask for a type of creating shape(unfettered or on base other just created shapes)
     * or to ask for a type of triangle to create
     * @param content element with a question to display
     */
    triggerModal(content) {
        this.modalService.open(content, { centered: true }).result.then((res) => { }, (res) => {
            if (res == "dec1") {
                this.unfetteredShape = true;
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec2") {
                this.unfetteredShape = false;
                this.triggerModal(this.modalData2);
            }
            else if (res == "dec3") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-4, -4], [4, -4], [-1, 4]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ALL_BASIC], [[0, 1]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsAcute], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.NONE);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-4, -4], [4, -4], [-1, 4]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR], [[0, 1, 2]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsAcute], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.NONE);
                    });
                }
            }
            else if (res == "dec4") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-4, -4], [4, -4], [0, 4]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ALL_BASIC], [[0, 1]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsAcute], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.ISOSCELES_ACUTE_TRIANGLE);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-4, -4], [4, -4], [0, 4]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR_X | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE], [[0, 1, 2], [0, 2, 1, 0], [0, 2, 1, 2]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsAcute, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsAcute, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsAcute], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.ISOSCELES_TRIANGLE_BASE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.ISOSCELES_TRIANGLE_ARM, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.ISOSCELES_TRIANGLE_ARM], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.ISOSCELES_ACUTE_TRIANGLE);
                    });
                }
            }
            else if (res == "dec5") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-4, -3.464], [4, -3.464], [0, 3.464]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE_XY | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.EQUILATERAL_TRIANGLE);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-4, -3.464], [4, -3.464], [0, 3.464]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR_X], [[0, 1]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.EQUILATERAL_TRIANGLE);
                    });
                }
            }
            else if (res == "dec6") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-5.47, -2.56], [4.8, -2.56], [0.96, 2.42]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE_XY | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.SCALENE_RIGHT_TRIANGLE);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-1.75, 0], [2, 0], [2, 3]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR_X | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE], [[0, 1, 2], [2, 1, 0]], [null, null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.RIGHT_TRIANGLE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.RIGHT_TRIANGLE_CATHETUS], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.SCALENE_RIGHT_TRIANGLE);
                    });
                }
            }
            else if (res == "dec7") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-5, -2.6], [5, -2.6], [0, 2.4]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE_XY | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1]], [null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.ISOSCELES_RIGHT_TRIANGLE);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-5, -2.6], [5, -2.6], [0, 2.4]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR_X | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR_X | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE], [[0, 1], [1, 2]], [null, null], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.ISOSCELES_RIGHT_TRIANGLE);
                    });
                }
            }
            else if (res == "dec8") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[0, -3.2], [-5.8, -3.2], [4.2, 2.6]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ALL_BASIC], [[0, 1]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsObtuse], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.NONE);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[0, -3.2], [-5.8, -3.2], [4.2, 2.6]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR], [[0, 1, 2]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsObtuse], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.NONE);
                    });
                }
            }
            else if (res == "dec9") {
                if (this.unfetteredShape) {
                    _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-6, 2], [5, 2], [-0.5, 5]], [], [], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.TRANSLATE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.SCALE | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.ROTATE], [[0, 1]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsObtuse], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.NONE], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.OBTUSE_ISOSCELES_TRIANGLE);
                }
                else {
                    this.getFixedSidePoints((points) => {
                        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.fullConfigurePolygon([[-6, 2], [5, 2], [-0.5, 5]], [], [[points[0][0], points[0][1]], [points[1][0], points[1][1]]], [0, 1], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MOVING_POINT | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.MIRROR | _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.AvailableTransformation.CHANGE_SIDE], [[0, 1, 2], [0, 2, 1, 0], [0, 2, 1, 2]], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsObtuse, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsObtuse, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.triangleIsObtuse], [_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.ISOSCELES_TRIANGLE_BASE, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.ISOSCELES_TRIANGLE_ARM, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DragRangeType.ISOSCELES_TRIANGLE_ARM], _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.DependeciesSetToSet.OBTUSE_ISOSCELES_TRIANGLE);
                    });
                }
            }
        });
    }
    /**
     * Function used in choosing fixed side points
     * @param function_to_do_with_points function to apply after points choosing
     * @ignore */
    getFixedSidePoints(function_to_do_with_points) {
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.chooseShapes("Choosing One Of Triangle Sides", [[_complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT, _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ShapeToSelect.SEGMENT_ENDS]], () => {
            let point_ids = _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_2__.ComplexShapeCreator.getChosenShapes();
            let points = [];
            if (point_ids[0].length == 2) {
                let ends = point_ids[0];
                let end1 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[0]);
                let end2 = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(ends[1]);
                points = [[end1.getAttr('x'), end1.getAttr('y')], [end2.getAttr('x'), end2.getAttr('y')]];
            }
            else {
                let segment_points = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(point_ids[0][0]).getAttr('points');
                points = [[segment_points[0], segment_points[1]], [segment_points[2], segment_points[3]]];
            }
            function_to_do_with_points.call(null, points);
        });
    }
}
TriangleComponent.ɵfac = function TriangleComponent_Factory(t) { return new (t || TriangleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal)); };
TriangleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: TriangleComponent, selectors: [["app-triangle"]], viewQuery: function TriangleComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.modalData2 = _t.first);
    } }, decls: 5, vars: 0, consts: [["type", "image", "src", "/static/imgs/TriangleIcon.svg", "alt", "Triangle Creating", 1, "icon-button", 3, "click"], ["modalData1", ""], ["modalData2", ""], [1, "modal-body", 2, "display", "flex", "justify-content", "center", "background-color", "#EBEBEB"], [1, "row", 2, "display", "flex", "justify-content", "center"], ["type", "button", 1, "btn", "modal-btn", 3, "click"], [1, "modal-header", "modal-title"], [1, "table", "modal-body", 2, "background-color", "#EBEBEB"], ["scope", "col"], ["scope", "row"]], template: function TriangleComponent_Template(rf, ctx) { if (rf & 1) {
        const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "input", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function TriangleComponent_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r17); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return ctx.isTrue() && ctx.triggerModal(_r0); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, TriangleComponent_ng_template_1_Template, 6, 0, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, TriangleComponent_ng_template_3_Template, 47, 0, "ng-template", null, 2, _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplateRefExtractor"]);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 3069:
/*!***************************************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/complex-shape-creator/complex-shape-creator.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComplexShapeCreatorComponent": () => (/* binding */ ComplexShapeCreatorComponent)
/* harmony export */ });
/* harmony import */ var _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 4364);



function ComplexShapeCreatorComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h5");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](7, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_0_Template_button_click_9_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r2.cancelChoosing(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](10, "Cancel");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](11, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r0.title);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r0.instructions);
} }
function ComplexShapeCreatorComponent_div_1_div_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h6", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r4.movingPointAlert);
} }
function ComplexShapeCreatorComponent_div_1_div_6_input_1_Template(rf, ctx) { if (rf & 1) {
    const _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_6_input_1_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r18); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r17.arrowLeft(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_6_input_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_6_input_2_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r19.arrowDown(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_6_input_3_Template(rf, ctx) { if (rf & 1) {
    const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_6_input_3_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r21.arrowUp(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_6_input_4_Template(rf, ctx) { if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_6_input_4_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r24); const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r23.arrowRight(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ComplexShapeCreatorComponent_div_1_div_6_input_1_Template, 1, 0, "input", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, ComplexShapeCreatorComponent_div_1_div_6_input_2_Template, 1, 0, "input", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, ComplexShapeCreatorComponent_div_1_div_6_input_3_Template, 1, 0, "input", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, ComplexShapeCreatorComponent_div_1_div_6_input_4_Template, 1, 0, "input", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r5.checkAvailableTransformation(1));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r5.checkAvailableTransformation(2));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r5.checkAvailableTransformation(2));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r5.checkAvailableTransformation(1));
} }
function ComplexShapeCreatorComponent_div_1_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function ComplexShapeCreatorComponent_div_1_div_8_input_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_8_input_1_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r30); const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r29.rescaleXYPlus(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_8_input_2_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_8_input_2_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r31.rescaleXPlus(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_8_input_3_Template(rf, ctx) { if (rf & 1) {
    const _r34 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_8_input_3_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r34); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r33.rescaleYPlus(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_8_input_4_Template(rf, ctx) { if (rf & 1) {
    const _r36 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_8_input_4_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r36); const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r35.rotateClockwise(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ComplexShapeCreatorComponent_div_1_div_8_input_1_Template, 1, 0, "input", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, ComplexShapeCreatorComponent_div_1_div_8_input_2_Template, 1, 0, "input", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, ComplexShapeCreatorComponent_div_1_div_8_input_3_Template, 1, 0, "input", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, ComplexShapeCreatorComponent_div_1_div_8_input_4_Template, 1, 0, "input", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r7.checkAvailableTransformation(16));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r7.checkAvailableTransformation(4));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r7.checkAvailableTransformation(8));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r7.checkAvailableTransformation(32));
} }
function ComplexShapeCreatorComponent_div_1_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function ComplexShapeCreatorComponent_div_1_div_10_input_1_Template(rf, ctx) { if (rf & 1) {
    const _r42 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_10_input_1_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r42); const ctx_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r41.rescaleXYMinus(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_10_input_2_Template(rf, ctx) { if (rf & 1) {
    const _r44 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_10_input_2_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r44); const ctx_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r43.rescaleXMinus(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_10_input_3_Template(rf, ctx) { if (rf & 1) {
    const _r46 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_10_input_3_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r46); const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r45.rescaleYMinus(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_10_input_4_Template(rf, ctx) { if (rf & 1) {
    const _r48 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_10_input_4_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r48); const ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r47.rotateCounterClockwise(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ComplexShapeCreatorComponent_div_1_div_10_input_1_Template, 1, 0, "input", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, ComplexShapeCreatorComponent_div_1_div_10_input_2_Template, 1, 0, "input", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, ComplexShapeCreatorComponent_div_1_div_10_input_3_Template, 1, 0, "input", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, ComplexShapeCreatorComponent_div_1_div_10_input_4_Template, 1, 0, "input", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r9.checkAvailableTransformation(16));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r9.checkAvailableTransformation(4));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r9.checkAvailableTransformation(8));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r9.checkAvailableTransformation(32));
} }
function ComplexShapeCreatorComponent_div_1_div_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function ComplexShapeCreatorComponent_div_1_div_12_input_1_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_12_input_1_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r54); const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r53.changeSide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_12_input_2_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_12_input_2_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r56); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r55.mirrorImageX(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_12_input_3_Template(rf, ctx) { if (rf & 1) {
    const _r58 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_12_input_3_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r58); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r57.mirrorImageY(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_12_input_4_Template(rf, ctx) { if (rf & 1) {
    const _r60 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "input", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_div_12_input_4_Template_input_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r60); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r59.reverse(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ComplexShapeCreatorComponent_div_1_div_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ComplexShapeCreatorComponent_div_1_div_12_input_1_Template, 1, 0, "input", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, ComplexShapeCreatorComponent_div_1_div_12_input_2_Template, 1, 0, "input", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, ComplexShapeCreatorComponent_div_1_div_12_input_3_Template, 1, 0, "input", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, ComplexShapeCreatorComponent_div_1_div_12_input_4_Template, 1, 0, "input", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r11.checkAvailableTransformation(64));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r11.checkAvailableTransformation(128));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r11.checkAvailableTransformation(256));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r11.checkAvailableTransformation(1024));
} }
function ComplexShapeCreatorComponent_div_1_div_13_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
} }
function ComplexShapeCreatorComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r62 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h5");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, "Shape Configuring");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, ComplexShapeCreatorComponent_div_1_div_4_Template, 4, 1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](5, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](6, ComplexShapeCreatorComponent_div_1_div_6_Template, 5, 4, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](7, ComplexShapeCreatorComponent_div_1_div_7_Template, 1, 0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](8, ComplexShapeCreatorComponent_div_1_div_8_Template, 5, 4, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, ComplexShapeCreatorComponent_div_1_div_9_Template, 1, 0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, ComplexShapeCreatorComponent_div_1_div_10_Template, 5, 4, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](11, ComplexShapeCreatorComponent_div_1_div_11_Template, 1, 0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, ComplexShapeCreatorComponent_div_1_div_12_Template, 5, 4, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](13, ComplexShapeCreatorComponent_div_1_div_13_Template, 1, 0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_Template_button_click_15_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r62); const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r61.confirmPolygonCreating(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](16, "Confirm");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](17, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ComplexShapeCreatorComponent_div_1_Template_button_click_19_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r62); const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r63.cancelConfiguring(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](20, "Cancel");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](21, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.displayMovingPointAlert);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(3));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(3));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(60));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(60));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(60));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(60));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(1472));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.checkAvailableTransformation(1472));
} }
class ComplexShapeCreatorComponent {
    constructor() {
        this.displayInstructions = false;
        this.displayPolygonMovement = false;
        this.availableTransformationType = _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.AvailableTransformation.NONE;
        this.title = "";
        this.instructions = "";
        this.displayMovingPointAlert = false;
        this.movingPointAlert = "";
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.displayInstructions$.subscribe(value => {
            this.displayInstructions = value;
        });
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.displayPolygonMovement$.subscribe(value => {
            this.displayPolygonMovement = value;
        });
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.titleToSet$.subscribe(value => {
            this.title = value;
        });
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.instructionToSet$.subscribe(value => {
            this.instructions = value;
        });
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.displayMovingPointAlert$.subscribe(value => {
            this.displayMovingPointAlert = value;
        });
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.movingPointAlert$.subscribe(value => {
            this.movingPointAlert = value;
        });
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.availableTransformationType$.subscribe(value => {
            this.availableTransformationType = value;
        });
    }
    ngOnInit() { }
    /**
    * Checking if specific transformation is now available to use.
    * @param transformation specific transformation to check
    * @returns true if transformation can be use, false otherwise
    * @ignore */
    checkAvailableTransformation(transformation) {
        return (transformation & this.availableTransformationType) != 0;
    }
    cancelChoosing() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.cancelChoosing();
    }
    arrowUp() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.translatePoints(0, 1, true);
    }
    arrowDown() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.translatePoints(0, -1, true);
    }
    arrowLeft() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.translatePoints(1, 0, true);
    }
    arrowRight() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.translatePoints(-1, 0, true);
    }
    rescaleXPlus() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.scalePoints(1.05, 1);
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.calculateTransformations();
    }
    rescaleYPlus() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.scalePoints(1, 1.05);
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.calculateTransformations();
    }
    rescaleXYPlus() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.scalePoints(1.05, 1.05);
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.calculateTransformations();
    }
    rescaleXMinus() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.scalePoints(0.95, 1);
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.calculateTransformations();
    }
    rescaleYMinus() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.scalePoints(1, 0.95);
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.calculateTransformations();
    }
    rescaleXYMinus() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.scalePoints(0.95, 0.95);
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.calculateTransformations();
    }
    rotateClockwise() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.rotatePoints(15, true, false);
    }
    rotateCounterClockwise() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.rotatePoints(15, false, false);
    }
    cancelConfiguring() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.cancelConfiguring();
    }
    confirmPolygonCreating() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.confirmPolygonCreating();
    }
    changeSide() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.changeSide();
    }
    mirrorImageX() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.mirrorImageX();
    }
    mirrorImageY() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.mirrorImageY();
    }
    reverse() {
        _complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.reverse();
    }
}
ComplexShapeCreatorComponent.ɵfac = function ComplexShapeCreatorComponent_Factory(t) { return new (t || ComplexShapeCreatorComponent)(); };
ComplexShapeCreatorComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ComplexShapeCreatorComponent, selectors: [["app-complex-shape-creator"]], decls: 2, vars: 2, consts: [["class", "d-flex justify-content-center", "style", "height: 100%; width: 100%;", 4, "ngIf"], [1, "d-flex", "justify-content-center", 2, "height", "100%", "width", "100%"], [1, "d-flex", "flex-column", "justify-content-center", 2, "text-align", "center", "height", "100%", "width", "100%"], [1, "spacer"], [1, "d-flex", "justify-content-center"], [1, "btn", "my-btn", 2, "width", "50%", 3, "click"], [4, "ngIf"], ["class", "d-flex flex-row icons-row", 4, "ngIf"], ["class", "spacer", 4, "ngIf"], [2, "margin-top", "20px", "margin-bottom", "20px"], [1, "d-flex", "flex-row", "icons-row"], ["type", "image", "class", "icon-button", "src", "/static/imgs/LeftArrowIcon.svg", "alt", "Move Left", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/DownArrowIcon.svg", "alt", "Move Down", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/UpArrowIcon.svg", "alt", "Move Up", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RightArrowIcon.svg", "alt", "Move Right", 3, "click", 4, "ngIf"], ["type", "image", "src", "/static/imgs/LeftArrowIcon.svg", "alt", "Move Left", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/DownArrowIcon.svg", "alt", "Move Down", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/UpArrowIcon.svg", "alt", "Move Up", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/RightArrowIcon.svg", "alt", "Move Right", 1, "icon-button", 3, "click"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RescaleXYPlusIcon.svg", "alt", "Scale Proportionally", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RescaleXPlusIcon.svg", "alt", "Scale Along X Axis", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RescaleYPlusIcon.svg", "alt", "Scale Along Y Axis", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RotateClockwiseIcon.svg", "alt", "Rotate Clockwise", 3, "click", 4, "ngIf"], ["type", "image", "src", "/static/imgs/RescaleXYPlusIcon.svg", "alt", "Scale Proportionally", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/RescaleXPlusIcon.svg", "alt", "Scale Along X Axis", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/RescaleYPlusIcon.svg", "alt", "Scale Along Y Axis", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/RotateClockwiseIcon.svg", "alt", "Rotate Clockwise", 1, "icon-button", 3, "click"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RescaleXYMinusIcon.svg", "alt", "Scale Proportionally", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RescaleXMinusIcon.svg", "alt", "Scale Along X Axis", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RescaleYMinusIcon.svg", "alt", "Scale Along Y Axis", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/RotateCounterClockwiseIcon.svg", "alt", "Rotate Counter Clockwise", 3, "click", 4, "ngIf"], ["type", "image", "src", "/static/imgs/RescaleXYMinusIcon.svg", "alt", "Scale Proportionally", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/RescaleXMinusIcon.svg", "alt", "Scale Along X Axis", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/RescaleYMinusIcon.svg", "alt", "Scale Along Y Axis", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/RotateCounterClockwiseIcon.svg", "alt", "Rotate Counter Clockwise", 1, "icon-button", 3, "click"], ["type", "image", "class", "icon-button", "src", "/static/imgs/ChangeSideIcon.svg", "alt", "Change Side", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/MirrorXIcon.svg", "alt", "Mirror Image Along X", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/MirrorYIcon.svg", "alt", "Mirror Image Along Y", 3, "click", 4, "ngIf"], ["type", "image", "class", "icon-button", "src", "/static/imgs/ReverseIcon.svg", "alt", "Reverse", 3, "click", 4, "ngIf"], ["type", "image", "src", "/static/imgs/ChangeSideIcon.svg", "alt", "Change Side", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/MirrorXIcon.svg", "alt", "Mirror Image Along X", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/MirrorYIcon.svg", "alt", "Mirror Image Along Y", 1, "icon-button", 3, "click"], ["type", "image", "src", "/static/imgs/ReverseIcon.svg", "alt", "Reverse", 1, "icon-button", 3, "click"]], template: function ComplexShapeCreatorComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, ComplexShapeCreatorComponent_div_0_Template, 12, 2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ComplexShapeCreatorComponent_div_1_Template, 22, 9, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.displayInstructions);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.displayPolygonMovement);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf], styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 7890:
/*!******************************************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/complex-shape-creator/complex-shapes-creator.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShapeToSelect": () => (/* binding */ ShapeToSelect),
/* harmony export */   "AvailableTransformation": () => (/* binding */ AvailableTransformation),
/* harmony export */   "DragRangeType": () => (/* binding */ DragRangeType),
/* harmony export */   "DependeciesSetToSet": () => (/* binding */ DependeciesSetToSet),
/* harmony export */   "ComplexShapeCreator": () => (/* binding */ ComplexShapeCreator)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 6491);
/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../canvas */ 7909);
/* harmony import */ var _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../canvas-manager-interface */ 833);
/**
 * Module contains a static class ComplexShapeCreator for creating complex geometric shapes
 * or constructions and an enum ShapeToSelect for selecting the necessary shapes for ComplexShapeCreator purpose.
 *
 * @module Complex Shapes Creator
 */



/**
 * Enum holds available shapes to select to create complex shapes or geometric constructions.
 */
var ShapeToSelect;
(function (ShapeToSelect) {
    ShapeToSelect[ShapeToSelect["EXISTING_POINT"] = 0] = "EXISTING_POINT";
    ShapeToSelect[ShapeToSelect["NEW_POINT_CLICK_ON_CANVAS"] = 1] = "NEW_POINT_CLICK_ON_CANVAS";
    ShapeToSelect[ShapeToSelect["NEW_POINT_CLICK_ON_SEGMENT"] = 2] = "NEW_POINT_CLICK_ON_SEGMENT";
    ShapeToSelect[ShapeToSelect["NEW_POINT_CLICK_ON_CIRCLE"] = 3] = "NEW_POINT_CLICK_ON_CIRCLE";
    ShapeToSelect[ShapeToSelect["SEGMENT"] = 4] = "SEGMENT";
    ShapeToSelect[ShapeToSelect["SEGMENT_ENDS"] = 5] = "SEGMENT_ENDS";
    ShapeToSelect[ShapeToSelect["CIRCLE"] = 6] = "CIRCLE";
})(ShapeToSelect || (ShapeToSelect = {}));
/**
 * Enum holds available shape transformations.
 */
var AvailableTransformation;
(function (AvailableTransformation) {
    AvailableTransformation[AvailableTransformation["NONE"] = 0] = "NONE";
    // basic transformations:
    AvailableTransformation[AvailableTransformation["TRANSLATE_X"] = 1] = "TRANSLATE_X";
    AvailableTransformation[AvailableTransformation["TRANSLATE_Y"] = 2] = "TRANSLATE_Y";
    AvailableTransformation[AvailableTransformation["TRANSLATE"] = 3] = "TRANSLATE";
    AvailableTransformation[AvailableTransformation["SCALE_X"] = 4] = "SCALE_X";
    AvailableTransformation[AvailableTransformation["SCALE_Y"] = 8] = "SCALE_Y";
    AvailableTransformation[AvailableTransformation["SCALE_XY"] = 16] = "SCALE_XY";
    AvailableTransformation[AvailableTransformation["SCALE"] = 28] = "SCALE";
    AvailableTransformation[AvailableTransformation["ROTATE"] = 32] = "ROTATE";
    AvailableTransformation[AvailableTransformation["ALL_BASIC"] = 63] = "ALL_BASIC";
    // special transformations:
    AvailableTransformation[AvailableTransformation["CHANGE_SIDE"] = 64] = "CHANGE_SIDE";
    AvailableTransformation[AvailableTransformation["MIRROR_X"] = 128] = "MIRROR_X";
    AvailableTransformation[AvailableTransformation["MIRROR_Y"] = 256] = "MIRROR_Y";
    AvailableTransformation[AvailableTransformation["MIRROR"] = 384] = "MIRROR";
    AvailableTransformation[AvailableTransformation["ALL_SPECIAL"] = 448] = "ALL_SPECIAL";
    // additional transformation:
    AvailableTransformation[AvailableTransformation["MOVING_POINT"] = 512] = "MOVING_POINT";
    AvailableTransformation[AvailableTransformation["REVERSE"] = 1024] = "REVERSE";
})(AvailableTransformation || (AvailableTransformation = {}));
/**
 * Enum holds available drag range types.
 */
var DragRangeType;
(function (DragRangeType) {
    DragRangeType[DragRangeType["NONE"] = 0] = "NONE";
    DragRangeType[DragRangeType["ISOSCELES_TRIANGLE_ARM"] = 1] = "ISOSCELES_TRIANGLE_ARM";
    DragRangeType[DragRangeType["ISOSCELES_TRIANGLE_BASE"] = 2] = "ISOSCELES_TRIANGLE_BASE";
    DragRangeType[DragRangeType["RIGHT_TRIANGLE"] = 3] = "RIGHT_TRIANGLE";
    DragRangeType[DragRangeType["RIGHT_TRIANGLE_CATHETUS"] = 4] = "RIGHT_TRIANGLE_CATHETUS";
    DragRangeType[DragRangeType["RECTANGLE"] = 5] = "RECTANGLE";
    DragRangeType[DragRangeType["PARALLELOGRAM"] = 6] = "PARALLELOGRAM";
    DragRangeType[DragRangeType["RHOMBUS"] = 7] = "RHOMBUS";
    DragRangeType[DragRangeType["KITE"] = 8] = "KITE";
    DragRangeType[DragRangeType["RIGHT_TRAPEZOID_BASE"] = 9] = "RIGHT_TRAPEZOID_BASE";
    DragRangeType[DragRangeType["ISOSCELES_TRAPEZOID_BASE"] = 10] = "ISOSCELES_TRAPEZOID_BASE";
})(DragRangeType || (DragRangeType = {}));
var DependeciesSetToSet;
(function (DependeciesSetToSet) {
    DependeciesSetToSet[DependeciesSetToSet["NONE"] = 0] = "NONE";
    DependeciesSetToSet[DependeciesSetToSet["ISOSCELES_ACUTE_TRIANGLE"] = 1] = "ISOSCELES_ACUTE_TRIANGLE";
    DependeciesSetToSet[DependeciesSetToSet["EQUILATERAL_TRIANGLE"] = 2] = "EQUILATERAL_TRIANGLE";
    DependeciesSetToSet[DependeciesSetToSet["SCALENE_RIGHT_TRIANGLE"] = 3] = "SCALENE_RIGHT_TRIANGLE";
    DependeciesSetToSet[DependeciesSetToSet["ISOSCELES_RIGHT_TRIANGLE"] = 4] = "ISOSCELES_RIGHT_TRIANGLE";
    DependeciesSetToSet[DependeciesSetToSet["OBTUSE_ISOSCELES_TRIANGLE"] = 5] = "OBTUSE_ISOSCELES_TRIANGLE";
    DependeciesSetToSet[DependeciesSetToSet["SQUARE"] = 6] = "SQUARE";
    DependeciesSetToSet[DependeciesSetToSet["RECTANGLE"] = 7] = "RECTANGLE";
    DependeciesSetToSet[DependeciesSetToSet["REGULAR_POLYGON"] = 8] = "REGULAR_POLYGON";
    DependeciesSetToSet[DependeciesSetToSet["PARALLELOGRAM"] = 9] = "PARALLELOGRAM";
    DependeciesSetToSet[DependeciesSetToSet["KITE"] = 10] = "KITE";
    DependeciesSetToSet[DependeciesSetToSet["RHOMBUS"] = 11] = "RHOMBUS";
    DependeciesSetToSet[DependeciesSetToSet["SCALENE_TRAPEZOID"] = 12] = "SCALENE_TRAPEZOID";
    DependeciesSetToSet[DependeciesSetToSet["ISOSCELES_TRAPEZOID"] = 13] = "ISOSCELES_TRAPEZOID";
    DependeciesSetToSet[DependeciesSetToSet["RIGHT_TRAPEZOID"] = 14] = "RIGHT_TRAPEZOID";
})(DependeciesSetToSet || (DependeciesSetToSet = {}));
/**
 * Static class which managers creating complex shapes and geometric constructions.
 */
class ComplexShapeCreator {
    /** Empty function: static class has no constructor. */
    constructor() { }
    /**
     * Calculating shape size unit value for a given canva.
     * The value is negative because the axes in canva are reversed relative to the Cartesian system.
     * @returns value of calculated unit
     */
    static getUnit() {
        return -Math.min(_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getScreenWidth(), _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getScreenHeight()) / ComplexShapeCreator.unitDivisor;
    }
    /**
     * Start choosing shapes to create complex shape or geometrical construction.
     * @param title title of instructions to set
     * @param shapes array with shapes arrays to select
     * @param functionToDo function to apply after selection of given shapes with given types
     */
    static chooseShapes(title, shapes, functionToDo) {
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.COMPLEX_SHAPE);
        ComplexShapeCreator.counter = 0;
        ComplexShapeCreator.shapesToClick = shapes;
        ComplexShapeCreator.functionToDo = functionToDo;
        ComplexShapeCreator.shapesClicked = [];
        ComplexShapeCreator.segmentEndsChoosing = [];
        ComplexShapeCreator.titleToSet$.next(title);
        ComplexShapeCreator.instructionToSet$.next(ComplexShapeCreator.getInstructions());
        ComplexShapeCreator.displayComplexShapeCreator$.next(true);
        ComplexShapeCreator.displayInstructions$.next(true);
    }
    /**
     * Cancel choosing shapes to create complex shape or geometrical construction.
     */
    static cancelChoosing() {
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentlyComplexShape(_canvas__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeEnum.NONE);
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setBaseToPromptingLine(null);
        ComplexShapeCreator.displayComplexShapeCreator$.next(false);
        ComplexShapeCreator.displayInstructions$.next(false);
        ComplexShapeCreator.titleToSet$.next("");
        ComplexShapeCreator.instructionToSet$.next("");
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.activateShapes([]);
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearBatchLayer();
    }
    /**
     * Check if event from {@link Canvas} - click on canvas - matches to the currenty required shape type to select.
     * If it matches process event.
     * @param x X coordinate of click
     * @param y Y coordinate of click
     * @param next_id ID to set for new created shape
     */
    static clickedOnCanvas(x, y, next_id) {
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS)) {
            ComplexShapeCreator.shapesClicked.push([next_id]);
            _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnCanvas(x, y);
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForShapeAppear(next_id);
            ComplexShapeCreator.afterClickedOnShape();
        }
    }
    static arrayIncludesId(array, id) {
        for (let i = 0; i < array.length; i++) {
            if (array[i].length == 1 && id.length == 1) {
                if (array[i][0] == id[0]) {
                    return true;
                }
            }
            else if (array[i].length == 2 && id.length == 2) {
                if (array[i][0] == id[0] && array[i][1] == id[1]) {
                    return true;
                }
                else if (array[i][0] == id[1] && array[i][1] == id[0]) {
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Check if event from {@link Canvas} - click on point - matches to the currenty required shape type to select.
     * If it matches process event.
     * @param id ID of clicked shape
     */
    static clickedOnPoint(id) {
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.EXISTING_POINT)) {
            if (!ComplexShapeCreator.arrayIncludesId(ComplexShapeCreator.shapesClicked, [id])) {
                ComplexShapeCreator.shapesClicked.push([id]);
                ComplexShapeCreator.afterClickedOnShape();
            }
        }
        else if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.SEGMENT_ENDS)) {
            if (!(ComplexShapeCreator.segmentEndsChoosing.includes(id))) {
                ComplexShapeCreator.segmentEndsChoosing.push(id);
                let shapesToActivate = [];
                ComplexShapeCreator.segmentEndsChoosing.forEach(element => {
                    shapesToActivate.push(element);
                });
                ComplexShapeCreator.shapesClicked.forEach(element => {
                    if (element.length == 1) {
                        shapesToActivate.push(element[0]);
                    }
                    else {
                        shapesToActivate.push(element[0]);
                        shapesToActivate.push(element[1]);
                    }
                });
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.activateShapes(shapesToActivate);
                if (ComplexShapeCreator.segmentEndsChoosing.length == 2) {
                    let segment_id = [0, 0];
                    if (ComplexShapeCreator.segmentEndsChoosing[0] < ComplexShapeCreator.segmentEndsChoosing[1])
                        segment_id = [ComplexShapeCreator.segmentEndsChoosing[0], ComplexShapeCreator.segmentEndsChoosing[1]];
                    else
                        segment_id = [ComplexShapeCreator.segmentEndsChoosing[1], ComplexShapeCreator.segmentEndsChoosing[0]];
                    if (!ComplexShapeCreator.arrayIncludesId(ComplexShapeCreator.shapesClicked, segment_id)) {
                        ComplexShapeCreator.shapesClicked.push(segment_id);
                        ComplexShapeCreator.segmentEndsChoosing = [];
                        ComplexShapeCreator.afterClickedOnShape();
                    }
                    else {
                        // version 1
                        //ComplexShapeCreator.segmentEndsChoosing.pop();
                        //Canvas.activateShapes(ComplexShapeCreator.shapesClicked.concat(ComplexShapeCreator.segmentEndsChoosing));
                        // version 2
                        ComplexShapeCreator.segmentEndsChoosing = [];
                        shapesToActivate = [];
                        ComplexShapeCreator.shapesClicked.forEach(element => {
                            if (element.length == 1) {
                                shapesToActivate.push(element[0]);
                            }
                            else {
                                shapesToActivate.push(element[0]);
                                shapesToActivate.push(element[1]);
                            }
                        });
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.activateShapes(shapesToActivate);
                    }
                }
            }
        }
    }
    /**
     * Check if event from {@link Canvas} - click on line - matches to the currenty required shape type to select.
     * If it matches process event.
     * @param id ID of clicked shape
     * @param x X coordinate of click
     * @param y Y coordinate of click
     * @param next_id ID to set for new created shape
     */
    static clickedOnLine(id, x, y, next_id) {
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.SEGMENT)) {
            let endIDs = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getSegmentEnds(id);
            if (!ComplexShapeCreator.arrayIncludesId(ComplexShapeCreator.shapesClicked, endIDs)) {
                if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentlyComplexShape() == _canvas__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeEnum.PERPENDICULAR_LINE || _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getCurrentlyComplexShape() == _canvas__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeEnum.PARALLEL_LINE) {
                    let segment = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getShape(id);
                    let p = segment.getAttr('points');
                    if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p[0] - p[2], 0, 0.1)) {
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setBaseToPromptingLine([null, p[0]]);
                    }
                    else {
                        let a = (p[1] - p[3]) / (p[0] - p[2]);
                        let b = p[1] - a * p[0];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setBaseToPromptingLine([a, b]);
                    }
                }
                if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.SEGMENT_ENDS)) {
                    ComplexShapeCreator.shapesClicked.push(endIDs);
                }
                else {
                    ComplexShapeCreator.shapesClicked.push([id]);
                }
                ComplexShapeCreator.afterClickedOnShape();
            }
        }
        else if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT)) {
            ComplexShapeCreator.shapesClicked.push([next_id]);
            _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnSegment(id, x, y);
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForShapeAppear(next_id);
            ComplexShapeCreator.afterClickedOnShape();
        }
    }
    /**
     * Check if event from {@link Canvas} - click on circle - matches to the currenty required shape type to select.
     * If it matches process event.
     * @param id ID of clicked shape
     * @param x X coordinate of click
     * @param y Y coordinate of click
     * @param next_id ID to set for new created shape
     */
    static clickedOnCircle(id, x, y, next_id) {
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.CIRCLE)) {
            if (!ComplexShapeCreator.arrayIncludesId(ComplexShapeCreator.shapesClicked, [id])) {
                ComplexShapeCreator.shapesClicked.push([id]);
                ComplexShapeCreator.afterClickedOnShape();
            }
        }
        else if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE)) {
            ComplexShapeCreator.shapesClicked.push([next_id]);
            _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnCircle(id, x, y);
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.waitForShapeAppear(next_id);
            ComplexShapeCreator.afterClickedOnShape();
        }
    }
    /**
     * Get IDs of selected shapes.
     * @returns array with IDs of selected shapes
     */
    static getChosenShapes() {
        return ComplexShapeCreator.shapesClicked;
    }
    /**
     * Initializing smooth and intuitive specific shape creation
     * @param startUnitVertices array with  arrays representing shape vertices coordinates in unit size
     * @param fixedVertices array with numbers of shape vertices which are fixed
     * @param oxAxis array with numbers of shape vertices which form a segment parallel to the OX axis
     * @param availableTransformations array with numbers representing available transformations
     * @param parsedSidesOrder order of shape vertices in which shape vertices should be processed
     * @param confirmationFunctions array with functions which validate the correctness of the properties of the modified shape
     * @param dragRanges array with drag ranges which limit movement of moving point
     */
    static fullConfigurePolygon(startUnitVertices, fixedVerticesIds, fixedVertices, oxAxis, availableTransformations, parsedSidesOrder, confirmationFunctions, dragRanges, polygonType) {
        let calculatedUnit = ComplexShapeCreator.getUnit();
        let centerX = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getWidth() / 2;
        let centerY = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getHeight() / 2;
        for (let i = 0; i < startUnitVertices.length; i++) {
            startUnitVertices[i] = [centerX + startUnitVertices[i][0] * calculatedUnit, centerY + startUnitVertices[i][1] * calculatedUnit];
        }
        ComplexShapeCreator.startVertices = startUnitVertices.map((el) => { return el; });
        ComplexShapeCreator.currentPoints = startUnitVertices.map((el) => { return el; });
        ComplexShapeCreator.fixedVerticesIds = fixedVerticesIds.map((el) => { return el; });
        ComplexShapeCreator.fixedVertices = fixedVertices.map((el) => { return el; });
        ComplexShapeCreator.transformationsCounter = 0;
        ComplexShapeCreator.fixedVerticesStartPoint = 0;
        ComplexShapeCreator.oxAxis = oxAxis;
        ComplexShapeCreator.parsedSidesOrder = parsedSidesOrder;
        ComplexShapeCreator.availableTransformations = availableTransformations;
        ComplexShapeCreator.confirmationFunctions = confirmationFunctions;
        ComplexShapeCreator.dragRanges = dragRanges;
        ComplexShapeCreator.polygonType = polygonType;
        ComplexShapeCreator.calculateTransformations();
        ComplexShapeCreator.correctCurrentPoints();
        ComplexShapeCreator.availableTransformationType$.next(availableTransformations[0]);
        ComplexShapeCreator.displayComplexShapeCreator$.next(true);
        ComplexShapeCreator.displayPolygonMovement$.next(true);
        setTimeout(() => { _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints); }, 50);
    }
    /**
     * Calculating start transformations and setting moving point properties if applicable
     */
    static calculateTransformations() {
        if (ComplexShapeCreator.fixedVertices.length == 0) {
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
        }
        else if (ComplexShapeCreator.fixedVertices.length == 2) {
            let p = ComplexShapeCreator.parsedSidesOrder[ComplexShapeCreator.transformationsCounter];
            let fs = ComplexShapeCreator.fixedVertices;
            if (ComplexShapeCreator.fixedVerticesStartPoint == 1) {
                fs = [fs[1], fs[0]];
            }
            let ps = [ComplexShapeCreator.currentPoints[p[0]], ComplexShapeCreator.currentPoints[p[1]]];
            // calculating scale
            let fs_module = ComplexShapeCreator.calculateSideLength(fs);
            let ps_module = ComplexShapeCreator.calculateSideLength(ps);
            let k = fs_module / ps_module;
            ComplexShapeCreator.scalePoints(k, k);
            // calculating rotation
            ps = [ComplexShapeCreator.currentPoints[p[0]], ComplexShapeCreator.currentPoints[p[1]]];
            let theta1 = Math.atan2(fs[1][1] - fs[0][1], fs[1][0] - fs[0][0]);
            let theta2 = Math.atan2(ps[1][1] - ps[0][1], ps[1][0] - ps[0][0]);
            let theta = theta2 - theta1;
            if (Math.abs(theta) < 0.5) { // under ComplexShapeCreator threshold trigonometric functions become inaccurate - creating bigger difference
                ComplexShapeCreator.rotatePoints(1, false, true);
                ps = [ComplexShapeCreator.currentPoints[p[0]], ComplexShapeCreator.currentPoints[p[1]]];
                theta1 = Math.atan2(fs[1][1] - fs[0][1], fs[1][0] - fs[0][0]);
                theta2 = Math.atan2(ps[1][1] - ps[0][1], ps[1][0] - ps[0][0]);
                theta = theta2 - theta1;
            }
            ComplexShapeCreator.rotatePoints(theta, false, true);
            // calculating translation
            ps = [ComplexShapeCreator.currentPoints[p[0]], ComplexShapeCreator.currentPoints[p[1]]];
            let tx = fs[0][0] - ps[0][0];
            let ty = fs[0][1] - ps[0][1];
            ComplexShapeCreator.translatePoints(tx, ty, false);
        }
        else { } // unuse 
        if (ComplexShapeCreator.availableTransformations[ComplexShapeCreator.transformationsCounter] & AvailableTransformation.MOVING_POINT) {
            let p = ComplexShapeCreator.parsedSidesOrder[ComplexShapeCreator.transformationsCounter];
            let dragRange = ComplexShapeCreator.dragRanges[ComplexShapeCreator.transformationsCounter];
            let coordsChanger;
            if (dragRange == DragRangeType.ISOSCELES_TRIANGLE_ARM) {
                coordsChanger = (x, y) => {
                    let r = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[p[0]], ComplexShapeCreator.currentPoints[p[1]]]);
                    let new_coords = ComplexShapeCreator.getCoordsOnCircle(ComplexShapeCreator.currentPoints[p[3]][0], ComplexShapeCreator.currentPoints[p[3]][1], r, x, y);
                    ComplexShapeCreator.currentPoints[p[2]] = new_coords;
                    _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                    return new_coords;
                };
                let r = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[p[0]], ComplexShapeCreator.currentPoints[p[1]]]);
                let x = ComplexShapeCreator.currentPoints[p[2]][0];
                let y = ComplexShapeCreator.currentPoints[p[2]][1];
                let new_coords = ComplexShapeCreator.getCoordsOnCircle(ComplexShapeCreator.currentPoints[p[3]][0], ComplexShapeCreator.currentPoints[p[3]][1], r, x, y);
                ComplexShapeCreator.currentPoints[p[2]] = new_coords;
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
            }
            else if (dragRange == DragRangeType.ISOSCELES_TRIANGLE_BASE) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[1] - p2[1], 0, 0.1)) {
                    // mid-perpendicular line to the triangle base: x = b
                    let b = (p1[0] + p2[0]) / 2;
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [b, y];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [b, y];
                    };
                }
                else {
                    // mid-perpendicular line to the triangle base: y = ax + b
                    let a = (p1[0] - p2[0]) / (p2[1] - p1[1]);
                    let midx = (p1[0] + p2[0]) / 2;
                    let midy = (p1[1] + p2[1]) / 2;
                    let b = midy - a * midx;
                    coordsChanger = (x, y) => {
                        let newX = (y - b) / a;
                        let newY = a * x + b;
                        let d1 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[p[2]], [x, newY]]);
                        let d2 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[p[2]], [newX, y]]);
                        if (d1 < d2) {
                            ComplexShapeCreator.currentPoints[p[2]] = [x, a * x + b];
                            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                            return [x, a * x + b];
                        }
                        else {
                            ComplexShapeCreator.currentPoints[p[2]] = [(y - b) / a, y];
                            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                            return [(y - b) / a, y];
                        }
                    };
                }
            }
            else if (dragRange == DragRangeType.RIGHT_TRIANGLE) {
                let e1 = ComplexShapeCreator.currentPoints[p[0]];
                let e2 = ComplexShapeCreator.currentPoints[p[1]];
                let r = 0.5 * ComplexShapeCreator.calculateSideLength([e1, e2]);
                let centerX = 0.5 * (e1[0] + e2[0]);
                let centerY = 0.5 * (e1[1] + e2[1]);
                coordsChanger = (x, y) => {
                    let new_coords = ComplexShapeCreator.getCoordsOnCircle(centerX, centerY, r, x, y);
                    ComplexShapeCreator.currentPoints[p[2]] = new_coords;
                    _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                    return new_coords;
                };
                let x = ComplexShapeCreator.currentPoints[p[2]][0];
                let y = ComplexShapeCreator.currentPoints[p[2]][1];
                let new_coords = ComplexShapeCreator.getCoordsOnCircle(centerX, centerY, r, x, y);
                ComplexShapeCreator.currentPoints[p[2]] = new_coords;
                _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
            }
            else if (dragRange == DragRangeType.RIGHT_TRIANGLE_CATHETUS) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[1] - p2[1], 0, 0.1)) {
                    // perpendicular line to the triangle cathetus: x = b
                    let b = p2[0];
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [b, y];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [b, y];
                    };
                }
                else {
                    // perpendicular line to the triangle cathetus: y = ax + b
                    let a = (p1[0] - p2[0]) / (p2[1] - p1[1]);
                    let b = p2[1] - a * p2[0];
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [x, a * x + b];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, a * x + b];
                    };
                }
            }
            else if (dragRange == DragRangeType.RECTANGLE) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[1] - p2[1], 0, 0.1)) {
                    // perpendicular line to the rectangle side: x = b
                    let b = p2[0];
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [b, y];
                        ComplexShapeCreator.currentPoints[p[3]][1] = y;
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [b, y];
                    };
                }
                else {
                    // perpendicular line to the rectangle side: y = ax + b
                    let a = (p1[0] - p2[0]) / (p2[1] - p1[1]);
                    let b = p2[1] - a * p2[0];
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [x, a * x + b];
                        let dx = x - p2[0];
                        let dy = a * x + b - p2[1];
                        ComplexShapeCreator.currentPoints[p[3]] = [p1[0] + dx, p1[1] + dy];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, a * x + b];
                    };
                }
            }
            else if (dragRange == DragRangeType.PARALLELOGRAM) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                coordsChanger = (x, y) => {
                    ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                    let dx = x - p2[0];
                    let dy = y - p2[1];
                    ComplexShapeCreator.currentPoints[p[3]] = [p1[0] + dx, p1[1] + dy];
                    _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                    return [x, y];
                };
            }
            else if (dragRange == DragRangeType.RHOMBUS) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                coordsChanger = (x, y) => {
                    let r = ComplexShapeCreator.calculateSideLength([p1, p2]);
                    let new_coords = ComplexShapeCreator.getCoordsOnCircle(p2[0], p2[1], r, x, y);
                    ComplexShapeCreator.currentPoints[p[2]] = new_coords;
                    let dx = new_coords[0] - p2[0];
                    let dy = new_coords[1] - p2[1];
                    ComplexShapeCreator.currentPoints[p[3]] = [p1[0] + dx, p1[1] + dy];
                    _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                    return new_coords;
                };
            }
            else if (dragRange == DragRangeType.KITE) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                coordsChanger = (x, y) => {
                    let p3 = [x, y];
                    if (ComplexShapeCreator.angleIsObtuse(p1, p2, p3)) {
                        let result;
                        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[0] - p3[0], 0, 0.1)) {
                            result = [2 * p1[0] - p2[0], p2[1]];
                        }
                        else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[1] - p3[1], 0, 0.1)) {
                            result = [p2[0], 2 * p1[1] - p2[1]];
                        }
                        else {
                            let a1 = (p3[1] - p1[1]) / (p3[0] - p1[0]);
                            let b1 = p3[1] - a1 * p3[0];
                            let a2 = (p3[0] - p1[0]) / (p1[1] - p3[1]);
                            let b2 = p2[1] - a2 * p2[0];
                            let midx = (b2 - b1) / (a1 - a2);
                            let midy = a1 * midx + b1;
                            result = [2 * midx - p2[0], 2 * midy - p2[1]];
                        }
                        ComplexShapeCreator.currentPoints[p[2]] = p3;
                        ComplexShapeCreator.currentPoints[p[3]] = result;
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                    }
                    return ComplexShapeCreator.currentPoints[p[2]];
                };
            }
            else if (dragRange == DragRangeType.RIGHT_TRAPEZOID_BASE) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                let p4 = ComplexShapeCreator.currentPoints[p[3]];
                if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[0] - p2[0], 0, 0.1)) {
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                        ComplexShapeCreator.currentPoints[p[3]][0] = x;
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, y];
                    };
                }
                else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[1] - p2[1], 0, 0.1)) {
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                        ComplexShapeCreator.currentPoints[p[3]][1] = y;
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, y];
                    };
                }
                else {
                    coordsChanger = (x, y) => {
                        let a1 = (p1[1] - p2[1]) / (p1[0] - p2[0]);
                        let b1 = y - a1 * x;
                        let a2 = (p2[0] - p1[0]) / (p1[1] - p2[1]);
                        let b2 = p4[1] - a2 * p4[0];
                        let newX = (b2 - b1) / (a1 - a2);
                        let newY = a1 * newX + b1;
                        ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                        ComplexShapeCreator.currentPoints[p[3]] = [newX, newY];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, y];
                    };
                }
            }
            else if (dragRange == DragRangeType.ISOSCELES_TRAPEZOID_BASE) {
                let p1 = ComplexShapeCreator.currentPoints[p[0]];
                let p2 = ComplexShapeCreator.currentPoints[p[1]];
                let p4 = ComplexShapeCreator.currentPoints[p[3]];
                if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[0] - p2[0], 0, 0.1)) {
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                        ComplexShapeCreator.currentPoints[p[3]] = [x, p1[1] - y + p2[1]];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, y];
                    };
                }
                else if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(p1[1] - p2[1], 0, 0.1)) {
                    coordsChanger = (x, y) => {
                        ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                        ComplexShapeCreator.currentPoints[p[3]] = [p1[0] - x + p2[0], y];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, y];
                    };
                }
                else {
                    coordsChanger = (x, y) => {
                        // znana podstawa
                        let a1 = (p2[1] - p1[1]) / (p2[0] - p1[0]);
                        // druga podstawa
                        let a2 = a1;
                        let b2 = y - a2 * x;
                        // prostopadla do znanej podstawy przez jej srodek
                        let midX = (p1[0] + p2[0]) / 2;
                        let midY = (p1[1] + p2[1]) / 2;
                        let a3 = (p2[0] - p1[0]) / (p1[1] - p2[1]);
                        let b3 = midY - a3 * midX;
                        let midX2 = (b2 - b3) / (a3 - a2);
                        let midY2 = a3 * midX2 + b3;
                        ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                        ComplexShapeCreator.currentPoints[p[3]] = [2 * midX2 - x, 2 * midY2 - y];
                        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                        return [x, y];
                    };
                }
            }
            else {
                coordsChanger = (x, y) => {
                    ComplexShapeCreator.currentPoints[p[2]] = [x, y];
                    _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
                    return [x, y];
                };
            }
            // creating instance of moving point
            let mp = ComplexShapeCreator.currentPoints[p[2]];
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.createMovingPromptingPoint(mp[0], mp[1], coordsChanger);
        }
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
    }
    static allPointOnCanvas() {
        for (let i = 0; i < ComplexShapeCreator.currentPoints.length; i++) {
            let element = ComplexShapeCreator.currentPoints[i];
            if (element[0] <= 0 || element[1] <= 0 || element[0] >= _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getWidth() || element[1] >= _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getHeight()) {
                return false;
            }
        }
        return true;
    }
    static correctCurrentPoints() {
        //while(!ComplexShapeCreator.allPointOnCanvas()) {
        //    console.log('JAKIS PUNKT JEST POZA CANVA');
        //}
    }
    /**
     * Cancel configuring shape
     */
    static cancelConfiguring() {
        ComplexShapeCreator.displayComplexShapeCreator$.next(false);
        ComplexShapeCreator.displayPolygonMovement$.next(false);
        ComplexShapeCreator.displayMovingPointAlert$.next(false);
        ComplexShapeCreator.movingPointAlert$.next("");
        ComplexShapeCreator.currentPoints = [];
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.clearBatchLayer();
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.deleteMovingPromptingPoint();
    }
    /**
    * Confirmation of the creation of a new shape.
    * If the current function from {@link ComplexShapeCreator.confirmationFunctions} returns true, a new shape is created
    */
    static confirmPolygonCreating() {
        let confirmationFunction = ComplexShapeCreator.confirmationFunctions[ComplexShapeCreator.transformationsCounter];
        if (confirmationFunction) {
            if (!confirmationFunction.call(null, ComplexShapeCreator.currentPoints)) {
                ComplexShapeCreator.displayMovingPointAlert$.next(true);
                ComplexShapeCreator.movingPointAlert$.next("ComplexShapeCreator IS NOT THE CHOSEN SHAPE!");
                return;
            }
        }
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.POINT);
        let pointIds = [];
        let n = ComplexShapeCreator.currentPoints.length;
        for (let i = 0; i < n; i++) {
            pointIds.push(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnCanvas(ComplexShapeCreator.currentPoints[i][0], ComplexShapeCreator.currentPoints[i][1]));
        }
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.SEGMENT);
        let side1, side2, side3, maxLen, p1, p2, p3;
        switch (ComplexShapeCreator.polygonType) {
            case DependeciesSetToSet.ISOSCELES_ACUTE_TRIANGLE:
                for (let i = 0; i < 3; i++) {
                    if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[i], ComplexShapeCreator.currentPoints[(i + 1) % 3]]), ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[i], ComplexShapeCreator.currentPoints[(i + 2) % 3]]), 1.0)) {
                        let p1 = pointIds[i];
                        let p2 = pointIds[(i + 1) % 3];
                        let p3 = pointIds[(i + 2) % 3];
                        pointIds = [p3, p2, p1];
                        break;
                    }
                }
                for (let i = 0; i < 3; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 3]);
                }
                // [base vertex 1, base vertex 2, top vertex]
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.ISOSCELES_ACUTE_TRIANGLE);
                break;
            case DependeciesSetToSet.EQUILATERAL_TRIANGLE:
                for (let i = 0; i < 3; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 3]);
                }
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.EQUILATERAL_TRIANGLE);
                break;
            case DependeciesSetToSet.SCALENE_RIGHT_TRIANGLE:
                side1 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[0], ComplexShapeCreator.currentPoints[1]]);
                side2 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[1], ComplexShapeCreator.currentPoints[2]]);
                side3 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[2], ComplexShapeCreator.currentPoints[0]]);
                maxLen = Math.max(side1, side2, side3);
                p1 = pointIds[0];
                p2 = pointIds[1];
                p3 = pointIds[2];
                if (maxLen == side1) {
                    pointIds = [p3, p2, p1];
                }
                else if (maxLen == side2) {
                    pointIds = [p1, p2, p3];
                }
                else {
                    pointIds = [p2, p3, p1];
                }
                for (let i = 0; i < 3; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 3]);
                }
                // [right angle vertex, hypotenuse vertex 1, hypotenuse vertex 2]
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.SCALENE_RIGHT_TRIANGLE);
                break;
            case DependeciesSetToSet.ISOSCELES_RIGHT_TRIANGLE:
                side1 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[0], ComplexShapeCreator.currentPoints[1]]);
                side2 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[1], ComplexShapeCreator.currentPoints[2]]);
                side3 = ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[2], ComplexShapeCreator.currentPoints[0]]);
                maxLen = Math.max(side1, side2, side3);
                p1 = pointIds[0];
                p2 = pointIds[1];
                p3 = pointIds[2];
                if (maxLen == side1) {
                    pointIds = [p3, p2, p1];
                }
                else if (maxLen == side2) {
                    pointIds = [p1, p2, p3];
                }
                else {
                    pointIds = [p2, p3, p1];
                }
                for (let i = 0; i < 3; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 3]);
                }
                // [right angle vertex, hypotenuse vertex 1, hypotenuse vertex 2]
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.ISOSCELES_RIGHT_TRIANGLE);
                break;
            case DependeciesSetToSet.OBTUSE_ISOSCELES_TRIANGLE:
                for (let i = 0; i < 3; i++) {
                    if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[i], ComplexShapeCreator.currentPoints[(i + 1) % 3]]), ComplexShapeCreator.calculateSideLength([ComplexShapeCreator.currentPoints[i], ComplexShapeCreator.currentPoints[(i + 2) % 3]]), 1.0)) {
                        let p1 = pointIds[i];
                        let p2 = pointIds[(i + 1) % 3];
                        let p3 = pointIds[(i + 2) % 3];
                        pointIds = [p3, p2, p1];
                        break;
                    }
                }
                for (let i = 0; i < 3; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 3]);
                }
                // [base vertex 1, base vertex 2, top vertex]
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.OBTUSE_ISOSCELES_TRIANGLE);
                break;
            case DependeciesSetToSet.SQUARE:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // points sorted clockwise or counter clockwise
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.SQUARE);
                break;
            case DependeciesSetToSet.RECTANGLE:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // points sorted clockwise or counter clockwise
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.RECTANGLE);
                break;
            case DependeciesSetToSet.REGULAR_POLYGON:
                for (let i = 0; i < pointIds.length; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % pointIds.length]);
                }
                // points sorted clockwise or counter clockwise
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.REGULAR_POLYGON);
                break;
            case DependeciesSetToSet.PARALLELOGRAM:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // points sorted clockwise or counter clockwise
                // pointIds[0] with pointIds[2] create axis of symmetry
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.PARALLELOGRAM);
                break;
            case DependeciesSetToSet.KITE:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // points sorted clockwise or counter clockwise
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.KITE);
                break;
            case DependeciesSetToSet.RHOMBUS:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // points sorted clockwise or counter clockwise
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.RHOMBUS);
                break;
            case DependeciesSetToSet.SCALENE_TRAPEZOID:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // points sorted clockwise or counter clockwise
                // pointIds[0] with pointIds[1] and pointIds[2] with pointIds[3] are bases
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.SCALENE_TRAPEZOID);
                break;
            case DependeciesSetToSet.ISOSCELES_TRAPEZOID:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // points sorted clockwise or counter clockwise
                // pointIds[0] with pointIds[1] and pointIds[2] with pointIds[3] are bases
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.ISOSCELES_TRAPEZOID);
                break;
            case DependeciesSetToSet.RIGHT_TRAPEZOID:
                for (let i = 0; i < 4; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % 4]);
                }
                // pointIds[0] with pointIds[1] and pointIds[2] with pointIds[3] are bases
                // points sorted clockwise or counter clockwise
                _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.setPolygonType(pointIds, _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.PolygonTypeEnum.RIGHT_TRAPEZOID);
                break;
            default:
                for (let i = 0; i < n; i++) {
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[i]);
                    _canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.CanvasManagerInterface.clickedOnPoint(pointIds[(i + 1) % n]);
                }
                break;
        }
        ComplexShapeCreator.cancelConfiguring();
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.setCurrentyCreatedShape(_canvas_manager_interface__WEBPACK_IMPORTED_MODULE_1__.ShapeToCreateEnum.NONE);
    }
    /**
     * Changing side of polygon which is fixed. Updating available transformations
     */
    static changeSide() {
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.deleteMovingPromptingPoint();
        ComplexShapeCreator.transformationsCounter = (ComplexShapeCreator.transformationsCounter + 1) % ComplexShapeCreator.availableTransformations.length;
        ComplexShapeCreator.availableTransformationType$.next(ComplexShapeCreator.availableTransformations[ComplexShapeCreator.transformationsCounter]);
        ComplexShapeCreator.currentPoints = ComplexShapeCreator.startVertices.map((el) => { return el; });
        ComplexShapeCreator.displayMovingPointAlert$.next(false);
        ComplexShapeCreator.movingPointAlert$.next("");
        ComplexShapeCreator.calculateTransformations();
    }
    /**
     * Reflection relative to the line drawn by the {@link ComplexShapeCreator.fixedVertices} of {@link ComplexShapeCreator.currentPoints}
     */
    static mirrorImageX() {
        let fs = ComplexShapeCreator.fixedVertices;
        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(fs[0][0] - fs[1][0], 0, 0.1)) {
            for (let i = 0; i < ComplexShapeCreator.currentPoints.length; i++) {
                let p = ComplexShapeCreator.currentPoints[i];
                let b = fs[0][0];
                if (!_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(b - p[0], 0, 0.1)) {
                    ComplexShapeCreator.currentPoints[i] = [2 * b - p[0], p[1]];
                }
            }
        }
        else {
            let a = (fs[0][1] - fs[1][1]) / (fs[0][0] - fs[1][0]);
            let b = fs[0][1] - a * fs[0][0];
            for (let i = 0; i < ComplexShapeCreator.currentPoints.length; i++) {
                let p = ComplexShapeCreator.currentPoints[i];
                let x = ((1 - a * a) / (a * a + 1)) * p[0] + (2 * a / ((a * a + 1))) * (p[1] - b);
                let y = ((a * a - 1) / (a * a + 1)) * (p[1] - b) + (2 * a * p[0]) / (a * a + 1) + b;
                ComplexShapeCreator.currentPoints[i] = [x, y];
            }
        }
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.deleteMovingPromptingPoint();
        ComplexShapeCreator.calculateTransformations();
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
    }
    /**
     * Reflection relative to the perpendicular line to line drawn by the {@link ComplexShapeCreator.fixedVertices} of {@link ComplexShapeCreator.currentPoints}
     */
    static mirrorImageY() {
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.deleteMovingPromptingPoint();
        ComplexShapeCreator.fixedVerticesStartPoint = (ComplexShapeCreator.fixedVerticesStartPoint + 1) % 2;
        ComplexShapeCreator.calculateTransformations();
        ComplexShapeCreator.mirrorImageX();
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.deleteMovingPromptingPoint();
        ComplexShapeCreator.calculateTransformations();
    }
    /**
     * Translating of {@link ComplexShapeCreator.currentPoints} by vector [x, y]
     * @param x first vector component
     * @param y second vector component
     * @param in_units true if values are in units, false otherwise
     */
    static translatePoints(x, y, in_units) {
        if (in_units) {
            let calculatedUnit = ComplexShapeCreator.getUnit();
            x *= calculatedUnit;
            y *= calculatedUnit;
        }
        for (let i = 0; i < ComplexShapeCreator.currentPoints.length; i++) {
            let p = ComplexShapeCreator.currentPoints[i];
            ComplexShapeCreator.currentPoints[i] = [p[0] + x, p[1] + y];
        }
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
    }
    /**
     * Rotating {@link ComplexShapeCreator.currentPoints} by angle
     * @param angle value of angle
     * @param clockwise true if clockwise rotation, false if counter-clockwise rotation
     * @param radians true if angle value is in radians, false if angle value is in degrees
     */
    static rotatePoints(angle, clockwise, radians) {
        // p.x' = cos(angle) * (p.x - cx) - sin(angle) * (p.y - cy) + cx
        // p.y' = sin(angle) * (p.x - cx) + cos(angle) * (p.y - cy) + cy
        // counter-clockwise => sin(-15deg) = -sin(15deg) and cos(-15deg) = cos(15deg)
        let sinAngle, cosAngle;
        if (radians) {
            sinAngle = Math.sin(angle);
            cosAngle = Math.cos(angle);
        }
        else {
            sinAngle = Math.sin(angle * Math.PI / 180.0);
            cosAngle = Math.cos(angle * Math.PI / 180.0);
        }
        if (!clockwise) {
            sinAngle *= -1;
        }
        let centroid = ComplexShapeCreator.calculateCentroid(ComplexShapeCreator.currentPoints);
        for (let i = 0; i < ComplexShapeCreator.currentPoints.length; i++) {
            let p = ComplexShapeCreator.currentPoints[i];
            let t1 = cosAngle * (p[0] - centroid[0]);
            let t2 = sinAngle * (p[1] - centroid[1]);
            let t3 = sinAngle * (p[0] - centroid[0]);
            let t4 = cosAngle * (p[1] - centroid[1]);
            ComplexShapeCreator.currentPoints[i] = [centroid[0] + t1 - t2, centroid[1] + t3 + t4];
        }
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
    }
    /**
     * Scaling {@link ComplexShapeCreator.currentPoints} with respect to lines parallel and perpendicular to {@link ComplexShapeCreator.oxAxis}
     * @param kx scaling factor with respect to the parallel line
     * @param ky scaling factor with respect to the perpendicular line
     */
    static scalePoints(kx, ky) {
        let s = ComplexShapeCreator.currentPoints;
        let oxAxis = ComplexShapeCreator.oxAxis;
        let v = [s[oxAxis[1]][0] - s[oxAxis[0]][0], s[oxAxis[1]][1] - s[oxAxis[0]][1]];
        let v_module = ComplexShapeCreator.calculateSideLength([s[0], s[1]]);
        let nx = -v[1] / v_module;
        let ny = v[0] / v_module;
        let centroid = ComplexShapeCreator.calculateCentroid(ComplexShapeCreator.currentPoints);
        // direction perpendicular to oxAxis
        for (let i = 0; i < ComplexShapeCreator.currentPoints.length; i++) {
            let p = ComplexShapeCreator.currentPoints[i];
            let newX = (1 + (ky - 1) * nx * nx) * (p[0] - centroid[0]) + ((ky - 1) * nx * ny) * (p[1] - centroid[1]) + centroid[0];
            let newY = ((ky - 1) * nx * ny) * (p[0] - centroid[0]) + (1 + (ky - 1) * ny * ny) * (p[1] - centroid[1]) + centroid[1];
            ComplexShapeCreator.currentPoints[i] = [newX, newY];
        }
        nx = v[0] / v_module;
        ny = v[1] / v_module;
        // direction parallel to oxAxis
        for (let i = 0; i < ComplexShapeCreator.currentPoints.length; i++) {
            let p = ComplexShapeCreator.currentPoints[i];
            let newX = (1 + (kx - 1) * nx * nx) * (p[0] - centroid[0]) + ((kx - 1) * nx * ny) * (p[1] - centroid[1]) + centroid[0];
            let newY = ((kx - 1) * nx * ny) * (p[0] - centroid[0]) + (1 + (kx - 1) * ny * ny) * (p[1] - centroid[1]) + centroid[1];
            ComplexShapeCreator.currentPoints[i] = [newX, newY];
        }
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
    }
    /**
     * Inversion of {@link ComplexShapeCreator.currentPoints} with respect to the mid perpendicular of segment created by 2 first points of {@link ComplexShapeCreator.currentPoints}
     */
    static reverse() {
        let p0 = ComplexShapeCreator.currentPoints[0];
        let p1 = ComplexShapeCreator.currentPoints[1];
        let theta = Math.atan2(p1[1] - p0[1], p1[0] - p0[0]);
        if (Math.abs(theta) < 0.5) { // under ComplexShapeCreator threshold trigonometric functions become inaccurate - creating bigger difference
            ComplexShapeCreator.rotatePoints(1, false, true);
            p0 = ComplexShapeCreator.currentPoints[0];
            p1 = ComplexShapeCreator.currentPoints[1];
            theta = Math.atan2(p1[1] - p0[1], p1[0] - p0[0]);
        }
        ComplexShapeCreator.rotatePoints(theta, false, true);
        p1 = ComplexShapeCreator.currentPoints[1];
        let p2 = ComplexShapeCreator.currentPoints[2];
        let p3 = ComplexShapeCreator.currentPoints[3];
        let dx = p2[0] - p1[0];
        let dy = p2[1] - p3[1];
        ComplexShapeCreator.currentPoints[0][0] += dx;
        ComplexShapeCreator.currentPoints[1][0] += dx;
        ComplexShapeCreator.currentPoints[2][0] -= dx;
        ComplexShapeCreator.currentPoints[3][0] -= dx;
        ComplexShapeCreator.currentPoints[0][1] -= dy;
        ComplexShapeCreator.currentPoints[1][1] -= dy;
        ComplexShapeCreator.currentPoints[2][1] += dy;
        ComplexShapeCreator.currentPoints[3][1] += dy;
        ComplexShapeCreator.rotatePoints(theta, true, true);
    }
    /**
     * Setting coordinates of moving point
     * @param x X coordinate to set
     * @param y Y coordinate to set
     */
    static setMovingPointCoordinate(x, y) {
        ComplexShapeCreator.currentPoints[ComplexShapeCreator.parsedSidesOrder[ComplexShapeCreator.transformationsCounter][2]] = [x, y];
        _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.drawPromptingPolygon(ComplexShapeCreator.currentPoints);
    }
    /**
   * Converting point coordinates from normal values to unit values using in {@link ComplexShapeCreator.fullConfigurePolygon}
   * @param point array with point coordinates
   * @returns array with converted point coordinates to unit form
   */
    static toUnit(point) {
        let cx = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getWidth() / 2;
        let cy = _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.getHeight() / 2;
        let unit = ComplexShapeCreator.getUnit();
        return [(point[0] - cx) / unit, (point[1] - cy) / unit];
    }
    /**
     * Calculating length of side
     * @param ends array with arrays representing point coordinates
     * @returns length of side
     */
    static calculateSideLength(ends) {
        let dx = ends[0][0] - ends[1][0];
        let dy = ends[0][1] - ends[1][1];
        return Math.sqrt(dx * dx + dy * dy);
    }
    /**
     * Finding the point on the circle closest to a given point
     * @param p X coordinate of circle center
     * @param q Y coordinate of circle center
     * @param r circle radius length
     * @param x X coordinate of given point
     * @param y Y coordinate of given point
     * @returns array with result point coordnates
     */
    static getCoordsOnCircle(p, q, r, x, y) {
        if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(x - p, 0, 0.1)) {
            if (y > q) {
                return [p, q + r];
            }
            else {
                [p, q - r];
            }
        }
        else {
            let a = (y - q) / (x - p);
            let b = y - a * x;
            if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(a, 0, 0.01)) {
                a = 0;
            }
            if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(b, 0, 0.01)) {
                b = 0;
            }
            let A = 1 + a * a;
            let B = -2 * p + 2 * a * b - 2 * a * q;
            let C = p * p + b * b + q * q - r * r - 2 * b * q;
            let delta = B * B - 4 * A * C;
            if (_canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.compareNumbers(delta, 0, 0.01)) {
                delta = 0;
            }
            if (x < p) {
                let x1 = (-B - Math.sqrt(delta)) / (2 * A);
                let y1 = a * x1 + b;
                return [x1, y1];
            }
            else {
                let x2 = (-B + Math.sqrt(delta)) / (2 * A);
                let y2 = a * x2 + b;
                return [x2, y2];
            }
        }
        return [x, y];
    }
    /**
     * Checking if angle is obtuse
     * @param p1 array with coordinates of first point
     * @param p2 array with coordinates of second point - vertex
     * @param p3 array with coordinates of third point
     * @returns true if angle is obtuse, false otherwise
     */
    static angleIsObtuse(p1, p2, p3) {
        let s1 = ComplexShapeCreator.calculateSideLength([p1, p2]);
        let s2 = ComplexShapeCreator.calculateSideLength([p2, p3]);
        let s3 = ComplexShapeCreator.calculateSideLength([p3, p1]);
        let sidesto2 = [s1 * s1, s2 * s2, s3 * s3];
        return (sidesto2[0] + sidesto2[1]) < sidesto2[2];
    }
    /**
     * Checking if triangle is acute triangle
     * @param vertices array with arrays representing triangle vertices
     * @returns true if triangle is acute, false otherwise
     */
    static triangleIsAcute(vertices) {
        let s1 = ComplexShapeCreator.calculateSideLength([vertices[0], vertices[1]]);
        let s2 = ComplexShapeCreator.calculateSideLength([vertices[1], vertices[2]]);
        let s3 = ComplexShapeCreator.calculateSideLength([vertices[2], vertices[0]]);
        let sidesto2 = [s1 * s1, s2 * s2, s3 * s3];
        for (let i = 0; i < 3; i++) {
            if (sidesto2[i] + sidesto2[(i + 1) % 3] < sidesto2[(i + 2) % 3])
                return false;
        }
        return true;
    }
    /**
     * Checking if triangle is obtuse angle
     * @param vertices array with arrays representing triangle vertices
     * @returns true if triangle is obtuse, false otherwise
     */
    static triangleIsObtuse(vertices) {
        let s1 = ComplexShapeCreator.calculateSideLength([vertices[0], vertices[1]]);
        let s2 = ComplexShapeCreator.calculateSideLength([vertices[1], vertices[2]]);
        let s3 = ComplexShapeCreator.calculateSideLength([vertices[2], vertices[0]]);
        let sidesto2 = [s1 * s1, s2 * s2, s3 * s3];
        for (let i = 0; i < 3; i++) {
            if (sidesto2[i] + sidesto2[(i + 1) % 3] < sidesto2[(i + 2) % 3])
                return true;
        }
        return false;
    }
    /**
     * Process data after selection new shape.
     */
    static afterClickedOnShape() {
        ComplexShapeCreator.counter += 1;
        if (ComplexShapeCreator.counter == ComplexShapeCreator.shapesToClick.length) {
            ComplexShapeCreator.cancelChoosing();
            ComplexShapeCreator.functionToDo.apply(null);
        }
        else {
            let shapesToActivate = [];
            ComplexShapeCreator.segmentEndsChoosing.forEach(element => {
                shapesToActivate.push(element);
            });
            ComplexShapeCreator.shapesClicked.forEach(element => {
                if (element.length == 1) {
                    shapesToActivate.push(element[0]);
                }
                else {
                    shapesToActivate.push(element[0]);
                    shapesToActivate.push(element[1]);
                }
            });
            _canvas__WEBPACK_IMPORTED_MODULE_0__.Canvas.activateShapes(shapesToActivate);
            ComplexShapeCreator.instructionToSet$.next(ComplexShapeCreator.getInstructions());
        }
    }
    /**
     * Get text of instructions to display on dashboard.
     * @returns text of instructions to display on dashboard
     */
    static getInstructions() {
        let instructions = 0;
        let result = "";
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.EXISTING_POINT)) {
            result += "choose point";
            instructions += 1;
        }
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.NEW_POINT_CLICK_ON_CANVAS)) {
            if (instructions > 0)
                result += " or ";
            result += "click on canvas";
            instructions += 1;
        }
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.NEW_POINT_CLICK_ON_SEGMENT)) {
            if (instructions > 0)
                result += " or ";
            result += "click on segment";
            instructions += 1;
        }
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.NEW_POINT_CLICK_ON_CIRCLE)) {
            if (instructions > 0)
                result += " or ";
            result += "click on circle";
            instructions += 1;
        }
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.SEGMENT)) {
            if (instructions > 0)
                result += " or ";
            result += "choose segment";
            instructions += 1;
        }
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.SEGMENT_ENDS)) {
            if (instructions > 0)
                result += " or ";
            result += "choose segment ends";
            instructions += 1;
        }
        if (ComplexShapeCreator.shapesToClick[ComplexShapeCreator.counter].includes(ShapeToSelect.CIRCLE)) {
            if (instructions > 0)
                result += " or ";
            result += "choose circle";
            instructions += 1;
        }
        return result;
    }
    /**
     * Calculating centroid of polygon
     * @param points array with 2-element arrays representing polygon vertices
     * @returns 2-element array with X and Y coordinate of centroid
     */
    static calculateCentroid(points) {
        let centroidX = 0, centroidY = 0, signedArea = 0;
        for (let i = 0; i < points.length; i++) {
            let x0 = points[i][0];
            let y0 = points[i][1];
            let x1 = points[(i + 1) % points.length][0];
            let y1 = points[(i + 1) % points.length][1];
            let A = (x0 * y1) - (x1 * y0);
            signedArea += A;
            centroidX += (x0 + x1) * A;
            centroidY += (y0 + y1) * A;
        }
        signedArea *= 0.5;
        centroidX = (centroidX) / (6 * signedArea);
        centroidY = (centroidY) / (6 * signedArea);
        return [centroidX, centroidY];
    }
}
ComplexShapeCreator.displayComplexShapeCreator$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(false);
/** Behavior Subject variable used to define if instructions should be displayed on dashboard. */
ComplexShapeCreator.displayInstructions$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(false);
/** Behavior Subject variable used to define if buttons to modify creating polygon should be displayed on dashboard. */
ComplexShapeCreator.displayPolygonMovement$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(false);
/** Behavior Subject variable used to define title of instructions displayed on dashboard. */
ComplexShapeCreator.titleToSet$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject("");
/** Behavior Subject variable used to define instructions displayed on dashboard. */
ComplexShapeCreator.instructionToSet$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject("");
/** Behavior Subject variable used to define type of available configuration on dashboard. */
ComplexShapeCreator.availableTransformationType$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(0);
/** Behavior Subject variable used to define if moving point alert should be displayed. */
ComplexShapeCreator.displayMovingPointAlert$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(false);
/** Behavior Subject variable used to define moving point alert displayed on dashboard */
ComplexShapeCreator.movingPointAlert$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject("");
/** Constant value used to scale the size of created shapes.
 * ComplexShapeCreator makes the size of the created shapes dependent of the size of the canvas. */
ComplexShapeCreator.unitDivisor = 44;


/***/ }),

/***/ 5436:
/*!**********************************************************************!*\
  !*** ./src/app/dashboard/shapes-creator/shapes-creator.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShapesCreatorComponent": () => (/* binding */ ShapesCreatorComponent)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 6491);
/* harmony import */ var _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./complex-shape-creator/complex-shapes-creator */ 7890);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2316);



function ShapesCreatorComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](3, "app-point");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "app-segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](5, "app-line");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](6, "app-semiline");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](7, "app-circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](8, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](10, "app-perpendicularity");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](11, "app-parallelism");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](12, "app-mid-perpendicular");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](13, "app-bisector");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](14, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](16, "app-set-length");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](17, "app-set-angle-value");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](18, "app-divide-segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](19, "app-divide-angle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](20, "app-tangent-circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](21, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](23, "app-equal-segments");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](24, "app-equal-angles");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](25, "app-inscribed-circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](26, "app-circumscribed-circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](27, "app-escribed-circle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](28, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](29, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](30, "app-triangle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](31, "app-square");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](32, "app-rectangle");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](33, "app-polygon");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](34, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](35, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](36, "app-parallelogram");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](37, "app-kite");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](38, "app-rhombus");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](39, "app-trapezoid");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](40, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](41, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](42, "app-median");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](43, "app-altitude");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](44, "app-mid-segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](45, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](46, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](47, "app-process-data");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](48, "app-save-scheme");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](49, "app-load-scheme");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](50, "app-clear-canvas");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](51, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
function ShapesCreatorComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "app-complex-shape-creator");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
class ShapesCreatorComponent {
    constructor() {
        this.displayComplexShapeCreator = false;
        _complex_shape_creator_complex_shapes_creator__WEBPACK_IMPORTED_MODULE_0__.ComplexShapeCreator.displayComplexShapeCreator$.subscribe(value => {
            this.displayComplexShapeCreator = value;
        });
    }
    ngOnInit() { }
}
ShapesCreatorComponent.displayShapesCreator$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(false);
ShapesCreatorComponent.ɵfac = function ShapesCreatorComponent_Factory(t) { return new (t || ShapesCreatorComponent)(); };
ShapesCreatorComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ShapesCreatorComponent, selectors: [["app-shapes-creator"]], decls: 2, vars: 2, consts: [["style", "height: 100%; width: 100%;", 4, "ngIf"], [2, "height", "100%", "width", "100%"], [1, "d-flex", "flex-column", 2, "height", "100%", "width", "100%"], [1, "d-flex", "flex-row", "icons-row"], [1, "spacer"]], template: function ShapesCreatorComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, ShapesCreatorComponent_div_0_Template, 52, 0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ShapesCreatorComponent_div_1_Template, 2, 0, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.displayComplexShapeCreator);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.displayComplexShapeCreator);
    } }, styles: [".my-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icons-row[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 9%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.spacer[_ngcontent-%COMP%] {\r\n    width: 100%;\r\n    height: 3%;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #5E738E;\r\n    border-radius: 4px !important;\r\n}\r\n\r\n.icon-button[_ngcontent-%COMP%]:hover {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n.icon-button-clicked[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    border: medium solid #0AC5A8;\r\n}\r\n\r\n#canvas[_ngcontent-%COMP%] {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #FFF;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%] {\r\n    background-color: #2C3C5B;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn-static[_ngcontent-%COMP%] {\r\n    background-color: #EBEBEB;\r\n    color: #FFFFFF;\r\n    border: medium solid #2C3C5B !important;\r\n    margin: 1.5%;\r\n}\r\n\r\n.modal-btn[_ngcontent-%COMP%]:hover {\r\n    color: #0AC5A8;\r\n    border: medium solid #0AC5A8 !important;\r\n}\r\n\r\n.modal-title[_ngcontent-%COMP%] {\r\n    display: flex; \r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #EBEBEB;\r\n    color: #2C3C5B;\r\n    border-bottom: medium solid #2C3C5B;\r\n}\r\n\r\n.loader[_ngcontent-%COMP%] {\r\n    border: 16px solid #2C3C5B; \r\n    border-top: 16px solid #0AC5A8;\r\n    border-radius: 50%;\r\n    width: 20vh;\r\n    height: 20vh;\r\n    animation: spin 2s linear infinite;\r\n  }\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n.ui-blocker[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFVBQVU7SUFDViw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCx1Q0FBdUM7SUFDdkMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsdUNBQXVDO0lBQ3ZDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtDQUFrQztFQUNwQzs7QUFFRjtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtBQUN0Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7QUFDakMiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzNDNUI7XHJcbiAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4O1xyXG59XHJcblxyXG4uaWNvbnMtcm93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5JTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzJTtcclxufVxyXG5cclxuLmljb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICM1RTczOEU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tYnV0dG9uOmhvdmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbi5pY29uLWJ1dHRvbi1jbGlja2VkIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn1cclxuXHJcbiNjYW52YXMge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tb2RhbC1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDM0M1QjtcclxuICAgIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYm9yZGVyOiBtZWRpdW0gc29saWQgIzJDM0M1QiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxLjUlO1xyXG59XHJcblxyXG4ubW9kYWwtYnRuLXN0YXRpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFQkVCO1xyXG4gICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMkMzQzVCICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDEuNSU7XHJcbn1cclxuXHJcbi5tb2RhbC1idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICMwQUM1QTg7XHJcbiAgICBib3JkZXI6IG1lZGl1bSBzb2xpZCAjMEFDNUE4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tb2RhbC10aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQkVCRUI7XHJcbiAgICBjb2xvcjogIzJDM0M1QjtcclxuICAgIGJvcmRlci1ib3R0b206IG1lZGl1bSBzb2xpZCAjMkMzQzVCO1xyXG59XHJcblxyXG4ubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMTZweCBzb2xpZCAjMkMzQzVCOyBcclxuICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzBBQzVBODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyMHZoO1xyXG4gICAgaGVpZ2h0OiAyMHZoO1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcblxyXG4udWktYmxvY2tlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59Il19 */"] });


/***/ }),

/***/ 8458:
/*!******************************************!*\
  !*** ./src/app/login/login.component.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LoginComponent": () => (/* binding */ LoginComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/user.service */ 3071);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ 1707);



class LoginComponent {
    constructor(_userService) {
        this._userService = _userService;
    }
    ngOnInit() {
        this.user = {
            username: '',
            password: ''
        };
    }
    login() {
        this._userService.login({ 'username': this.user.username, 'password': this.user.password });
    }
    loginAsAnonymousUser() {
        this._userService.login({ 'username': 'Anonymous', 'password': 'anonymous-password' });
    }
}
LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_services_user_service__WEBPACK_IMPORTED_MODULE_0__.UserService)); };
LoginComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: LoginComponent, selectors: [["app-login"]], decls: 29, vars: 3, consts: [[1, "d-flex", "justify-content-center", 2, "height", "100vh"], [1, "container", "d-flex", "h-100"], [1, "row", "justify-content-center", "align-self-center", 2, "border", "medium solid #5E738E"], [1, "d-flex", "flex-column", 2, "width", "40%"], ["src", "/static/imgs/MeetKundeLogoWhite.svg", "alt", "MeetKunde Logo"], [1, "d-flex", "flex-column"], [1, "container", "h-100"], [1, "row", "h-100", "justify-content-center", "align-items-center"], [1, "colum", "justify-content-start"], [1, "col-sm-4", 2, "margin-bottom", "20px"], ["type", "text", "name", "login-username", 3, "ngModel", "ngModelChange"], ["type", "password", "name", "login-password", 3, "ngModel", "ngModelChange"], [1, "btn", "my-btn", 3, "click"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "img", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](11, "Username:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](12, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "input", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function LoginComponent_Template_input_ngModelChange_13_listener($event) { return ctx.user.username = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](16, "Password:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](17, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "input", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function LoginComponent_Template_input_ngModelChange_18_listener($event) { return ctx.user.password = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](20, "button", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LoginComponent_Template_button_click_20_listener() { return ctx.login(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](21, " Log In ");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "button", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LoginComponent_Template_button_click_23_listener() { return ctx.loginAsAnonymousUser(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](24, " Be Anonymous ");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](25, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](26, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](27, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](28);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.user.username);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.user.password);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx._userService.error);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgModel], styles: ["[_nghost-%COMP%] {\r\n  display: block;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%] {\r\n  background-color: #2C3C5B;\r\n  color: #FFFFFF;\r\n  border: medium solid #2C3C5B;\r\n}\r\n\r\n.my-btn[_ngcontent-%COMP%]:hover {\r\n  color: #0AC5A8;\r\n  border: medium solid #0AC5A8;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0VBQ1IsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsY0FBYztFQUNkLDRCQUE0QjtBQUM5QiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIG1pbi13aWR0aDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubXktYnRuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMkMzQzVCO1xyXG4gIGNvbG9yOiAjRkZGRkZGO1xyXG4gIGJvcmRlcjogbWVkaXVtIHNvbGlkICMyQzNDNUI7XHJcbn1cclxuXHJcbi5teS1idG46aG92ZXIge1xyXG4gIGNvbG9yOiAjMEFDNUE4O1xyXG4gIGJvcmRlcjogbWVkaXVtIHNvbGlkICMwQUM1QTg7XHJcbn0iXX0= */"] });


/***/ }),

/***/ 4604:
/*!********************************************!*\
  !*** ./src/app/services/scheme.service.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SchemeService": () => (/* binding */ SchemeService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 3882);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _user_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user.service */ 3071);




class SchemeService {
    constructor(http, _userService) {
        this.http = http;
        this._userService = _userService;
    }
    list() {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + this._userService.accessToken
            })
        };
        return this.http.get('/api/schemes', httpOptions);
    }
    create(scheme) {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + this._userService.accessToken
            })
        };
        return this.http.post('/api/schemes', JSON.stringify(scheme), httpOptions);
    }
}
SchemeService.ɵfac = function SchemeService_Factory(t) { return new (t || SchemeService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_user_service__WEBPACK_IMPORTED_MODULE_0__.UserService)); };
SchemeService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: SchemeService, factory: SchemeService.ɵfac });


/***/ }),

/***/ 3071:
/*!******************************************!*\
  !*** ./src/app/services/user.service.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserService": () => (/* binding */ UserService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ 3882);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2316);



class UserService {
    constructor(http) {
        this.http = http;
        this.httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpHeaders({ 'Content-Type': 'application/json' })
        };
        this.accessToken = null;
        this.refreshToken = null;
        this.token_expires = null;
        this.username = null;
        this.error = null;
    }
    login(user) {
        this.http.post('/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(data => {
            if (data instanceof ArrayBuffer) {
                return;
            }
            const token1 = data['access'];
            const token2 = data['refresh'];
            this.updateData(token1, token2);
            this.username = user['username'];
        }, err => {
            this.error = err['error']['detail'];
        });
    }
    refresh() {
        this.http.post('/api-token-refresh/', JSON.stringify({ refresh: this.refreshToken }), this.httpOptions).subscribe(data => {
            if (data instanceof ArrayBuffer) {
                return;
            }
            const token = data['access'];
            this.updateData(token, this.refreshToken);
        }, err => {
            this.error = err['error']['detail'];
        });
    }
    logout() {
        this.accessToken = null;
        this.refreshToken = null;
        this.token_expires = null;
        this.username = null;
    }
    updateData(accessToken, refreshToken) {
        this.accessToken = accessToken;
        this.refreshToken = refreshToken;
        this.error = null;
        // decode the token to read the username and expiration timestamp
        const token_parts = this.accessToken.split(/\./);
        const token_decoded = JSON.parse(window.atob(token_parts[1]));
        this.token_expires = new Date(token_decoded.exp * 1000);
    }
}
UserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpClient)); };
UserService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: UserService, factory: UserService.ɵfac });


/***/ }),

/***/ 2340:
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "environment": () => (/* binding */ environment)
/* harmony export */ });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false,
    WS_ENDPOINT: 'ws://127.0.0.1:8000/ws/'
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ 4431:
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 1570);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app/app.module */ 6747);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ 2340);




if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.production) {
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.enableProdMode)();
}
_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.platformBrowser().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule)
    .catch(err => console.error(err));


/***/ }),

/***/ 8737:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 1142:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__(4431)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.js.map